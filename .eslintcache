[{"/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/src/App.js":"1","/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/src/Components/SSO/Auth.js":"2","/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/src/Components/NavBar/MobileBar.js":"3","/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/src/Components/Pages/Home/Home.js":"4","/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/src/Components/Pages/Map/Map.js":"5","/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/src/Components/Pages/Admin/Admin.js":"6","/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/src/Components/Pages/Favorites/Favorites.js":"7","/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/src/Components/Pages/Settings/ProfileSettings.js":"8","/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/src/Components/SSO/SignUp.js":"9","/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/src/Components/Pages/Home/Products.js":"10","/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/src/Components/Utils/Page.js":"11","/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/src/Components/NavBar/SideBar.js":"12","/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/src/Components/NavBar/TopBar.js":"13","/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/src/Components/SSO/LogIn.js":"14","/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/src/Components/Pages/Home/CardList.js":"15","/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/src/Components/Pages/Home/Search.js":"16","/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/src/Components/Pages/Home/Sort.js":"17","/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/src/Layout.js":"18","/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/src/Components/Utils/PopUp.js":"19","/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/src/Components/Pages/Map/Marker.js":"20","/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/src/Components/Pages/Home/Create.js":"21","/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/src/Components/Pages/Map/GoogleMap.js":"22","/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/src/Components/Pages/Home/Groupby.js":"23","/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/src/Components/Utils/PageBody.js":"24","/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/src/Components/Utils/Alert.js":"25","/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/src/index.js":"26","/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/src/Styles/MessagesMain.js":"27","/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/src/Components/SSO/Config.js":"28","/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/src/Components/SSO/Registration.js":"29","/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/src/API/API.js":"30","/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/src/Components/Pages/Chat/chat.js":"31","/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/src/Components/Pages/Home/Update.js":"32","/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/src/Components/NavBar/User.js":"33","/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/src/Components/Utils/PayPal.js":"34","/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/src/Components/Pages/Chat/SellerRoom.js":"35","/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/src/Components/Pages/Chat/ChatRoom.js":"36","/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/src/Components/Pages/Categories/Categories.js":"37","/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/src/Components/SSO/Welcome.js":"38","/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/src/Components/Pages/Chat/Notifications.js":"39"},{"size":989,"mtime":1622917841113,"results":"40","hashOfConfig":"41"},{"size":1526,"mtime":1623083597798,"results":"42","hashOfConfig":"41"},{"size":2286,"mtime":1623075472812,"results":"43","hashOfConfig":"41"},{"size":705,"mtime":1622814998809,"results":"44","hashOfConfig":"41"},{"size":697,"mtime":1622814743851,"results":"45","hashOfConfig":"41"},{"size":4305,"mtime":1622917841118,"results":"46","hashOfConfig":"41"},{"size":2761,"mtime":1623075472818,"results":"47","hashOfConfig":"41"},{"size":9392,"mtime":1623077577867,"results":"48","hashOfConfig":"41"},{"size":4958,"mtime":1622889523477,"results":"49","hashOfConfig":"41"},{"size":5869,"mtime":1623073720901,"results":"50","hashOfConfig":"41"},{"size":1372,"mtime":1622800511616,"results":"51","hashOfConfig":"41"},{"size":4648,"mtime":1623084076425,"results":"52","hashOfConfig":"41"},{"size":2066,"mtime":1623084076426,"results":"53","hashOfConfig":"41"},{"size":3767,"mtime":1622734362044,"results":"54","hashOfConfig":"41"},{"size":15179,"mtime":1623085966687,"results":"55","hashOfConfig":"41"},{"size":3317,"mtime":1622811000993,"results":"56","hashOfConfig":"41"},{"size":481,"mtime":1622463841300,"results":"57","hashOfConfig":"41"},{"size":9460,"mtime":1623084076431,"results":"58","hashOfConfig":"41"},{"size":14499,"mtime":1623073720904,"results":"59","hashOfConfig":"41"},{"size":1628,"mtime":1622463841303,"results":"60","hashOfConfig":"41"},{"size":8156,"mtime":1623075472819,"results":"61","hashOfConfig":"41"},{"size":10411,"mtime":1622814761730,"results":"62","hashOfConfig":"41"},{"size":2511,"mtime":1622463841297,"results":"63","hashOfConfig":"41"},{"size":1162,"mtime":1622463841312,"results":"64","hashOfConfig":"41"},{"size":509,"mtime":1623075472827,"results":"65","hashOfConfig":"41"},{"size":240,"mtime":1622463841319,"results":"66","hashOfConfig":"41"},{"size":3101,"mtime":1622801643886,"results":"67","hashOfConfig":"41"},{"size":1128,"mtime":1622725996250,"results":"68","hashOfConfig":"41"},{"size":981,"mtime":1622725996266,"results":"69","hashOfConfig":"41"},{"size":1739,"mtime":1623075472812,"results":"70","hashOfConfig":"41"},{"size":4270,"mtime":1623084076429,"results":"71","hashOfConfig":"41"},{"size":7196,"mtime":1623073720902,"results":"72","hashOfConfig":"41"},{"size":4076,"mtime":1623075472816,"results":"73","hashOfConfig":"41"},{"size":691,"mtime":1622463841312,"results":"74","hashOfConfig":"41"},{"size":424,"mtime":1623084076428,"results":"75","hashOfConfig":"41"},{"size":6932,"mtime":1623084076427,"results":"76","hashOfConfig":"41"},{"size":3915,"mtime":1622810636213,"results":"77","hashOfConfig":"41"},{"size":1492,"mtime":1622725996292,"results":"78","hashOfConfig":"41"},{"size":6877,"mtime":1623080682334,"results":"79","hashOfConfig":"41"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"83"},"q70wwr",{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"83"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"83"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"83"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"83"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"83"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"83"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"83"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"83"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"120","messages":"121","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"83"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"83"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"83"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"83"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"83"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"83"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"83"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"83"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"83"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"83"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"83"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"83"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"83"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"83"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"83"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"83"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"83"},"/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/src/App.js",["185"],"import React, { useState } from \"react\";\nimport { IntlProvider } from \"react-intl\";\nimport Layout from \"./Layout\";\nimport messages from \"./Styles/MessagesMain\";\nimport \"./Styles/App.scss\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport { AuthProvider } from \"./Components/SSO/Auth\";\n\nimport io from \"socket.io-client\";\nconst socket = io.connect(\"http://localhost:3000\");\n\nexport default function App() {\n  const [locale, setLocale] = useState(\"he\");\n  const [isActive, setActive] = useState(true);\n\n  return (\n    <AuthProvider>\n      <IntlProvider locale={locale} messages={messages[locale]}>\n        <BrowserRouter>\n          <Switch>\n            <Route path=\"/\">\n              <Layout\n                locale={locale}\n                setLocale={setLocale}\n                setActive={setActive}\n                isActive={isActive}\n              />\n            </Route>\n          </Switch>\n        </BrowserRouter>\n      </IntlProvider>\n    </AuthProvider>\n  );\n}\n",["186","187"],"/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/src/Components/SSO/Auth.js",[],"/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/src/Components/NavBar/MobileBar.js",["188"],"import { Link } from \"react-router-dom\";\nimport Icon from \"../../Assets/Images/ReBuyLogoTrans.png\";\nimport { FaInbox } from \"react-icons/fa\";\n\nexport default function MobileBar({\n  handleToggleSidebar,\n  notificationCount,\n  setNotificationCount,\n}) {\n  function notificationHandle() {\n    if (notificationCount > 0)\n      return (\n        <span\n          class=\"notification-count\"\n          style={{\n            backgroundColor: \"red\",\n            borderRadius: \"500px\",\n            padding: \"2px 4px\",\n            fontSize: \"10px\",\n            fontWeight: \"700\",\n            lineHeight: \"100%\",\n            right: \"-15px\",\n            top: \"5px\",\n          }}\n        >\n          {notificationCount}\n        </span>\n      );\n  }\n\n  return (\n    <div className=\"toggledBar\">\n      <div className=\"toggledBar-notch\" />\n      <table width=\"100%\">\n        <tr width=\"100%\">\n          <td width=\"10%\">\n            <div className=\"btn-toggle\" onClick={handleToggleSidebar}>\n              <div class=\"wrapper-menu\">\n                <div class=\"line-menu half start\" />\n                <div class=\"line-menu\" />\n                <div class=\"line-menu half end\" />\n              </div>\n            </div>\n          </td>\n          <td width=\"80%\">\n            <Link to=\"/\">\n              <div className=\"logodiv\">\n                <img className=\"yavologo\" src={Icon} alt=\"logo\" />\n              </div>\n            </Link>\n          </td>\n          <td width=\"10%\">\n            <Link to=\"/Notifications\">\n              <FaInbox color=\"#adafde\" size=\"25px\" />\n              {/* <div class=\"notification notify\">\n                {notificationHandle}\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  width=\"25\"\n                  height=\"25\"\n                  viewBox=\"0 0 24 24\"\n                  fill=\"none\"\n                  stroke=\"#ADAFDE\"\n                  stroke-width=\"2\"\n                  stroke-linecap=\"round\"\n                  stroke-linejoin=\"round\"\n                >\n                  <path d=\"M18 8A6 6 0 0 0 6 8c0 7-3 9-3 9h18s-3-2-3-9\"></path>\n                  <path d=\"M13.73 21a2 2 0 0 1-3.46 0\"></path>\n                </svg>\n              </div> */}\n            </Link>\n          </td>\n        </tr>\n      </table>\n    </div>\n  );\n}\n","/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/src/Components/Pages/Home/Home.js",[],"/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/src/Components/Pages/Map/Map.js",[],"/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/src/Components/Pages/Admin/Admin.js",[],"/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/src/Components/Pages/Favorites/Favorites.js",["189","190","191","192","193","194"],"import React, { useState, useEffect, useContext } from \"react\";\nimport Page from \"../../Utils/Page\";\nimport Card from \"react-bootstrap/Card\";\nimport { AuthContext } from \"../../SSO/Auth\";\nimport api from \"../../../API/API\";\nimport { useIntl } from \"react-intl\";\nimport CardList from \"../Home/CardList\";\n\nexport default function Favorites({ title, setTitle, setActive }) {\n  const [loading, setLoading] = useState(false);\n  const intl = useIntl();\n  const { currentUser } = useContext(AuthContext);\n  const [user, setUser] = useState(null);\n  const [products, setProducts] = useState(null);\n\n  useEffect(async () => {\n    if (!user) {\n      const response = await api.getUserById(currentUser?.email.toUpperCase());\n      if (!response)\n        response = await api.getUserById(currentUser?.email.toLowerCase());\n      console.log(response.data.data);\n      setUser(response.data.data);\n    } else {\n      setProducts(user.favorites);\n      console.log(user);\n    }\n  }, [user, products]);\n\n  return (\n    <FavoritesPage\n      title={intl.formatMessage({ id: \"MyFavorites\" })}\n      products={products}\n    />\n  );\n}\nexport function FavoritesPage({\n  users,\n  images,\n  products,\n  title,\n  setTitle,\n  setLoading,\n}) {\n  const deleteHandler = (productId) => {\n    // setProducts(\n    //   products.filter((product) => {\n    //     return product._id !== productId.data._id;\n    //   })\n    // );\n  };\n  return (\n    <Card\n      style={{\n        height: \"100%\",\n        alignItems: \"center\",\n        textAlign: \"center\",\n        border: \"none\",\n      }}\n    >\n      <Card.Header\n        className=\"userHeader\"\n        style={{\n          justifyContent: \"center\",\n        }}\n      >\n        <Card.Title\n          style={{\n            margin: \"1rem\",\n            width: \"80%\",\n            color: \"#147764\",\n            alignSelf: \"center\",\n          }}\n        >\n          {title}\n        </Card.Title>\n      </Card.Header>\n      <Card.Body style={{ alignItems: \"center\" }}>\n        {products ? (\n          <CardList\n            products={products}\n            users={users}\n            deleteHandler={deleteHandler}\n          />\n        ) : (\n          <Card\n            style={{\n              width: \"100%\",\n              height: \"50%\",\n              borderRadius: \"35px\",\n              alignItems: \"center\",\n              textAlign: \"center\",\n              display: \"flex\",\n              justifyContent: \"center\",\n              padding: \"10px\",\n              backgroundColor: \"rgba(0,0,50,0.1)\",\n            }}\n          >\n            <p> אין לך מוצרים מועדפים עדיין ! </p>\n            <p>אפשר להוסיף אותם בלחיצה על כוכב ליד כל מוצר</p>\n          </Card>\n        )}\n      </Card.Body>\n    </Card>\n  );\n}\n","/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/src/Components/Pages/Settings/ProfileSettings.js",["195","196","197","198","199","200","201","202","203","204","205"],"import React, { Component, useState, useContext, useEffect } from \"react\";\nimport { AuthContext, Admins } from \"../../SSO/Auth\";\nimport { useIntl } from \"react-intl\";\nimport MediaQuery from \"react-responsive\";\nimport { Form, Card, Dropdown } from \"react-bootstrap\";\nimport { FaPencilAlt } from \"react-icons/fa\";\nimport Person from \"@material-ui/icons/PersonRounded\";\nimport { Avatar, Button } from \"@material-ui/core\";\nimport api from \"../../../API/API\";\nimport CardList from \"../Home/CardList\";\nimport apis from \"../../../API/API\";\nimport Page from \"../../Utils/Page\";\nimport styled from \"styled-components\";\nimport Alert from \"../../Utils/Alert\";\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/storage\";\nconst storage = firebase.storage();\n\nconst InputText = styled.input.attrs({\n  className: \"form-control\",\n})`\n  margin: 0 auto;\n  width: 0;\n  text-align: center;\n`;\n\nexport default function ProfileSetting({\n  title,\n  setTitle,\n  intl,\n  user,\n  setUser,\n  name,\n  setName,\n  image,\n  setImage,\n}) {\n  const [loading, setLoading] = useState(false);\n  // console.log(loading);\n  return (\n    <Page\n      loading={loading}\n      title={title}\n      color={\"#fdeded\"}\n      setTitle={setTitle}\n      add={false}\n      FAB=\"none\"\n      dots={false}\n    >\n      <ProfileSettings\n        loading={loading}\n        setLoading={setLoading}\n        intl={intl}\n        user={user}\n        setUser={setUser}\n        name={name}\n        setName={setName}\n        image={image}\n        setImage={setImage}\n      />\n    </Page>\n  );\n}\n\nexport class ProfileSettings extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      products: [],\n      images: [],\n      users: [],\n      columns: [],\n      isLoading: this.props.loading,\n      imagePath: \"\",\n      setLoading: this.props.setLoading,\n      user: props.user,\n      setUser: props.setUser,\n      name: props.name,\n      setName: props.setName,\n      image: props.image,\n      setImage: props.setImage,\n    };\n  }\n\n  componentDidMount = async () => {\n    console.log(\"loading settings\");\n    console.log(this.state.isLoading);\n    try {\n      await api.getAllProducts().then((product) => {\n        this.setState({\n          products: product.data.data,\n        });\n      });\n      await api.getAllUsers().then((user) => {\n        this.setState({\n          users: user.data.data,\n        });\n      });\n    } catch (error) {\n      console.log(error);\n    }\n    this.state.setLoading(false);\n    console.log(this.state.isLoading);\n  };\n  searchHandler = (products) => {\n    this.setState({\n      products,\n    });\n  };\n  deleteHandler = (productId) => {\n    this.setState({\n      products: this.state.products.filter((product) => {\n        return product._id !== productId.data._id;\n      }),\n    });\n  };\n  render() {\n    const {\n      products,\n      images,\n      users,\n      setLoading,\n      user,\n      setUser,\n      name,\n      setName,\n      image,\n      setImage,\n    } = this.state;\n\n    return (\n      <Profile\n        products={products}\n        images={images}\n        users={users}\n        setLoading={setLoading}\n        user={user}\n        setUser={setUser}\n        name={name}\n        setName={setName}\n        image={image}\n        setImage={setImage}\n      />\n    );\n  }\n}\nexport function Profile({\n  users,\n  images,\n  products,\n  title,\n  setTitle,\n  setLoading,\n  user,\n  setUser,\n  name,\n  setName,\n  image,\n  setImage,\n}) {\n  const intl = useIntl();\n  const { currentUser } = useContext(AuthContext);\n  const email = useState(currentUser ? currentUser.email : \"Email\");\n\n  // const [user, setUser] = useState(null);\n  // const [name, setName] = useState(null);\n  // const [image, setImage] = useState(null);\n  const [nameChange, setNameChange] = useState(false);\n\n  // useEffect(() => {\n  //   async function use() {\n  //     if (!user) {\n  //       let response = await api.getUserById(currentUser?.email.toUpperCase());\n  //       if (!response)\n  //         response = await api.getUserById(currentUser?.email.toLowerCase());\n  //       console.log(response.data.data);\n  //       setUser(response.data.data);\n  //     } else {\n  //       console.log(user);\n  //       !name &&\n  //         setName(\n  //           user\n  //             ? user[\"name\"]\n  //             : currentUser && currentUser.displayName\n  //             ? currentUser.displayName\n  //             : intl.formatMessage({ id: \"welcome\" })\n  //         );\n  //       !image &&\n  //         setImage(\n  //           user\n  //             ? user[\"image\"]\n  //             : currentUser && currentUser.photoURL\n  //             ? currentUser.photoURL\n  //             : null\n  //         );\n  //     }\n  //   }\n  //   use();\n  // }, [user, setUser, name, setName, image, setImage, currentUser, intl]);\n\n  const deleteHandler = (productId) => {\n    // setProducts(\n    //   products.filter((product) => {\n    //     return product._id !== productId.data._id;\n    //   })\n    // );\n  };\n  async function handleChangeInputImages(event) {\n    console.log(event.target.files);\n    return Promise.all(\n      [...event.target.files].map((image) => {\n        console.log(image);\n        storage\n          .ref(`users/${image.name}`)\n          .put(image)\n          .on(\n            \"state_changed\",\n            () => {},\n            (error) => {\n              console.log(error);\n            },\n            () =>\n              storage\n                .ref(\"users\")\n                .child(image.name)\n                .getDownloadURL()\n                .then(async (url) => {\n                  let data = new FormData();\n                  data.append(\"image\", url);\n                  await api\n                    .updateUserById(currentUser?.email, data)\n                    .then((res) => {\n                      Alert(\"Image changed!\", true);\n                    })\n                    .catch((error) => {\n                      Alert(error.message);\n                    });\n                  console.log(url);\n                  setImage(url);\n                })\n          );\n      })\n    );\n  }\n  async function handleChangeInputName(event) {\n    const newName = event.target.value;\n    console.log(newName);\n    let data = new FormData();\n    data.append(\"name\", newName);\n    await api\n      .updateUserById(currentUser?.email, data)\n      .then((res) => {\n        Alert(\"Name changed!\", true);\n      })\n      .catch((error) => {\n        Alert(error.message);\n      });\n    setName(newName);\n    setNameChange(false);\n  }\n  return (\n    <Card className=\"userSettings\">\n      <Card.Header className=\"userHeader\">\n        <label\n          style={{\n            border: \"1pxsolid#ccc\",\n            display: \"inline-block\",\n            padding: \"6px12px\",\n            cursor: \"pointer\",\n          }}\n        >\n          <input\n            type=\"file\"\n            onChange={handleChangeInputImages}\n            style={{ display: \"none\" }}\n          />\n          <Avatar\n            style={{\n              alignSelf: window.screen.width <= 800 ? \"right\" : \"center\",\n              width: \"100px\",\n              height: \"100px\",\n              borderRadius: \"50%\",\n            }}\n            variant=\"rounded\"\n            src={image ? image : \"\"}\n          >\n            {/* {user\n              ? user.name.toString().split(\" \")[0][0].toUpperCase() +\n                user.name.toString().split(\" \")[1][0].toUpperCase()\n              : null} */}\n          </Avatar>\n        </label>\n        {/* </Button> */}\n\n        <Card.Title\n          style={{\n            margin: \"1rem\",\n            width: \"80%\",\n            color: \"#147764\",\n            alignSelf: \"center\",\n          }}\n        >\n          <label\n            style={{\n              border: \"1pxsolid#ccc\",\n              display: \"inline-block\",\n              padding: \"6px12px\",\n              cursor: \"pointer\",\n            }}\n          >\n            <input\n              type=\"text\"\n              onClick={() => setNameChange(true)}\n              // onChange={handleChangeInputName}\n              onKeyDown={(e) => e.keyCode === 13 && handleChangeInputName(e)}\n              style={{ display: !nameChange ? \"none\" : \"flex\" }}\n            />\n            {!nameChange && name}\n          </label>\n        </Card.Title>\n        <Card.Subtitle>{email}</Card.Subtitle>\n      </Card.Header>\n      <Card.Body style={{ alignItems: \"center\" }}>\n        <h1>{intl.formatMessage({ id: \"MyProducts\" })}</h1>\n        {products &&\n        user &&\n        products.filter((prod) => prod.ownerId === user.uid).length > 0 ? (\n          <CardList\n            products={\n              user ? products.filter((prod) => prod.ownerId === user.uid) : null\n            }\n            users={users}\n            deleteHandler={deleteHandler}\n          />\n        ) : (\n          <Card\n            style={{\n              width: \"100%\",\n              height: \"50%\",\n              borderRadius: \"35px\",\n              alignItems: \"center\",\n              textAlign: \"center\",\n              display: \"flex\",\n              justifyContent: \"center\",\n              padding: \"10px\",\n              backgroundColor: \"rgba(0,0,50,0.1)\",\n            }}\n          >\n            <p> אין לך מוצרים עדיין ! </p>\n            <p>אפשר להוסיף אותם בלחיצה על \"העלה\" באזור הניווט</p>\n          </Card>\n        )}\n      </Card.Body>\n    </Card>\n  );\n}\n","/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/src/Components/SSO/SignUp.js",["206"],"import React, { useContext, useState } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport firebaseConfig from \"./Config\";\nimport { AuthContext } from \"./Auth\";\nimport api from \"../../API/API\";\nimport { Form, Col, Row, Button } from \"react-bootstrap\";\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/storage\";\nimport Alert from \"../Utils/Alert\";\n\nconst storage = firebase.storage();\n\nexport default function SignUp({ setRegistered }) {\n  const [image, setImage] = useState(null);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const { name, phone, email, password } = e.target.elements;\n    if (\n      name.value === \"\" ||\n      name.value === null ||\n      phone.value === \"\" ||\n      phone.value === null ||\n      email.value === null ||\n      email.value === \"\" ||\n      password.value === \"\" ||\n      password.value === null\n    ) {\n      Alert(\"Please fill all the require data!\");\n    } else {\n      try {\n        await firebaseConfig\n          .auth()\n          .createUserWithEmailAndPassword(email.value, password.value)\n          .then(function (result) {\n            Alert(`Welcome to ReBuy`, true);\n            return result.user.updateProfile({\n              displayName: name.value,\n              photoURL: image ? image : \"\",\n            });\n          })\n          .catch((error) => {\n            console.log(error);\n            Alert(error.message);\n          });\n\n        let data = new FormData();\n        data.append(\"name\", name.value);\n        data.append(\"phone\", phone.value);\n        data.append(\"email\", email.value);\n        data.append(\"image\", image);\n        data.append(\"uid\", firebase.auth().currentUser.uid);\n        data.append(\"favorites\", []);\n\n        await api\n          .insertUser(data)\n          .then((res) => {})\n          .catch((error) => {\n            Alert(error.message);\n          });\n      } catch (error) {\n        Alert(error.message);\n      }\n    }\n  };\n\n  async function handleChangeInputImages(event) {\n    return Promise.all(\n      [...event.target.files].map((image) => {\n        console.log(image);\n        storage\n          .ref(`users/${image.name}`)\n          .put(image)\n          .on(\n            \"state_changed\",\n            () => {},\n            (error) => {\n              console.log(error);\n            },\n            () =>\n              storage\n                .ref(\"users\")\n                .child(image.name)\n                .getDownloadURL()\n                .then((url) => {\n                  console.log(url);\n                  setImage(url);\n                })\n          );\n      })\n    );\n  }\n\n  const { currentUser } = useContext(AuthContext);\n  if (currentUser) {\n    console.log(currentUser);\n    return <Redirect to=\"/\" />;\n  }\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Form.Label as=\"h1\">Sign Up</Form.Label>\n      <Form.Group as={Row} controlId=\"formPlaintextEmail\">\n        <Form.Label column sm=\"4\">\n          Full Name\n        </Form.Label>\n        <Col sm=\"8\">\n          <Form.Control type=\"text\" name=\"name\" placeholder=\"Name\" />\n        </Col>\n      </Form.Group>\n      <Form.Group as={Row} controlId=\"formPlaintextEmail\">\n        <Form.Label column sm=\"4\">\n          Phone\n        </Form.Label>\n        <Col sm=\"8\">\n          <Form.Control type=\"number\" name=\"phone\" placeholder=\"Phone Number\" />\n        </Col>\n      </Form.Group>\n      <Form.Group as={Row} controlId=\"formPlaintextEmail\">\n        <Form.Label column sm=\"4\">\n          Email\n        </Form.Label>\n        <Col sm=\"8\">\n          <Form.Control type=\"email\" name=\"email\" placeholder=\"Email\" />\n        </Col>\n      </Form.Group>\n      <Form.Group as={Row} controlId=\"formPlaintextPassword\">\n        <Form.Label column sm=\"4\">\n          Password\n        </Form.Label>\n        <Col sm=\"8\">\n          <Form.Control\n            type=\"password\"\n            name=\"password\"\n            placeholder=\"Password\"\n          />\n        </Col>\n      </Form.Group>\n      <Form.Group as={Row} controlId=\"formPlaintextPassword\">\n        <Form.Label column sm=\"4\">\n          Profile Photo\n        </Form.Label>\n        <Col sm=\"8\">\n          <Form.Control\n            type=\"file\"\n            name=\"image\"\n            id=\"image\"\n            onChange={handleChangeInputImages}\n          />\n        </Col>\n      </Form.Group>\n      {/* <Form.Group as={Row} controlId=\"formPlaintextPassword\">\n              <Form.Label column sm=\"4\">\n                Confirm Password\n              </Form.Label>\n              <Col sm=\"8\">\n                <Form.Control type=\"password\" placeholder=\"Confirm Password\" />\n              </Col>\n            </Form.Group> */}\n\n      <Button variant=\"primary\" type=\"submit\" size=\"lg\">\n        Sign Up\n      </Button>\n      <div style={{ margin: \"1rem\" }}>\n        Already Registered?{\" \"}\n        <Button variant=\"secondary\" onClick={() => setRegistered(true)}>\n          Login?\n        </Button>\n      </div>\n    </Form>\n  );\n}\n","/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/src/Components/Pages/Home/Products.js",["207","208","209","210","211","212","213","214","215","216","217","218","219","220","221","222","223","224","225","226","227","228","229"],"import React, { Component, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport api from \"../../../API/API\";\nimport styled from \"styled-components\";\nimport \"react-table/index\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Search from \"./Search\";\nimport Groupby from \"./Groupby\";\nimport Sort from \"./Sort\";\nimport { Link } from \"react-router-dom\";\nimport StarBorderIcon from \"@material-ui/icons/StarBorder\";\nimport {\n  Card,\n  CardContent,\n  CardActionArea,\n  CardActions,\n  CardMedia,\n  Typography,\n  Button,\n  GridList,\n  GridListTile,\n  GridListTileBar,\n} from \"@material-ui/core\";\nimport Carousel from \"react-bootstrap/Carousel\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport PopUp from \"../../Utils/PopUp\";\nimport CardList from \"./CardList\";\nimport firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\nimport \"firebase/analytics\";\n\nconst auth = firebase.auth();\nconst firestore = firebase.firestore();\n\nconst Wrapper = styled.div``;\nconst Update = styled.div`\n  color: #ef9b0f;\n  cursor: pointer;\n`;\nconst Delete = styled.div`\n  color: #ff0000;\n  cursor: pointer;\n`;\nfunction UpdateProduct({ id }) {\n  const history = useHistory();\n\n  const updateUser = (event) => {\n    event.preventDefault();\n    history.push(`/Update/${id}`);\n  };\n  return <Update onClick={updateUser}>Update</Update>;\n}\nclass DeleteProduct extends Component {\n  constructor() {\n    super();\n  }\n  deleteUser = (event) => {\n    event.preventDefault();\n\n    if (\n      window.confirm(\n        `Do tou want to delete the product ${this.props.id} permanently?`\n      )\n    ) {\n      api\n        .deleteProductById(this.props.id)\n        .then((res) => {\n          this.props.deleteHandler(res.data);\n        })\n        .catch((err) => console.log(err));\n      // window.location.reload();\n    }\n  };\n\n  render() {\n    return <Delete onClick={this.deleteUser}>DELETE</Delete>;\n  }\n}\nexport default class ProductsList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      products: [],\n      users: [],\n      columns: [],\n      isLoading: this.props.loading,\n      imagePath: \"\",\n      setLoading: this.props.setLoading,\n      intl: props.intl,\n      currentUser: props.currentUser,\n      favCategories: [],\n      favProduct: [],\n    };\n  }\n\n  componentDidMount = async () => {\n    this.state.setLoading(false);\n    try {\n      await api.getAllProducts().then((product) => {\n        this.setState({\n          products: product.data.data,\n        });\n      });\n      await api.getAllUsers().then((user) => {\n        this.setState({\n          users: user.data.data,\n        });\n      });\n      firestore\n        .collection(\"users\")\n        .where(\"email\", \"in\", [\n          this.state.currentUser?.email.toUpperCase(),\n          this.state.currentUser?.email.toLowerCase(),\n        ])\n        .get()\n        .then((Snapshot) => {\n          Snapshot.docs.forEach((doc) => {\n            let favCategory = doc.data().favCategory;\n            let cat1 = null;\n            let max1 = 0;\n            favCategory.forEach((cat) => {\n              if (cat.val > max1) {\n                cat1 = cat.key;\n                max1 = cat.val;\n              }\n            });\n            let cat2 = null;\n            let max2 = 0;\n            favCategory.forEach((cat) => {\n              if (cat.val > max2 && cat.val < max1) {\n                cat2 = cat.key;\n                max2 = cat.val;\n              }\n            });\n            cat2\n              ? this.setState({\n                  favCategories: [cat1, cat2],\n                })\n              : this.setState({\n                  favCategories: [cat1],\n                });\n\n            console.log(this.state.favCategories);\n          });\n          let prods = [];\n          console.log(this.state.favCategories);\n          this.state.products.forEach((product) => {\n            this.state.favCategories.some((f) => f === product.category) &&\n              prods.push(product);\n          });\n          this.setState({\n            favProduct: prods,\n          });\n        })\n        .catch((error) => {});\n\n      this.state.setLoading(false);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  searchHandler = (products) => {\n    this.setState({\n      products: products.data,\n    });\n  };\n  deleteHandler = (productId) => {\n    this.setState({\n      products: this.state.products.filter((product) => {\n        return product.seconderyId !== productId;\n      }),\n    });\n  };\n  render() {\n    const { products, users, intl, favProduct, favCategories } = this.state;\n\n    return (\n      <Wrapper\n        style={{\n          textAlign: \"center\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n          marginTop: \"30px\",\n        }}\n      >\n        <h1>{intl.formatMessage({ id: \"Market\" })}</h1>\n        <Search searchHandler={this.searchHandler} />\n        {/* <Sort searchHandler={this.searchHandler} /> */}\n\n        {favProduct.length > 0 && (\n          <>\n            <h1>{intl.formatMessage({ id: \"Recommended for you\" })}</h1>\n            <h3>\n              {`We can see that you like ${favCategories[0]}  ${\n                favCategories[1] ? \"and \" + favCategories[1] : \"\"\n              }`}\n            </h3>\n            <CardList\n              products={favProduct}\n              users={users}\n              deleteHandler={this.deleteHandler}\n              from={0}\n              to={products.length}\n            />\n            <h1>{intl.formatMessage({ id: \"All Products\" })}</h1>\n          </>\n        )}\n\n        <CardList\n          products={products}\n          users={users}\n          deleteHandler={this.deleteHandler}\n          from={0}\n          to={products.length}\n        />\n        {this.props.setLoading(false)}\n      </Wrapper>\n    );\n  }\n}\n","/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/src/Components/Utils/Page.js",["230"],"import React from \"react\";\nimport { useIntl } from \"react-intl\";\nimport PageBody from \"./PageBody\";\nimport LoadingOverlay from \"react-loading-overlay\";\nimport icon from \"../../Assets/Images/ReBuyLogoTrans.png\";\n\nexport default function Page({\n  onlyTop,\n  data,\n  title,\n  setTitle,\n  color,\n  boldPar,\n  par,\n  pic,\n  to,\n  button,\n  children,\n  loading,\n  setEdit,\n  edit,\n  share,\n  setShare,\n  dots,\n  editdisabled,\n  add,\n  FAB,\n  print,\n  setPrint,\n  printArr,\n  setPrintArr,\n  dataArr,\n  main,\n  shareRecord,\n  type,\n}) {\n  document.title = \"ReBuy | \" + title;\n  setTitle(title);\n  function Body() {\n    return children ? (\n      children\n    ) : !loading ? (\n      <PageBody\n        data={data}\n        color={color}\n        boldPar={boldPar}\n        par={par}\n        pic={pic}\n        to={to}\n        button={button}\n      />\n    ) : null;\n  }\n\n  return (\n    <div>\n      <LoadingOverlay\n        active={loading}\n        spinner={<img src={icon} className=\"pageLoader\" alt=\"loader\" />}\n        styles={{\n          wrapper: {},\n          overlay: (base) => ({\n            ...base,\n            height: \"110%\",\n            backgroundColor: \"#f5f7fb\",\n            opacity: \"0.7\",\n          }),\n        }}\n      >\n        {!loading ? (\n          <div className=\"page\">\n            <Body />\n          </div>\n        ) : null}\n      </LoadingOverlay>\n    </div>\n  );\n}\n","/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/src/Components/NavBar/SideBar.js",["231","232"],"import React from \"react\";\nimport { useIntl } from \"react-intl\";\n\nimport { useHistory, NavLink } from \"react-router-dom\";\nimport {\n  ProSidebar,\n  Menu,\n  MenuItem,\n  SidebarHeader,\n  SidebarFooter,\n  SidebarContent,\n  SubMenu,\n} from \"react-pro-sidebar\";\nimport logo from \"../../Assets/ReBuy.jpeg\";\nimport Home from \"@material-ui/icons/HomeRounded\";\nimport Map from \"@material-ui/icons/MapRounded\";\nimport Category from \"@material-ui/icons/CategoryRounded\";\nimport Star from \"@material-ui/icons/StarRounded\";\nimport Upload from \"@material-ui/icons/ArrowUpwardRounded\";\nimport Instagram from \"@material-ui/icons/Instagram\";\nimport Facebook from \"@material-ui/icons/Facebook\";\nimport TopBar from \"./TopBar\";\nimport User from \"./User\";\n\nexport default function SideBar({\n  sideBarImage,\n  collapsed,\n  rtl,\n  toggled,\n  email,\n  handleToggleSidebar,\n  handleCollapsedChange,\n  handleRtlChange,\n  handleImageChange,\n  setSeen,\n  notificationCount,\n  setNotificationCount,\n  setLoading,\n  setLocale,\n  locale,\n  user,\n  setUser,\n  name,\n  setName,\n  image,\n  setImage,\n}) {\n  const history = useHistory();\n  const intl = useIntl();\n\n  const categoryArray = [\n    [intl.formatMessage({ id: \"Sport\" }), \"Sport\"],\n    [intl.formatMessage({ id: \"Clothing\" }), \"Clothing\"],\n    [intl.formatMessage({ id: \"Electricity\" }), \"Electricity\"],\n    [intl.formatMessage({ id: \"Underwear\" }), \"Underwear\"],\n    [intl.formatMessage({ id: \"Swimwear\" }), \"Swimwear\"],\n    [intl.formatMessage({ id: \"Homecare\" }), \"Homecare\"],\n    [intl.formatMessage({ id: \"Plants\" }), \"Plants\"],\n    [intl.formatMessage({ id: \"Activewear\" }), \"Activewear\"],\n    [intl.formatMessage({ id: \"Jewlery\" }), \"Jewlery\"],\n    [intl.formatMessage({ id: \"Other\" }), \"Other\"],\n  ];\n\n  return (\n    <div className=\"sideBar\">\n      <ProSidebar\n        // image={sideBarImage ? sideBarImage : false}\n        rtl={rtl}\n        collapsed={collapsed}\n        toggled={toggled}\n        breakPoint=\"md\"\n        onToggle={handleToggleSidebar}\n      >\n        <SidebarHeader>\n          <TopBar\n            toggled={toggled}\n            handleToggleSidebar={handleToggleSidebar}\n            notificationCount={notificationCount}\n            setNotificationCount={setNotificationCount}\n            main={false}\n          />\n        </SidebarHeader>\n        <SidebarContent>\n          <Menu iconShape=\"circle\">\n            <MenuItem icon={<Home />}>\n              <NavLink to=\"/\" onClick={handleToggleSidebar}>\n                {intl.formatMessage({ id: \"Home\" })}\n              </NavLink>\n            </MenuItem>\n            <MenuItem icon={<Map />}>\n              <NavLink to=\"/Map\" onClick={handleToggleSidebar}>\n                {intl.formatMessage({ id: \"Map\" })}\n              </NavLink>\n            </MenuItem>\n            <MenuItem icon={<Upload />}>\n              <NavLink to=\"/Upload\" onClick={handleToggleSidebar}>\n                {intl.formatMessage({ id: \"Upload\" })}\n              </NavLink>\n            </MenuItem>\n\n            <SubMenu\n              title={intl.formatMessage({ id: \"Catagories\" })}\n              icon={<Category />}\n            >\n              {categoryArray.map((cat) => (\n                <MenuItem\n                  onClick={() => {\n                    history.push(`/categories/${cat[1]}`);\n                    handleToggleSidebar();\n                  }}\n                >\n                  {cat[0]}\n                </MenuItem>\n              ))}\n            </SubMenu>\n          </Menu>\n\n          <User\n            handleToggleSidebar={handleToggleSidebar}\n            setLocale={setLocale}\n            locale={locale}\n            user={user}\n            setUser={setUser}\n            name={name}\n            setName={setName}\n            image={image}\n            setImage={setImage}\n          />\n        </SidebarContent>\n        <SidebarFooter className=\"sideBarFooter\">\n          <div className=\"sidebar-btn-wrapper\">\n            <a\n              iconShape=\"circle\"\n              href=\"https://www.facebook.com/ReBuyPlatform\"\n              className=\"sidebar-btn\"\n            >\n              <span>\n                <Facebook />\n                {\"    ReBuy \"} {new Date().getFullYear()}\n                {\"  \"}\n                <img\n                  src={logo}\n                  alt=\"Logo\"\n                  style={{\n                    width: \"1.5rem\",\n                    height: \"1.5rem\",\n                    filter: \"grayscale(100%)\",\n                    opacity: \"0.9\",\n                  }}\n                />\n                {/* <Instagram /> */}\n              </span>\n            </a>\n          </div>\n        </SidebarFooter>\n      </ProSidebar>\n    </div>\n  );\n}\n","/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/src/Components/NavBar/TopBar.js",[],"/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/src/Components/SSO/LogIn.js",["233","234"],"import React, { useContext } from \"react\";\nimport { Form, Col, Row, Button } from \"react-bootstrap\";\nimport { Redirect } from \"react-router-dom\";\nimport {\n  FacebookLoginButton,\n  GoogleLoginButton,\n} from \"react-social-login-buttons\";\nimport { AuthContext } from \"./Auth\";\nimport firebase from \"firebase\";\nimport Alert from \"../Utils/Alert\";\n\nexport default function LogIn({ setRegistered }) {\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const { email, password } = e.target.elements;\n    try {\n      firebase\n        .auth()\n        .signInWithEmailAndPassword(email.value, password.value)\n        .then(() => {\n          Alert(`Welcome to ReBuy`, true);\n        })\n        .catch((error) => Alert(error));\n    } catch (error) {\n      // Alert(error);\n    }\n  };\n  function GoogleLogin() {\n    var provider = new firebase.auth.GoogleAuthProvider();\n    firebase\n      .auth()\n      .signInWithPopup(provider)\n      .then((result) => {\n        /** @type {firebase.auth.OAuthCredential} */\n        var credential = result.credential;\n        var token = credential.accessToken;\n        var user = result.user;\n        console.log(user);\n        Alert(`Welcome to ReBuy`, true);\n      })\n      .catch((error) => {\n        var errorCode = error.code;\n        var errorMessage = error.message;\n        var email = error.email;\n        var credential = error.credential;\n        console.log(errorCode, errorMessage, email, credential);\n        Alert(errorCode + errorMessage + email + credential);\n      });\n  }\n  function FacebookLogin() {\n    var provider = new firebase.auth.FacebookAuthProvider();\n    firebase\n      .auth()\n      .signInWithPopup(provider)\n      .then((result) => {\n        /** @type {firebase.auth.OAuthCredential} */\n        var credential = result.credential;\n        var token = credential.accessToken;\n        var user = result.user;\n        console.log(user);\n        Alert(`Welcome to ReBuy`, true);\n      })\n      .catch((error) => {\n        var errorCode = error.code;\n        var errorMessage = error.message;\n        var email = error.email;\n        var credential = error.credential;\n        console.log(errorCode, errorMessage, email, credential);\n        Alert(errorCode + errorMessage + email + credential);\n      });\n  }\n  const { currentUser } = useContext(AuthContext);\n  if (currentUser) {\n    return <Redirect to=\"/\" />;\n  }\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Form.Label as=\"h1\">Log In</Form.Label>\n      <Form.Group as={Row} controlId=\"formPlaintextEmail\">\n        <Form.Label column sm=\"2\">\n          Email\n        </Form.Label>\n        <Col sm=\"12\">\n          <Form.Control type=\"email\" name=\"email\" placeholder=\"Email\" />\n        </Col>\n      </Form.Group>\n      <Form.Group as={Row} controlId=\"formPlaintextPassword\">\n        <Form.Label column sm=\"3\">\n          Password\n        </Form.Label>\n        <Col sm=\"12\">\n          <Form.Control\n            type=\"password\"\n            name=\"password\"\n            placeholder=\"Password\"\n          />\n        </Col>\n      </Form.Group>\n      <Form.Group as={Row}>\n        <FacebookLoginButton onClick={() => FacebookLogin()} />\n      </Form.Group>\n      <Form.Group as={Row}>\n        <GoogleLoginButton onClick={() => GoogleLogin()} />\n      </Form.Group>\n      <Form.Group controlId=\"formBasicCheckbox\">\n        {/* <Form.Check type=\"checkbox\" label=\"Remember Me\" /> */}\n      </Form.Group>\n      <Button variant=\"primary\" type=\"submit\" size=\"lg\">\n        Login\n      </Button>\n      <div style={{ width: \"100%\" }}>\n        <Button\n          variant=\"secondary\"\n          onClick={() => setRegistered(false)}\n          size=\"lg\"\n          style={{ marginTop: \"5px\" }}\n        >\n          Sign Up\n        </Button>\n      </div>\n    </Form>\n  );\n}\n","/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/src/Components/Pages/Home/CardList.js",["235","236","237","238"],"/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/src/Components/Pages/Home/Search.js",["239","240","241"],"import React, { useState } from \"react\";\nimport { Form, Button, Col } from \"react-bootstrap\";\nimport api from \"../../../API/API\";\nimport Sort from \"./Sort\";\nimport Groupby from \"./Groupby\";\nimport { useIntl } from \"react-intl\";\nfunction Search(props) {\n  const intl = useIntl();\n\n  const [query, setQuery] = useState(\"\");\n  const [condition, setCondition] = useState(\"\");\n  const [category, setCategory] = useState(\"\");\n  const [price, setPrice] = useState(\"\");\n\n  const changeHandler = async (e) => {\n    setQuery(e.target.value);\n    await api\n      .search(query)\n      .then((res) => {\n        props.searchHandler(res.data);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  const clickHandler = async () => {\n    await api\n      .search(category, condition, price)\n      .then((res) => {\n        props.searchHandler(res.data);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n  const conditionChangeHandler = (e) => {\n    setCondition(e.target.value);\n  };\n  const categoryChangeHandler = (e) => {\n    setCategory(e.target.value);\n  };\n  const priceChangeHandler = (e) => {\n    setPrice(e.target.value);\n  };\n  const categoryArray = [\n    \"Sport\",\n    \"Clothing\",\n    \"Electricity\",\n    \"Underwear\",\n    \"Swimwear\",\n    \"Homecare\",\n    \"Plants\",\n    \"Activewear\",\n    \"Jewlery\",\n    \"Other\",\n  ];\n  return (\n    // <Form>\n    //   <Form.Group controlId=\"formGroupEmail\">\n    //     <Form.Label>Search Product</Form.Label>\n    //     <Form.Control\n    //       type=\"text\"\n    //       style={{ direction: \"ltr\" }}\n    //       placeholder=\"Enter search\"\n    //       onChange={(e) => changeHandler(e)}\n    //     />\n    //     <Button onClick={clickHandler}>Search</Button>\n    //   </Form.Group>\n    // </Form>\n    <Form style={{ padding: \"1rem\" }}>\n      <Form.Row style={{ direction: \"ltr\" }}>\n        <Form.Group as={Col} controlId=\"formGridPassword\">\n          <Form.Label> {intl.formatMessage({ id: \"Price\" })}</Form.Label>\n          <Form.Control as=\"select\" onChange={(e) => priceChangeHandler(e)}>\n            <option></option>\n            <option>less than 500</option>\n            <option>500-1000</option>\n            <option>1000-5000</option>\n            <option>5000+</option>\n          </Form.Control>\n        </Form.Group>\n        <Form.Group as={Col} controlId=\"formGridPassword\">\n          <Form.Label>{intl.formatMessage({ id: \"Category\" })}</Form.Label>\n          <Form.Control as=\"select\" onChange={(e) => categoryChangeHandler(e)}>\n            <option></option>\n            {categoryArray.map((category) => {\n              return <option>{category}</option>;\n            })}\n          </Form.Control>\n        </Form.Group>\n        <Form.Group as={Col} controlId=\"formGridEmail\">\n          <Form.Label>{intl.formatMessage({ id: \"Condition\" })}</Form.Label>\n          <Form.Control as=\"select\" onChange={(e) => conditionChangeHandler(e)}>\n            <option></option>\n            <option value={\"NEW\"}>{intl.formatMessage({ id: \"New\" })}</option>\n            <option value={\"USED\"}>{intl.formatMessage({ id: \"Used\" })}</option>\n          </Form.Control>\n        </Form.Group>\n      </Form.Row>\n      <Button onClick={clickHandler}>\n        {intl.formatMessage({ id: \"Search\" })}\n      </Button>\n    </Form>\n  );\n}\n\nexport default Search;\n","/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/src/Components/Pages/Home/Sort.js",["242","243"],"import React, { useState } from \"react\";\nimport { Form, Button } from \"react-bootstrap\";\nimport api from \"../../../API/API\";\n\nfunction Search(props) {\n  const clickHandler = async () => {\n    await api\n      .sort()\n      .then((res) => {\n        props.searchHandler(res.data);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n  return (\n    <Button variant=\"success\" onClick={clickHandler}>\n      Sort By Name\n    </Button>\n  );\n}\n\nexport default Search;\n","/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/src/Layout.js",["244","245","246","247"],"import React, { useState, useContext, useEffect } from \"react\";\nimport { BrowserRouter, Route, Switch, Link } from \"react-router-dom\";\nimport { useIntl } from \"react-intl\";\nimport SideBar from \"./Components/NavBar/SideBar\";\nimport MobileBar from \"./Components/NavBar/MobileBar\";\nimport LoadingOverlay from \"react-loading-overlay\";\nimport Icon from \"./Assets/Images/ReBuyLogoTrans.png\";\nimport Categories from \"./Components/Pages/Categories/Categories\";\nimport Home from \"./Components/Pages/Home/Home\";\nimport Notifications from \"./Components/Pages/Chat/Notifications\";\nimport Map from \"./Components/Pages/Map/Map\";\nimport Admin from \"./Components/Pages/Admin/Admin\";\nimport Favorites from \"./Components/Pages/Favorites/Favorites\";\nimport ProfileSettings from \"./Components/Pages/Settings/ProfileSettings\";\nimport ProductInsert from \"./Components/Pages/Home/Create\";\nimport ProductUpload from \"./Components/Pages/Home/Update\";\nimport { AuthContext } from \"./Components/SSO/Auth\";\nimport Registration from \"./Components/SSO/Registration\";\nimport api from \"./API/API\";\nimport Chat from \"./Components/Pages/Chat/chat\";\nimport SellerRoom from \"./Components/Pages/Chat/SellerRoom\";\n\nexport default function Layout({ locale, setLocale, setActive, isActive }) {\n  const intl = useIntl();\n  const [rtl, setRtl] = useState(true);\n  const [collapsed, setCollapsed] = useState(false);\n  const [sideBarImage, setSideBarImage] = useState(false);\n  const [toggled, setToggled] = useState(true);\n  const [title, setTitle] = useState(\"ReBuy\");\n  const [notificationData, setnotificationData] = useState();\n  const count = notificationData ? notificationData.length : 0;\n  const [notificationCount, setNotificationCount] = useState(count);\n  const { currentUser } = useContext(AuthContext);\n  const email = useState(currentUser ? currentUser.email : \"Email\");\n  const [user, setUser] = useState(null);\n  const [name, setName] = useState(null);\n  const [image, setImage] = useState(null);\n\n  useEffect(() => {\n    async function use() {\n      if (currentUser) {\n        if (!user || user.uid !== currentUser.uid) {\n          let response = await api.getUserById(\n            currentUser?.email.toUpperCase()\n          );\n          if (!response)\n            response = await api.getUserById(currentUser?.email.toLowerCase());\n          console.log(response.data.data);\n          setUser(response.data.data);\n          setName(\n            user\n              ? user[\"name\"]\n              : currentUser && currentUser.displayName\n              ? currentUser.displayName\n              : intl.formatMessage({ id: \"welcome\" })\n          );\n          setImage(\n            user\n              ? user[\"image\"]\n              : currentUser && currentUser.photoURL\n              ? currentUser.photoURL\n              : null\n          );\n        } else {\n          console.log(user);\n          !name &&\n            setName(\n              user\n                ? user[\"name\"]\n                : currentUser && currentUser.displayName\n                ? currentUser.displayName\n                : intl.formatMessage({ id: \"welcome\" })\n            );\n          !image &&\n            setImage(\n              user\n                ? user[\"image\"]\n                : currentUser && currentUser.photoURL\n                ? currentUser.photoURL\n                : null\n            );\n        }\n      }\n    }\n    use();\n  }, [user, name, image, currentUser, intl]);\n\n  const handleCollapsedChange = (checked) => {\n    setCollapsed(checked);\n  };\n\n  const handleRtlChange = (checked) => {\n    setRtl(checked);\n    setLocale(checked ? \"he\" : \"en\");\n  };\n  const handleImageChange = (checked) => {\n    setSideBarImage(checked);\n  };\n\n  const handleToggleSidebar = () => {\n    setToggled(!toggled);\n  };\n  return (\n    <LoadingOverlay\n      active={isActive}\n      fadeSpeed={1000}\n      spinner={\n        <div\n          style={{\n            animation: \"spin 1.5s linear infinite\",\n          }}\n        >\n          <img src={Icon} alt={\"Icon\"} style={{ width: \"30%\" }} />\n        </div>\n      }\n      styles={{\n        wrapper: {},\n        overlay: (base) => ({\n          ...base,\n          backgroundColor: \"#f1f7fb\",\n          opacity: \"0.9\",\n          height: \"100%\",\n          position: \"fixed\",\n        }),\n      }}\n    >\n      {isActive || currentUser ? (\n        <BrowserRouter>\n          <Switch>\n            <div\n              className={`app ${rtl ? \"rtl\" : \"\"} ${toggled ? \"toggled\" : \"\"}`}\n            >\n              <div className=\"main-container\">\n                <div className=\"sideBar\">\n                  <SideBar\n                    sideBarImage={sideBarImage}\n                    collapsed={collapsed}\n                    rtl={rtl}\n                    toggled={toggled}\n                    handleToggleSidebar={handleToggleSidebar}\n                    handleCollapsedChange={handleCollapsedChange}\n                    handleRtlChange={handleRtlChange}\n                    handleImageChange={handleImageChange}\n                    notificationCount={notificationCount}\n                    setNotificationCount={setNotificationCount}\n                    setLoading={setActive}\n                    setLocale={setLocale}\n                    locale={locale}\n                    loading={isActive}\n                    user={user}\n                    setUser={setUser}\n                    name={name}\n                    setName={setName}\n                    image={image}\n                    setImage={setImage}\n                  />\n                </div>\n                <MobileBar\n                  handleToggleSidebar={handleToggleSidebar}\n                  notificationCount={notificationCount}\n                  setNotificationCount={setNotificationCount}\n                />\n                <div className={`mainPage ${toggled ? \"toggled\" : \"\"}`}>\n                  <Route exact path=\"/\">\n                    <Home\n                      title={intl.formatMessage({ id: \"Home\" })}\n                      setTitle={setTitle}\n                      setActive={setActive}\n                      intl={intl}\n                    />\n                  </Route>\n                  <Route exact path=\"/Notifications\">\n                    <Notifications\n                      title={intl.formatMessage({ id: \"Notifications\" })}\n                      setTitle={setTitle}\n                      setActive={setActive}\n                      user={user}\n                    />\n                  </Route>\n                  <Route exact path=\"/Map\">\n                    <Map\n                      title={intl.formatMessage({ id: \"Map\" })}\n                      setTitle={setTitle}\n                      setActive={setActive}\n                    />\n                  </Route>\n                  {/* <Route exact path=\"/admin\">\n                    <Admin />\n                  </Route> */}\n                  <Route exact path=\"/Upload\">\n                    <ProductInsert\n                      title={intl.formatMessage({ id: \"Upload\" })}\n                      setTitle={setTitle}\n                      setActive={setActive}\n                      intl={intl}\n                    />\n                  </Route>\n                  <Route path=\"/Update/:id\">\n                    <ProductUpload\n                      title={intl.formatMessage({ id: \"Update\" })}\n                      setTitle={setTitle}\n                      setActive={setActive}\n                    />\n                  </Route>\n                  <Route exact path=\"/Favorites\">\n                    <Favorites\n                      title={intl.formatMessage({ id: \"Favorites\" })}\n                      setTitle={setTitle}\n                      setActive={setActive}\n                    />\n                  </Route>\n                  <Route path=\"/Categories/:id\">\n                    <Categories\n                      title={\"Categories\"}\n                      setTitle={setTitle}\n                      setActive={setActive}\n                    />\n                  </Route>\n                  <Route exact path=\"/Admin\">\n                    <Admin\n                      title={intl.formatMessage({ id: \"profile\" })}\n                      setTitle={setTitle}\n                    />\n                  </Route>\n                  <Route exact path=\"/settings\">\n                    <ProfileSettings\n                      title={intl.formatMessage({ id: \"profile\" })}\n                      setTitle={setTitle}\n                      user={user}\n                      setUser={setUser}\n                      name={name}\n                      setName={setName}\n                      image={image}\n                      setImage={setImage}\n                    />\n                  </Route>\n                  <Route exact path=\"/:sellerId/:description/:secondaryId\">\n                    <Chat />\n                  </Route>\n                  <Route exact path=\"/chat/:sellerId/:product/:currentId\">\n                    <SellerRoom />\n                  </Route>\n\n                  {/* </>\n                )} */}\n                </div>\n              </div>\n            </div>\n          </Switch>\n        </BrowserRouter>\n      ) : (\n        <div className={`app ${rtl ? \"rtl\" : \"\"} ${toggled ? \"toggled\" : \"\"}`}>\n          <div className=\"main-container\">\n            <div className={`mainPage ${toggled ? \"toggled\" : \"\"}`}>\n              <Registration />\n            </div>\n          </div>\n        </div>\n      )}\n\n      {setActive(false)}\n    </LoadingOverlay>\n  );\n}\n","/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/src/Components/Utils/PopUp.js",["248","249","250","251","252","253"],"import React, { useState } from \"react\";\nimport {\n  Card,\n  CardContent,\n  CardActionArea,\n  CardMedia,\n  Typography,\n  Button,\n} from \"@material-ui/core\";\nimport reBuy from \"../../Assets/Images/ReBuyLogoBig.png\";\nimport Modal from \"react-modal\";\nimport { IoPinOutline } from \"react-icons/io5\";\nimport Carousel from \"react-bootstrap/Carousel\";\nimport Person from \"@material-ui/icons/PersonRounded\";\nimport Pin from \"@material-ui/icons/PinDropRounded\";\nimport Phone from \"@material-ui/icons/Phone\";\nimport Chat from \"@material-ui/icons/Chat\";\nimport { IoClose } from \"react-icons/io5\";\nimport WhatsApp from \"@material-ui/icons/WhatsApp\";\nimport ReactWhatsapp from \"react-whatsapp\";\nimport { Link } from \"react-router-dom\";\nimport PayPal from \"./PayPal\";\nimport rebuyProduct from \"../../Assets/Images/ReBuy.png\";\nimport { SiGooglestreetview, SiWaze } from \"react-icons/si\";\nimport OpenApp from \"react-open-app\";\nimport MediaQuery from \"react-responsive\";\n\nexport default function Marker({\n  product,\n  users,\n  setIsModelOpen,\n  isModelOpen,\n  navigate,\n  wazeNavigate,\n  lat,\n  lng,\n}) {\n  let img =\n    product && product[\"image\"]\n      ? `http://localhost:3000/${product[\"images\"][0]}`\n      : reBuy;\n\n  return (\n    <div>\n      <MediaQuery maxWidth={800}>\n        {product && (\n          <Modal\n            style={{\n              overlay: {\n                zIndex: \"999\",\n                margin: \"auto\",\n              },\n              content: {\n                inset: \"0px\",\n                height: \"90%\",\n                width: \"90%\",\n                direction: \"rtl\",\n                margin: \"auto\",\n                padding: \"1rem\",\n                borderRadius: \"15px\",\n                boxShadow: \"1px 1px 5px 1px #e5eefa\",\n              },\n            }}\n            isOpen={isModelOpen}\n            onRequestClose={() => setIsModelOpen(false)}\n            ariaHideApp={false}\n          >\n            <Button\n              style={{ left: 25, zIndex: 950, position: \"fixed\" }}\n              onClick={() => setIsModelOpen(false)}\n            >\n              <IoClose size=\"2rem\" />\n            </Button>\n            {product && (\n              <Card\n                style={{\n                  width: \"100%\",\n                  height: \"100%\",\n                  border: \"1pxsolid#ececec\",\n                  borderRadius: \"15px\",\n                  textAlign: \"center\",\n                  alignItems: \"center\",\n                  overflow: \"scroll\",\n                }}\n              >\n                {product[\"photo\"] ? (\n                  <Carousel>\n                    {product[\"photo\"]\n                      .toString()\n                      .split(\",\")\n                      .map((Image) => (\n                        <Carousel.Item\n                          style={{\n                            width: \"100%\",\n                            height: \"20rem\",\n                          }}\n                        >\n                          <img\n                            className=\"d-block w-100\"\n                            style={{ width: \"100%\", height: \"100%\" }}\n                            src={Image}\n                            alt={Image}\n                          />\n                        </Carousel.Item>\n                      ))}\n                  </Carousel>\n                ) : (\n                  <img\n                    style={{ width: \"100%\", height: 200 }}\n                    src={rebuyProduct}\n                    alt={\"rebuyProduct\"}\n                  />\n                )}{\" \"}\n                <CardContent>\n                  <Typography>\n                    <h4 style={{ font: \"bold\" }}>\n                      {product[\"name\"].toUpperCase()}\n                    </h4>\n                    <h5 style={{ color: \"dodgerblue\" }}>{product[\"price\"]}₪</h5>\n                    <p>{product[\"description\"]}</p>\n                    <p>\n                      {product[\"address\"]} <IoPinOutline />\n                    </p>\n                  </Typography>\n                  <Typography\n                    variant=\"body2\"\n                    color=\"textSecondary\"\n                    component=\"p\"\n                  >\n                    {users.some((user) => user.uid === product.ownerId) && (\n                      <div\n                        style={{\n                          backgroundColor: \"#ececec\",\n                          borderRadius: \"15px\",\n                        }}\n                      >\n                        <p>\n                          {users\n                            .find((user) => user._id === product[\"owner\"])\n                            [\"name\"].toUpperCase()}\n                          <Person />\n                        </p>\n\n                        <p>\n                          <Button>\n                            <Link\n                              to={`/${product[\"ownerId\"]}/${product[\"description\"]} / ${product[\"seconderyId\"]}`}\n                              style={{ color: \"blue\" }}\n                            >\n                              <Chat style={{ color: \"#496c9e\" }} />\n                            </Link>\n                          </Button>\n                          <ReactWhatsapp\n                            number={\n                              \"+972\" +\n                              users.find(\n                                (user) => user._id === product[\"owner\"]\n                              )[\"phone\"]\n                            }\n                            message={`היי ! הגעתי אליך דרך ReBuy ואני רוצה את המוצר הזה: ${product[\"name\"]}`}\n                            element={Button}\n                          >\n                            <WhatsApp style={{ color: \"#128c7e\" }} />\n                          </ReactWhatsapp>\n                          {/* <WhatsApp /> */}\n                          <Button\n                            href={`tel:${\n                              users.find(\n                                (user) => user._id === product[\"owner\"]\n                              )[\"phone\"]\n                            }`}\n                          >\n                            <Phone style={{ color: \"#496c9e\" }} />\n                          </Button>\n                        </p>\n                      </div>\n                    )}\n                    <p>\n                      <PayPal />\n                    </p>\n                  </Typography>\n                  {navigate && (\n                    <div>\n                      <h4> Navigate to the Seller</h4>\n                      <Button\n                        onClick={() => {\n                          navigate(product[\"address\"], product[\"photo\"]);\n                          setIsModelOpen(false);\n                        }}\n                      >\n                        <img\n                          src=\"https://i.pinimg.com/originals/72/bd/cc/72bdccc73e35cdce6fc49a31b4f593ca.png\"\n                          alt=\"googlemap\"\n                          style={{ width: \"7rem\", height: \"7rem\" }}\n                        />\n                      </Button>\n                      <OpenApp\n                        href={`https://waze.com/ul?ll=${lat},${lng}&navigate=yes`}\n                        android={`https://waze.com/ul?ll=${lat},${lng}&navigate=yes`}\n                        ios={`https://waze.com/ul?ll=${lat},${lng}&navigate=yes`}\n                      >\n                        <img\n                          src=\"https://cdn-images-1.medium.com/max/1200/1*3kS1iOOTBrvtkecae3u2aA.png\"\n                          alt=\"waze\"\n                          style={{\n                            width: \"5.5rem\",\n                            height: \"5.5rem\",\n                            borderRadius: \"15px\",\n                          }}\n                        />\n                      </OpenApp>\n                    </div>\n                  )}\n                </CardContent>\n              </Card>\n            )}\n          </Modal>\n        )}{\" \"}\n      </MediaQuery>\n\n      <MediaQuery minWidth={800}>\n        {product && (\n          <Modal\n            style={{\n              overlay: {\n                zIndex: \"999\",\n                margin: \"auto\",\n              },\n              content: {\n                inset: \"0px\",\n                height: \"90%\",\n                width: \"50%\",\n                direction: \"rtl\",\n                margin: \"auto\",\n                padding: \"1rem\",\n                borderRadius: \"15px\",\n                boxShadow: \"1px 1px 5px 1px #e5eefa\",\n              },\n            }}\n            isOpen={isModelOpen}\n            onRequestClose={() => setIsModelOpen(false)}\n            ariaHideApp={false}\n          >\n            {product && (\n              <Card\n                style={{\n                  width: \"100%\",\n                  height: \"100%\",\n                  border: \"1pxsolid#ececec\",\n                  borderRadius: \"15px\",\n                  textAlign: \"center\",\n                  alignItems: \"center\",\n                  overflow: \"scroll\",\n                }}\n              >\n                {product[\"photo\"] ? (\n                  <Carousel>\n                    {product[\"photo\"]\n                      .toString()\n                      .split(\",\")\n                      .map((Image) => (\n                        <Carousel.Item\n                          style={{\n                            width: \"100%\",\n                            height: \"20rem\",\n                          }}\n                        >\n                          <img\n                            className=\"d-block w-100\"\n                            style={{ width: \"100%\", height: \"100%\" }}\n                            src={Image}\n                            alt={Image}\n                          />\n                        </Carousel.Item>\n                      ))}\n                  </Carousel>\n                ) : (\n                  <img\n                    style={{ width: \"100%\", height: 200 }}\n                    src={rebuyProduct}\n                    alt={\"rebuyProduct\"}\n                  />\n                )}{\" \"}\n                <CardContent>\n                  <Typography>\n                    <h4 style={{ font: \"bold\" }}>\n                      {product[\"name\"].toUpperCase()}\n                    </h4>\n                    <h5 style={{ color: \"dodgerblue\" }}>{product[\"price\"]}₪</h5>\n                    <p>{product[\"description\"]}</p>\n                    <p>\n                      {product[\"address\"]} <IoPinOutline />\n                    </p>\n                  </Typography>\n                  <Typography\n                    variant=\"body2\"\n                    color=\"textSecondary\"\n                    component=\"p\"\n                  >\n                    {users.some((user) => user.uid === product.ownerId) && (\n                      <div\n                        style={{\n                          backgroundColor: \"#ececec\",\n                          borderRadius: \"15px\",\n                        }}\n                      >\n                        <p>\n                          {users\n                            .find((user) => user._id === product[\"owner\"])\n                            [\"name\"].toUpperCase()}\n                          <Person />\n                        </p>\n\n                        <p>\n                          <Button>\n                            <Link\n                              to={`/${product[\"ownerId\"]}/${product[\"description\"]} / ${product[\"seconderyId\"]}`}\n                              style={{ color: \"blue\" }}\n                            >\n                              <Chat style={{ color: \"#496c9e\" }} />\n                            </Link>\n                          </Button>\n                          <ReactWhatsapp\n                            number={\n                              \"+972\" +\n                              users.find(\n                                (user) => user._id === product[\"owner\"]\n                              )[\"phone\"]\n                            }\n                            message={`היי ! הגעתי אליך דרך ReBuy ואני רוצה את המוצר הזה: ${product[\"name\"]}`}\n                            element={Button}\n                          >\n                            <WhatsApp style={{ color: \"#128c7e\" }} />\n                          </ReactWhatsapp>\n                          {/* <WhatsApp /> */}\n                          <Button\n                            href={`tel:${\n                              users.find(\n                                (user) => user._id === product[\"owner\"]\n                              )[\"phone\"]\n                            }`}\n                          >\n                            <Phone style={{ color: \"#496c9e\" }} />\n                          </Button>\n                        </p>\n                      </div>\n                    )}\n                    <p>\n                      <PayPal />\n                    </p>\n                  </Typography>\n                  {navigate && (\n                    <div>\n                      <h4> Navigate to the Seller</h4>\n                      <Button\n                        onClick={() => {\n                          navigate(product[\"address\"], product[\"photo\"]);\n                          setIsModelOpen(false);\n                        }}\n                      >\n                        <img\n                          src=\"https://i.pinimg.com/originals/72/bd/cc/72bdccc73e35cdce6fc49a31b4f593ca.png\"\n                          alt=\"googlemap\"\n                          style={{ width: \"7rem\", height: \"7rem\" }}\n                        />\n                      </Button>\n\n                      <OpenApp\n                        href={`https://waze.com/ul?ll=${lat},${lng}&navigate=yes`}\n                        android={`https://waze.com/ul?ll=${lat},${lng}&navigate=yes`}\n                        ios={`https://waze.com/ul?ll=${lat},${lng}&navigate=yes`}\n                      >\n                        <img\n                          src=\"https://cdn-images-1.medium.com/max/1200/1*3kS1iOOTBrvtkecae3u2aA.png\"\n                          alt=\"waze\"\n                          style={{\n                            width: \"5.5rem\",\n                            height: \"5.5rem\",\n                            borderRadius: \"15px\",\n                          }}\n                        />\n                      </OpenApp>\n                    </div>\n                  )}\n                </CardContent>\n              </Card>\n            )}\n          </Modal>\n        )}{\" \"}\n      </MediaQuery>\n    </div>\n  );\n}\n","/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/src/Components/Pages/Map/Marker.js",["254","255","256","257","258","259","260","261","262"],"import React, { useState } from \"react\";\nimport {\n  Card,\n  CardContent,\n  CardActionArea,\n  CardMedia,\n  Typography,\n  Button,\n} from \"@material-ui/core\";\nimport reBuy from \"../../../Assets/Images/ReBuyLogoBig.png\";\nimport Modal from \"react-modal\";\nimport { IoPinOutline } from \"react-icons/io5\";\nimport Carousel from \"react-bootstrap/Carousel\";\nimport PopUp from \"../../Utils/PopUp\";\n\nexport default function Marker({\n  product,\n  images,\n  users,\n  setIsModelOpen,\n  setData,\n  navigate,\n  $hover,\n}) {\n  function setProduct(product) {\n    setData(product);\n    setIsModelOpen(true);\n  }\n\n  return (\n    <div>\n      <Button size=\"small\" onClick={() => setProduct(product)}>\n        {product[\"photo\"] && images ? (\n          <Carousel style={{ width: \"3rem\", height: \"3rem\" }}>\n            {product[\"photo\"]\n              .toString()\n              .split(\",\")\n              .map((Image) => (\n                <Carousel.Item\n                  style={{\n                    width: \"3rem\",\n                    height: \"3rem\",\n                    borderRadius: \"30px\",\n                  }}\n                >\n                  <img\n                    className=\"d-block w-100\"\n                    style={{\n                      width: \"100%\",\n                      height: \"100%\",\n                      borderRadius: \"15px\",\n                    }}\n                    src={Image}\n                    alt={Image}\n                  />\n                </Carousel.Item>\n              ))}\n          </Carousel>\n        ) : (\n          <img src={reBuy} alt=\"marker\" className={\"circleImg\"} />\n        )}\n      </Button>\n    </div>\n  );\n}\n","/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/src/Components/Pages/Home/Create.js",["263","264","265"],"import React, { Component } from \"react\";\nimport api from \"../../../API/API\";\nimport styled from \"styled-components\";\nimport { Redirect } from \"react-router-dom\";\nimport Alert from \"../../Utils/Alert\";\nimport firebase from \"firebase/app\";\nimport { useIntl } from \"react-intl\";\n\nimport \"firebase/auth\";\nimport \"firebase/storage\";\n\nconst storage = firebase.storage();\n\nconst Title = styled.h1.attrs({\n  className: \"h1\",\n})``;\n\nconst Wrapper = styled.div.attrs({\n  className: \"form-group\",\n})`\n  margin: 0 30px;\n`;\n\nconst Label = styled.label`\n  margin: 5px;\n  direction: ltr;\n`;\n\nconst InputText = styled.input.attrs({\n  className: \"form-control\",\n})`\n  margin: 0 auto;\n  width: 80%;\n  text-align: center;\n`;\n\nconst Button = styled.button.attrs({\n  className: `btn btn-primary`,\n})`\n  margin: 15px 15px 15px 5px;\n`;\n\nconst CancelButton = styled.a.attrs({\n  className: `btn btn-danger`,\n})`\n  margin: 15px 15px 15px 5px;\n`;\n\nexport default class ProductInsert extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      name: \"\",\n      condition: \"\",\n      description: \"\",\n      category: \"\",\n      address: \"\",\n      price: null,\n      images: [],\n      // ownerId: null,\n      redirect: false,\n      alert: false,\n      intl: props.intl,\n    };\n  }\n\n  handleChangeInputName = async (event) => {\n    const name = event.target.value;\n    this.setState({ name });\n  };\n  handleChangeInputCondition = async (event) => {\n    const condition = event.target.value;\n    this.setState({ condition });\n  };\n  handleChangeInputDescription = async (event) => {\n    const description = event.target.value;\n    this.setState({ description });\n  };\n  handleChangeInputCategory = async (event) => {\n    const category = event.target.value;\n    this.setState({ category });\n  };\n  handleChangeInputAdrress = async (event) => {\n    const address = event.target.value;\n    this.setState({ address });\n  };\n\n  handleChangeInputImages = async (event) => {\n    return Promise.all(\n      [...event.target.files].map((image) => {\n        console.log(image);\n        storage\n          .ref(`products/${image.name}`)\n          .put(image)\n          .on(\n            \"state_changed\",\n            () => {},\n            (error) => {\n              console.log(error);\n            },\n            () =>\n              storage\n                .ref(\"products\")\n                .child(image.name)\n                .getDownloadURL()\n                .then((url) =>\n                  this.setState({\n                    images: [...this.state.images, url],\n                  })\n                )\n                .catch((error) => {\n                  Alert(error);\n                })\n          );\n      })\n    );\n  };\n\n  handleChangePrice = async (event) => {\n    const price = event.target.value;\n    this.setState({ price });\n  };\n\n  // handleChangeOwner = async (event) => {\n  //   // const ownerId = event.target.value;\n  //   const ownerId = firebase.auth().currentUser.email;\n  //   this.setState({ ownerId });\n  // };\n\n  categoryArray = [\n    \"Sport\",\n    \"Clothing\",\n    \"Electricity\",\n    \"Underwear\",\n    \"Swimwear\",\n    \"Homecare\",\n    \"Plants\",\n    \"Activewear\",\n    \"Jewlery\",\n    \"Other\",\n  ];\n  handleIncludeProduct = async () => {\n    let data = new FormData();\n    let ownerID = firebase.auth().currentUser\n      ? firebase.auth().currentUser.uid\n      : \"jacobsongal@gmail.com\";\n    data.append(\"name\", this.state.name);\n    data.append(\"condition\", this.state.condition);\n    data.append(\"description\", this.state.description);\n    data.append(\"address\", this.state.address);\n    data.append(\"price\", this.state.price);\n    data.append(\"category\", this.state.category);\n    data.append(\"ownerId\", ownerID);\n    data.append(\"seconderyId\", this.state.description + ownerID);\n    data.append(\"photo\", this.state.images);\n    console.log(this.state);\n\n    if (\n      Object.values(this.state).some((element) => {\n        return element === \"\" || element === null;\n      })\n    ) {\n      this.setState({ alert: true });\n    } else {\n      data && console.log(\"sending data\" + data.values());\n      await api\n        .insertProduct(data)\n        .then((res) => {\n          Alert(`Product inserted successfully`, true);\n          this.setState({\n            name: \"\",\n            condition: \"\",\n            description: \"\",\n            category: \"\",\n            address: \"\",\n            images: null,\n            price: null,\n\n            // ownerId: null,\n            redirect: true,\n          });\n        })\n        .catch((error) => {\n          console.log(error);\n          alert(error);\n        });\n    }\n  };\n\n  render() {\n    const {\n      name,\n      condition,\n      description,\n      address,\n      images,\n      category,\n      price,\n      // ownerId,\n      redirect,\n      alert,\n      intl,\n    } = this.state;\n    let alertMessage = \"\";\n    if (redirect) {\n      return <Redirect to=\"/\" />;\n    }\n    if (alert) {\n      alertMessage = (\n        <Alert variant=\"danger\">Please fill all the fields.</Alert>\n      );\n    }\n\n    return (\n      <Wrapper style={{ marginTop: \"50px\" }}>\n        <Title>{intl.formatMessage({ id: \"CreateProduct\" })}</Title>\n        <div style={{ textAlign: \"center\" }}>\n          <Label>Name: </Label>\n          <InputText\n            type=\"text\"\n            value={name}\n            onChange={this.handleChangeInputName}\n          />\n        </div>\n        <div style={{ textAlign: \"center\" }}>\n          {\" \"}\n          <Label>Condition: </Label>\n          <select\n            class=\"form-control\"\n            style={{\n              margin: \"0 auto\",\n              width: \"80%\",\n              textAlignLast: \"center\",\n              direction: \"ltr\",\n            }}\n            value={condition}\n            onChange={this.handleChangeInputCondition}\n          >\n            <option></option>\n            <option>USED</option>\n            <option>NEW</option>\n          </select>\n        </div>\n        <div style={{ textAlign: \"center\" }}>\n          <Label>Description: </Label>\n          <InputText\n            type=\"text\"\n            value={description}\n            onChange={this.handleChangeInputDescription}\n          />\n        </div>{\" \"}\n        <div style={{ textAlign: \"center\" }}>\n          {\" \"}\n          <Label>Category: </Label>\n          <select\n            class=\"form-control\"\n            style={{\n              margin: \"0 auto\",\n              width: \"80%\",\n              textAlignLast: \"center\",\n              direction: \"ltr\",\n            }}\n            value={category}\n            onChange={this.handleChangeInputCategory}\n          >\n            <option></option>\n            {this.categoryArray.map((category) => {\n              return (\n                <option style={{ textAlignLast: \"center\" }}>{category}</option>\n              );\n            })}\n          </select>\n        </div>\n        <div style={{ textAlign: \"center\" }}>\n          {\" \"}\n          <Label>Address: </Label>\n          <InputText\n            type=\"text\"\n            value={address}\n            onChange={this.handleChangeInputAdrress}\n          />\n        </div>\n        <div style={{ textAlign: \"center\" }}>\n          <Label>Image: </Label>\n          <InputText\n            type=\"file\"\n            multiple={true}\n            name=\"images\"\n            id=\"images\"\n            onChange={this.handleChangeInputImages}\n          />\n        </div>\n        <div style={{ textAlign: \"center\" }}>\n          {\" \"}\n          <Label>Price: </Label>\n          <InputText\n            type=\"number\"\n            value={price}\n            onChange={this.handleChangePrice}\n          />\n        </div>\n        {/* <div style={{ textAlign: \"center\" }}>\n          <Label>OwnerId: </Label>\n          <InputText\n            type=\"number\"\n            value={ownerId}\n            onChange={this.handleChangeOwner}\n          />\n        </div> */}\n        <div>\n          <div style={{ textAlign: \"center\" }}>\n            <Button onClick={this.handleIncludeProduct}>Add Product</Button>\n            <CancelButton href={\"/\"}>Cancel</CancelButton>\n            {alertMessage}\n          </div>{\" \"}\n        </div>\n      </Wrapper>\n    );\n  }\n}\n","/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/src/Components/Pages/Map/GoogleMap.js",["266","267","268","269","270","271","272"],"import React, { Component } from \"react\";\nimport api from \"../../../API/API\";\nimport GoogleMapReact from \"google-map-react\";\nimport Marker from \"./Marker\";\nimport Geocode from \"react-geocode\";\nimport Search from \"../Home/Search\";\nimport PopUp from \"../../Utils/PopUp\";\nimport OpenApp from \"react-open-app\";\nimport firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\nimport \"firebase/analytics\";\n\nconst auth = firebase.auth();\nconst firestore = firebase.firestore();\n\nexport default class GoogleMap extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      products: [],\n      images: [],\n      users: [],\n      product: null,\n      locations: [{}],\n      selected: \"tel-aviv\",\n      center: {\n        lat: 31.96996095111596,\n        lng: 34.77278720495645,\n      },\n      lat: 31.96996095111596,\n      lng: 34.77278720495645,\n      zoom: 10,\n      isModelOpen: false,\n      setLoading: this.props.setLoading,\n      directionsService: null,\n      directionsDisplay: null,\n      map: null,\n      maps: null,\n      currentUser: props.currentUser,\n    };\n    this.state.setLoading(true);\n  }\n  componentDidMount = async () => {\n    this.state.setLoading(false);\n\n    Geocode.setApiKey(\"AIzaSyDzTw-IhXNRYDH1QpvVVNp_ix9AzFC0McM\");\n    Geocode.setLanguage(\"He\");\n    Geocode.setRegion(\"Il\");\n    Geocode.setLocationType(\"ROOFTOP\");\n    Geocode.enableDebug();\n\n    try {\n      await api.getAllProducts().then((product) => {\n        this.setState({\n          products: product.data.data,\n        });\n        product.data.data.map((p, i) => {\n          p[\"address\"] &&\n            Geocode.fromAddress(p[\"address\"]).then(\n              // Geocode.fromAddress(\"RISHON-LE-ZION\").then(\n              (response) => {\n                var { lat, lng } = response.results[0].geometry.location;\n                // lat = lat + i * 0.005;\n                // lng = lng + i * 0.005;\n                lat = lat;\n                lng = lng;\n                console.log(p);\n\n                this.setState({\n                  locations: this.state.locations.concat([\n                    { id: p.name, lat: lat, lng: lng },\n                  ]),\n                });\n                // console.log(this.state.locations);\n              },\n              (error) => {\n                console.error(error);\n              }\n            );\n        });\n        this.setState((state) => {\n          const [first, ...rest] = state.locations;\n          return {\n            locations: rest,\n          };\n        });\n      });\n      await api.getAllImages().then((image) => {\n        this.setState({\n          images: image.data.data,\n        });\n      });\n      await api.getAllUsers().then((user) => {\n        this.setState({\n          users: user.data.data,\n        });\n      });\n      this.state.setLoading(false);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  searchHandler = (products) => {\n    this.setState({\n      products,\n    });\n  };\n  productHandler = (product) => {\n    let plat = this.state.locations.some((x) => x.id === product.name)\n      ? this.state.locations.find((x) => x.id === product.name).lat\n      : null;\n\n    let plng = this.state.locations.some((x) => x.id === product.name)\n      ? this.state.locations.find((x) => x.id === product.name).lng\n      : null;\n\n    this.setState({\n      product,\n      selected: product[\"address\"],\n      lat: plat,\n      lng: plng,\n    });\n    let category = product.category;\n    firestore\n      .collection(\"users\")\n      .where(\"email\", \"==\", this.state.currentUser?.email)\n      .get()\n      .then((Snapshot) => {\n        Snapshot.docs.forEach((doc) => {\n          let favCategory = doc.data().favCategory;\n          let newfavCategory = [{}];\n          let flag = false;\n          newfavCategory = favCategory;\n          console.log(newfavCategory);\n          newfavCategory.forEach((cat) => {\n            if (cat.key === category) {\n              cat.val++;\n              flag = true;\n            }\n          });\n          if (flag === false) {\n            newfavCategory.push({ key: category, val: 1 });\n          }\n          doc.ref.update({\n            favCategory: newfavCategory,\n          });\n        });\n      })\n      .catch((error) => {});\n  };\n  modalHandler = (isModelOpen) => {\n    this.setState({\n      isModelOpen,\n    });\n  };\n  render() {\n    const {\n      products,\n      images,\n      users,\n      center,\n      zoom,\n      isModelOpen,\n      product,\n      locations,\n      selected,\n      map,\n      maps,\n      lat,\n      lng,\n    } = this.state;\n\n    const apiIsLoaded = (map, maps) => {\n      console.log(map);\n      console.log(maps);\n      map &&\n        this.setState({\n          map,\n        });\n      maps &&\n        this.setState({\n          maps,\n        });\n    };\n\n    function navigate(address, image) {\n      let Gaddress;\n      Geocode.fromAddress(address).then(\n        (response) => {\n          Gaddress = response.results[0].geometry.location;\n        },\n        (error) => {\n          console.error(error);\n        }\n      );\n      const directionsService = new maps.DirectionsService();\n      const directionsDisplay = new maps.DirectionsRenderer();\n      directionsDisplay.setMap(map);\n      let infoWindow = new maps.InfoWindow();\n      if (navigator.geolocation) {\n        navigator.geolocation.getCurrentPosition(\n          (position) => {\n            const pos = {\n              lat: position.coords.latitude,\n              lng: position.coords.longitude,\n            };\n            directionsService.route(\n              {\n                origin: pos,\n                destination: Gaddress ? Gaddress : address,\n                travelMode: maps.TravelMode.DRIVING,\n              },\n              (response, status) => {\n                if (status === \"OK\") {\n                  directionsDisplay.setDirections(response);\n                  console.log(response.routes[0]);\n                  map.setCenter(pos);\n                } else {\n                  console.log(status);\n                  alert(\"Directions request failed due to \" + status);\n                }\n              }\n            );\n          },\n          () => {\n            handleLocationError(true, infoWindow, map.getCenter());\n          }\n        );\n      } else {\n        // Browser doesn't support Geolocation\n        handleLocationError(false, infoWindow, map.getCenter());\n      }\n\n      function handleLocationError(browserHasGeolocation, infoWindow, pos) {\n        infoWindow.setPosition(pos);\n        infoWindow.setContent(\n          browserHasGeolocation\n            ? \"Error: The Geolocation service failed.\"\n            : \"Error: Your browser doesn't support geolocation.\"\n        );\n        infoWindow.open(map);\n      }\n    }\n    function wazeNavigate(address, image) {\n      Geocode.fromAddress(address).then(\n        (response) => {\n          var { lat, lng } = response.results[0].geometry.location;\n          let url = `https://waze.com/ul?ll=${lat},${lng}&navigate=yes`;\n          window.open(url, \"_blank\").focus();\n        },\n        (error) => {\n          console.error(error);\n        }\n      );\n    }\n\n    function getMapOptions(maps) {\n      return {\n        streetViewControl: true,\n        scaleControl: true,\n        fullscreenControl: true,\n        styles: [\n          {\n            featureType: \"poi.business\",\n            elementType: \"labels\",\n            stylers: [\n              {\n                visibility: \"off\",\n              },\n            ],\n          },\n        ],\n        gestureHandling: \"greedy\",\n        disableDoubleClickZoom: true,\n        minZoom: 0,\n        maxZoom: 30,\n        layerTypes: [\"TrafficLayer\"],\n        mapTypeControl: true,\n        mapTypeId: maps.MapTypeId.ROADMAP,\n        mapTypeControlOptions: {\n          style: maps.MapTypeControlStyle.DROPDOWN_MENU,\n          position: maps.ControlPosition.RIGHT_CENTER,\n          mapTypeIds: [\n            maps.MapTypeId.ROADMAP,\n            maps.MapTypeId.SATELLITE,\n            maps.MapTypeId.HYBRID,\n          ],\n        },\n        zoomControl: true,\n        clickableIcons: false,\n        getCurrentPosition: true,\n      };\n    }\n\n    return (\n      <>\n        <div\n          style={{\n            position: \"absolute\",\n            // top: \"3rem\",\n            alignItems: \"center\",\n            width: \"min-content\",\n            padding: \"2rem\",\n            zIndex: \"99\",\n            // marginTop: \"30px\",\n          }}\n        >\n          <Search\n            searchHandler={this.searchHandler}\n            style={{ position: \"absolute\" }}\n          />\n        </div>\n        <div style={{ height: \"97.2vh\", width: \"100%\" }}>\n          <GoogleMapReact\n            bootstrapURLKeys={{\n              key: \"AIzaSyAiTqUoIPktHrM66nIC7fRevgXvj7BzN-A\",\n              language: \"he\",\n              region: \"il\",\n            }}\n            defaultCenter={center}\n            defaultZoom={zoom}\n            options={getMapOptions}\n            yesIWantToUseGoogleMapApiInternals\n            onGoogleApiLoaded={({ map, maps }) => apiIsLoaded(map, maps)}\n          >\n            <PopUp\n              product={product}\n              images={images}\n              users={users}\n              isModelOpen={isModelOpen}\n              setIsModelOpen={this.modalHandler}\n              navigate={navigate}\n              wazeNavigate={wazeNavigate}\n              lat={lat}\n              lng={lng}\n            />\n            {products &&\n              products.map((product, i) => {\n                // console.log(locations.find((x) => x.id === product._id));\n                return (\n                  <Marker\n                    lat={\n                      locations.some((x) => x.id === product.name)\n                        ? locations.find((x) => x.id === product.name).lat\n                        : null\n                    }\n                    lng={\n                      locations.some((x) => x.id === product.name)\n                        ? locations.find((x) => x.id === product.name).lng\n                        : null\n                    }\n                    product={product}\n                    images={images}\n                    users={users}\n                    key={i}\n                    setIsModelOpen={this.modalHandler}\n                    setData={this.productHandler}\n                  />\n                );\n              })}\n          </GoogleMapReact>\n        </div>\n      </>\n    );\n  }\n}\n","/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/src/Components/Pages/Home/Groupby.js",["273","274","275","276","277","278","279","280","281","282","283"],"import React, { useState, useEffect } from \"react\";\nimport { Form, Button, Col } from \"react-bootstrap\";\nimport api from \"../../../API/API\";\n\nfunction Groupby(props) {\n  const [products, setProducts] = useState([]);\n  const [data, setData] = useState([]);\n  const [total, setTotal] = useState(0);\n\n  useEffect(async () => {\n    await api\n      .groupByCategory()\n      .then((res) => {\n        setProducts(res.data.products);\n        setData(res.data.data);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, []);\n\n  const onChange = async (e) => {\n    const category = e.target.value.split(\" \")[0];\n    await api\n      .groupByCategory(category)\n      .then((res) => {\n        console.log(res.data.products);\n        props.searchHandler(res.data.products);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n  const mapReduceHandler = async () => {\n    await api\n      .mapAndReduce()\n      .then((res) => {\n        console.log(res);\n        setTotal(res);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n  return (\n    <div style={{ display: \"flex\", flexDirection: \"row\" }}>\n      <Form>\n        <Form.Group\n          style={{\n            direction: \"ltr\",\n          }}\n          controlId=\"formGridState\"\n        >\n          {/* <Form.Label>Group By</Form.Label> */}\n          <Form.Group controlId=\"exampleForm.ControlSelect1\">\n            {/* <Form.Label>Group By</Form.Label> */}\n            <Form.Control\n              as=\"select\"\n              placeholder=\"Choose...\"\n              onChange={(e) => onChange(e)}\n            >\n              <option>Group By</option>\n              <option value=\"\">Clear Search</option>\n              {data.map((obj) => {\n                return (\n                  <option>\n                    {obj._id} ({obj.total})\n                  </option>\n                );\n              })}\n            </Form.Control>\n          </Form.Group>\n        </Form.Group>\n      </Form>\n      {/* <Button variant=\"warning\" onClick={mapReduceHandler}>\n        MapReduce\n      </Button> */}\n    </div>\n  );\n}\n\nexport default Groupby;\n\n{\n  /* <Form.Group controlId=\"formGroupEmail\"> */\n}\n{\n  /* <Form.Label>Groupby Category</Form.Label> */\n}\n{\n  /* <Form.Control\n          type=\"text\"\n          style={{ direction: \"ltr\" }}\n          placeholder=\"Enter search\"\n          onChange={(e) => changeHandler(e)}\n        /> */\n}\n{\n  /* <Button onClick={clickHandler}>Group By Category</Button> */\n}\n{\n  /* </Form.Group> */\n}\n","/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/src/Components/Utils/PageBody.js",["284","285","286"],"import React from \"react\";\nimport { IoLogoBuffer, IoAdd } from \"react-icons/io5\";\nimport { Button } from \"@material-ui/core\";\nimport { Link } from \"react-router-dom\";\n\nexport default function PageBody({ color, boldPar, par, pic, to, button }) {\n  return (\n    <div\n      style={{\n        textAlign: \"center\",\n        margin: \"2rem\",\n        height: \"90%\",\n        borderRadius: \"50px\",\n        backgroundColor: color,\n        color: \"gray\",\n      }}\n    >\n      <img src={pic} style={{ marginTop: \"40px\", height: \"50px\" }} />\n      <p style={{ margin: \"2rem\" }}>\n        <b style={{ display: \"block\" }}>{boldPar}</b> {par}\n      </p>\n      <Link to={to}>\n        <Button\n          style={{\n            textAlign: \"center\",\n            margin: \"1rem\",\n            padding: \"1rem\",\n            height: \"90%\",\n            textOverflow: \"ellipsis\",\n            whiteSpace: \"nowrap\",\n            width: \"auto\",\n            background: \"#343798\",\n            color: \"white\",\n            borderRadius: \"66px 66px 66px 66px\",\n            boxShadow: \"0px 0px 10px 0px\",\n          }}\n        >\n          <h5>{button}</h5>\n        </Button>\n      </Link>\n    </div>\n  );\n}\n","/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/src/Components/Utils/Alert.js",[],"/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/src/index.js",[],"/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/src/Styles/MessagesMain.js",[],"/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/src/Components/SSO/Config.js",[],"/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/src/Components/SSO/Registration.js",[],"/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/src/API/API.js",[],"/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/src/Components/Pages/Chat/chat.js",["287","288","289","290","291","292","293"],"import \"./chat.css\";\nimport React, { useRef, useState, useEffect } from \"react\";\nimport firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\nimport \"firebase/analytics\";\n\nimport { useAuthState } from \"react-firebase-hooks/auth\";\nimport { useCollectionData } from \"react-firebase-hooks/firestore\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { Avatar } from \"@material-ui/core\";\nimport { NavItem } from \"react-bootstrap\";\nimport { func } from \"prop-types\";\nimport ChatRoom from \"./ChatRoom\";\n\nconst auth = firebase.auth();\nconst firestore = firebase.firestore();\nconst analytics = firebase.analytics();\n\nconst Chat = () => {\n  const [user] = useAuthState(auth);\n  const { sellerId } = useParams();\n  const { description } = useParams();\n  const { secondaryId } = useParams();\n  let ifSeller;\n  if (user && user.uid == sellerId) {\n    ifSeller = true;\n  }\n  return (\n    <div style={{ width: \"100%\", height: \"100%\" }}>\n      {ifSeller ? (\n        <SellerArea sellerId={sellerId} prodId={secondaryId} />\n      ) : (\n        <ChatRoom\n          sellerId={sellerId}\n          currentId={user?.uid}\n          productId={secondaryId}\n          currentName={user?.displayName}\n          desc={description}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default Chat;\n\nexport function SellerArea({ sellerId, prodId }) {\n  console.log(\"sellerId : \" + sellerId);\n  console.log(\"prodId : \" + prodId);\n  let tmp = [{ name: \"loading\" }];\n  const [recivers, setRecivers] = useState(tmp);\n\n  useEffect(() => {\n    async function use() {\n      firestore\n        .collection(`users/${sellerId}/prod/${prodId}/recivers`)\n        .get()\n        .then((querySnapshot) => {\n          let temp = [];\n          querySnapshot.docs.map((doc) => temp.push(doc.data()));\n          setRecivers(temp);\n        })\n        .catch((error) => {\n          console.log(\"Error getting documents: \", error);\n        });\n    }\n    use();\n  }, []);\n\n  return (\n    <>\n      <div className=\"card contacts_card\">\n        <div className=\"card-header\">\n          <div className=\"col-12\">\n            <div className=\"header \">\n              <h1>People who interested your product</h1>\n            </div>\n          </div>\n        </div>\n        <div className=\"card-body contacts_body\">\n          <ui className=\"contacts\">\n            <li className=\"active\">\n              {recivers.map((reciver, index) => (\n                <>\n                  <div className=\"d-flex bd-highlight\">\n                    <div className=\"img_cont\">\n                      <Avatar\n                        style={{\n                          alignSelf:\n                            window.screen.width <= 800 ? \"right\" : \"center\",\n                          width: \"70px\",\n                          height: \"70px\",\n                          borderRadius: \"50%\",\n                        }}\n                        variant=\"rounded\"\n                        src={\n                          reciver.photoURL\n                            ? reciver.photoURL\n                            : reciver[\"image\"]\n                            ? reciver[\"image\"]\n                            : \"\"\n                        }\n                      >\n                        {reciver\n                          ? reciver.name.toString()[0].toUpperCase()\n                          : null}\n                      </Avatar>\n                      {/* <img\n                        src={\n                          item.photoURL ||\n                          \"https://api.adorable.io/avatars/23/abott@adorable.png\"\n                        }\n                        className=\"rounded-circle user_img\"\n                      /> */}\n                    </div>\n                    <div className=\"user_info\">\n                      <span>\n                        <Link\n                          to={`/chat/${reciver.id}/${prodId}/${sellerId}`}\n                          key={index}\n                        >\n                          {reciver.name}\n                        </Link>\n                      </span>\n                      <p></p>\n                    </div>\n                  </div>\n                  <hr />\n                </>\n              ))}\n            </li>\n          </ui>\n        </div>\n      </div>\n    </>\n  );\n}\n","/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/src/Components/Pages/Home/Update.js",["294","295"],"import React, { Component } from \"react\";\nimport api from \"../../../API/API\";\nimport { Redirect } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport Alert from \"../../Utils/Alert\";\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\n\nconst Title = styled.h1.attrs({\n  className: \"h1\",\n})``;\n\nconst Wrapper = styled.div.attrs({\n  className: \"form-group\",\n})`\n  margin: 0 30px;\n  direction: rtl;\n`;\n\nconst Label = styled.label`\n  margin: 5px;\n`;\n\nconst InputText = styled.input.attrs({\n  className: \"form-control\",\n})`\n  margin: 0 auto;\n  width: 80%;\n  text-align: center;\n`;\n\nconst Button = styled.button.attrs({\n  className: `btn btn-primary`,\n})`\n  margin: 15px 15px 15px 5px;\n`;\n\nconst CancelButton = styled.a.attrs({\n  className: `btn btn-danger`,\n})`\n  margin: 15px 15px 15px 5px;\n`;\n\nexport default class ProductUpdate extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      id: window.location.href.split(\"/Update/\")[1],\n      name: \"\",\n      condition: \"\",\n      description: \"\",\n      category: \"\",\n      address: \"\",\n      images: null,\n      price: null,\n      ownerId: null,\n      redirect: false,\n      alert: false,\n    };\n  }\n\n  handleChangeInputName = async (event) => {\n    const name = event.target.value;\n    this.setState({ name });\n  };\n  handleChangeInputCondition = async (event) => {\n    const condition = event.target.value;\n    this.setState({ condition });\n  };\n  handleChangeInputDescription = async (event) => {\n    const description = event.target.value;\n    this.setState({ description });\n  };\n  handleChangeInputAdrress = async (event) => {\n    const address = event.target.value;\n    this.setState({ address });\n  };\n  handleChangeInputImages = async (event) => {\n    let images = event.target.files;\n    this.setState({\n      images,\n    });\n  };\n  handleChangeInputCategory = async (event) => {\n    const category = event.target.value;\n    this.setState({ category });\n  };\n  handleChangeInputPrice = async (event) => {\n    const price = event.target.value;\n    this.setState({ price });\n  };\n\n  categoryArray = [\n    \"Sport\",\n    \"Clothing\",\n    \"Electricity\",\n    \"Underwear\",\n    \"Swimwear\",\n    \"Homecare\",\n    \"Plants\",\n    \"Activewear\",\n    \"Jewlery\",\n    \"Other\",\n  ];\n  handleIncludeProduct = async () => {\n    let data = new FormData();\n    let ownerID = firebase.auth().currentUser\n      ? firebase.auth().currentUser.email\n      : \"jacobsongal@gmail.com\";\n    data.append(\"name\", this.state.name);\n    data.append(\"condition\", this.state.condition);\n    data.append(\"description\", this.state.description);\n    data.append(\"category\", this.state.category);\n    data.append(\"address\", this.state.address);\n    for (let i = 0; i < this.state.images.length; i++) {\n      data.append(\"images\", this.state.images[i]);\n    }\n\n    data.append(\"price\", this.state.price);\n    data.append(\"ownerId\", ownerID);\n\n    if (\n      Object.values(this.state).some((element) => {\n        return element === \"\" || element === null;\n      })\n    ) {\n      this.setState({ alert: true });\n    } else {\n      await api\n        .updateProductById(this.state.id, data)\n        .then((res) => {\n          console.log(res);\n          console.log(\"stam\");\n          Alert(`Product updated successfully`, true);\n          this.setState({\n            name: \"\",\n            condition: \"\",\n            description: \"\",\n            category: \"\",\n            address: \"\",\n            images: null,\n            price: null,\n            ownerId: null,\n            redirect: true,\n            alert: false,\n          });\n        })\n        .catch((err) => console.log(err));\n    }\n  };\n  componentDidMount = async () => {\n    const { id } = this.state;\n    const product = await api.getProductById(id);\n    console.log(product);\n    this.setState({\n      name: product.data.data.name,\n      condition: product.data.data.condition,\n      description: product.data.data.description,\n      category: product.data.data.category,\n      images: product.data.data.images,\n      address: product.data.data.address,\n      price: product.data.data.price,\n      ownerId: product.data.data.ownerId,\n    });\n  };\n\n  render() {\n    const {\n      name,\n      condition,\n      description,\n      images,\n      address,\n      price,\n      category,\n      ownerId,\n      redirect,\n      alert,\n    } = this.state;\n    let alertMessage = \"\";\n    if (redirect) {\n      return <Redirect to=\"/\" />;\n    }\n    if (alert) {\n      alertMessage = (\n        <Alert variant=\"danger\">Please fill all the fields.</Alert>\n      );\n    }\n    return (\n      <Wrapper style={{ marginTop: \"50px\" }}>\n        <Title>Update Product</Title>\n        <div style={{ textAlign: \"center\" }}>\n          <Label>Name: </Label>\n          <InputText\n            type=\"text\"\n            value={name}\n            onChange={this.handleChangeInputName}\n          />\n        </div>\n        <div style={{ textAlign: \"center\" }}>\n          {\" \"}\n          <Label>Condition: </Label>\n          <select\n            class=\"form-control\"\n            style={{ margin: \"0 auto\", width: \"80%\", textAlignLast: \"center\" }}\n            value={condition}\n            onChange={this.handleChangeInputCondition}\n          >\n            <option></option>\n            <option>USED</option>\n            <option>NEW</option>\n          </select>\n        </div>\n        <div style={{ textAlign: \"center\" }}>\n          <Label>Description: </Label>\n          <InputText\n            type=\"text\"\n            value={description}\n            onChange={this.handleChangeInputDescription}\n          />\n        </div>{\" \"}\n        <div style={{ textAlign: \"center\" }}>\n          {\" \"}\n          <Label>Category: </Label>\n          <select\n            class=\"form-control\"\n            style={{ margin: \"0 auto\", width: \"80%\", textAlignLast: \"center\" }}\n            value={category}\n            onChange={this.handleChangeInputCategory}\n          >\n            <option></option>\n            {this.categoryArray.map((category) => {\n              return <option>{category}</option>;\n            })}\n          </select>\n        </div>\n        <div style={{ textAlign: \"center\" }}>\n          {\" \"}\n          <Label>Address: </Label>\n          <InputText\n            type=\"text\"\n            value={address}\n            onChange={this.handleChangeInputAdrress}\n          />\n        </div>\n        <div style={{ textAlign: \"center\" }}>\n          <Label>Image: </Label>\n          <InputText\n            type=\"file\"\n            multiple={true}\n            name=\"images\"\n            id=\"images\"\n            onChange={this.handleChangeInputImages}\n          />\n        </div>\n        <div style={{ textAlign: \"center\" }}>\n          {\" \"}\n          <Label>Price: </Label>\n          <InputText\n            type=\"number\"\n            value={price}\n            onChange={this.handleChangeInputPrice}\n          />\n        </div>\n        <div>\n          <div style={{ textAlign: \"center\" }}>\n            <Button onClick={this.handleIncludeProduct}>Update Product</Button>\n            <CancelButton href={\"/Home\"}>Cancel</CancelButton>\n            {alertMessage}\n          </div>{\" \"}\n        </div>\n      </Wrapper>\n    );\n  }\n}\n","/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/src/Components/NavBar/User.js",["296","297","298","299","300"],"import React, { useContext, useEffect, useState } from \"react\";\nimport { useIntl } from \"react-intl\";\nimport { Menu, MenuItem } from \"react-pro-sidebar\";\nimport { SubMenu } from \"react-pro-sidebar\";\nimport { NavLink, Redirect } from \"react-router-dom\";\nimport { Dropdown } from \"react-bootstrap\";\nimport Star from \"@material-ui/icons/StarRounded\";\nimport Person from \"@material-ui/icons/PersonRounded\";\nimport firebaseConfig from \"../SSO/Config.js\";\nimport { AuthContext, Admins } from \"../SSO/Auth\";\nimport api from \"../../API/API\";\nimport Switch from \"react-switch\";\n\nexport default function User({\n  handleToggleSidebar,\n  setLocale,\n  locale,\n  user,\n  setUser,\n  name,\n  setName,\n  image,\n  setImage,\n}) {\n  const intl = useIntl();\n  const { currentUser } = useContext(AuthContext);\n  const Admin = currentUser ? Admins(currentUser.email) : false;\n  // const [user, setUser] = useState(null);\n  // const [name, setName] = useState(null);\n  // const [image, setImage] = useState(null);\n\n  // useEffect(() => {\n  //   async function use() {\n  //     if (!user) {\n  //       let response = await api.getUserById(currentUser?.email.toUpperCase());\n  //       if (!response)\n  //         response = await api.getUserById(currentUser?.email.toLowerCase());\n  //       console.log(response.data.data);\n  //       setUser(response.data.data);\n  //     } else {\n  //       console.log(user);\n  //       !name &&\n  //         setName(\n  //           user\n  //             ? user[\"name\"]\n  //             : currentUser && currentUser.displayName\n  //             ? currentUser.displayName\n  //             : intl.formatMessage({ id: \"welcome\" })\n  //         );\n  //       !image &&\n  //         setImage(\n  //           user\n  //             ? user[\"image\"]\n  //             : currentUser && currentUser.photoURL\n  //             ? currentUser.photoURL\n  //             : null\n  //         );\n  //     }\n  //   }\n  //   use();\n  // }, [user, setUser, name, setName, image, setImage, currentUser, intl]);\n\n  function UserLogo() {\n    if (image) {\n      return (\n        <img\n          src={image}\n          alt=\"User\"\n          style={{\n            alignContent: \"center\",\n            width: \"100%\",\n            height: \"100%\",\n            borderRadius: \"55px\",\n          }}\n        />\n      );\n    } else return <Person className=\"userPhoto\" />;\n  }\n\n  return (\n    <>\n      <Menu iconShape=\"circle\">\n        <SubMenu\n          title={name ? name : currentUser?.displayName}\n          icon={<UserLogo />}\n        >\n          {!Admin && (\n            <>\n              <MenuItem icon={<Star />}>\n                <NavLink to=\"/settings\" onClick={handleToggleSidebar}>\n                  {intl.formatMessage({ id: \"profile\" })}\n                </NavLink>\n              </MenuItem>\n              <MenuItem icon={<Star />}>\n                <NavLink to=\"/Favorites\" onClick={handleToggleSidebar}>\n                  {intl.formatMessage({ id: \"Favorites\" })}\n                </NavLink>\n              </MenuItem>\n            </>\n          )}\n          <MenuItem icon={<Star />}>\n            {intl.formatMessage({ id: \"Language\" })}\n            {\"    |  \"}\n            <Switch\n              height={10}\n              width={30}\n              checkedIcon={true}\n              uncheckedIcon={true}\n              onChange={() => setLocale(locale === \"he\" ? \"en\" : \"he\")}\n              checked={locale === \"he\" ? true : false}\n              onColor=\"#219de9\"\n              offColor=\"#bbbbbb\"\n            />\n          </MenuItem>\n          <MenuItem onClick={() => firebaseConfig.auth().signOut()}>\n            {intl.formatMessage({ id: \"disconnect\" })}\n          </MenuItem>\n        </SubMenu>\n      </Menu>\n      {Admin && (\n        <Menu iconShape=\"circle\">\n          <Menu title={intl.formatMessage({ id: \"welcome\" })}>\n            <MenuItem icon={<Star />}>\n              <NavLink to=\"/Admin\" onClick={handleToggleSidebar}>\n                {intl.formatMessage({ id: \"Administrator\" })}\n              </NavLink>\n            </MenuItem>\n          </Menu>\n        </Menu>\n      )}\n    </>\n  );\n}\n","/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/src/Components/Utils/PayPal.js",[],"/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/src/Components/Pages/Chat/SellerRoom.js",["301"],"import { Link, useParams } from \"react-router-dom\";\nimport ChatRoom from \"./ChatRoom\";\nconst SellerRoom = () => {\n  const { sellerId } = useParams();\n  const { product } = useParams();\n  const { currentId } = useParams();\n  return (\n    <>\n      <ChatRoom\n        sellerId={sellerId}\n        currentId={currentId}\n        productId={product}\n        currentName={\"flag\"}\n      />\n    </>\n  );\n};\n\nexport default SellerRoom;\n","/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/src/Components/Pages/Chat/ChatRoom.js",["302","303","304"],"import \"./chat.css\";\nimport React, { useRef, useState } from \"react\";\nimport firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\nimport \"firebase/analytics\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport { useAuthState } from \"react-firebase-hooks/auth\";\nimport { useCollectionData } from \"react-firebase-hooks/firestore\";\n// import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n// import { faEllipsisV } from \"@fontawesome/free-solid-svg-icons\";\nimport { BorderBottom } from \"@material-ui/icons\";\n\nconst auth = firebase.auth();\nconst firestore = firebase.firestore();\n\nfunction ChatRoom({ sellerId, currentId, productId, currentName, desc }) {\n  const [user] = useAuthState(auth);\n  const [photoURL, setPhotoURL] = useState(null);\n  const [sellerName, setSellerName] = useState(null);\n  const [sellerPhoto, setSellerPhoto] = useState(null);\n  const dummy = useRef();\n  const reciverRef = firestore\n    .collection(\"users\")\n    .doc(sellerId)\n    .collection(\"prod\")\n    .doc(productId)\n    .collection(\"recivers\")\n    .doc(currentId);\n  const messagesRefCurrent = firestore\n    .collection(\"users\")\n    .doc(currentId)\n    .collection(\"prod\")\n    .doc(productId)\n    .collection(\"recivers\")\n    .doc(sellerId)\n    .collection(\"messages\");\n  const messagesRefSeller = firestore\n    .collection(\"users\")\n    .doc(sellerId)\n    .collection(\"prod\")\n    .doc(productId)\n    .collection(\"recivers\")\n    .doc(currentId)\n    .collection(\"messages\");\n  const queryCurrent = messagesRefCurrent.orderBy(\"createdAt\");\n  const [messagesCurrent] = useCollectionData(queryCurrent, { idField: \"id\" });\n  firestore\n    .collection(\"users\")\n    .doc(auth.currentUser?.uid)\n    .get()\n    .then((doc) => {\n      if (doc.exists) {\n        setPhotoURL(doc.data().image);\n      } else {\n        // doc.data() will be undefined in this case\n\n        console.log(\"No such document!\");\n      }\n    })\n    .catch((error) => {\n      console.log(\"Error getting document:\", error);\n    });\n\n  firestore\n    .collection(\"users\")\n    .doc(sellerId)\n    .get()\n    .then((doc) => {\n      if (doc.exists) {\n        setSellerName(doc.data().name);\n      } else {\n        // doc.data() will be undefined in this case\n\n        console.log(\"No such document!\");\n      }\n    })\n    .catch((error) => {\n      console.log(\"Error getting document:\", error);\n    });\n\n  firestore\n    .collection(\"users\")\n    .doc(sellerId)\n    .get()\n    .then((doc) => {\n      if (doc.exists) {\n        setSellerPhoto(doc.data().image);\n      } else {\n        // doc.data() will be undefined in this case\n\n        console.log(\"No such document!\");\n      }\n    })\n    .catch((error) => {\n      console.log(\"Error getting document:\", error);\n    });\n\n  const [formValue, setFormValue] = useState(\"\");\n\n  const SendMessage = async (e) => {\n    e.preventDefault();\n    const { uid } = auth.currentUser;\n    await messagesRefCurrent.add({\n      text: formValue,\n      createdAt: firebase.firestore.FieldValue.serverTimestamp(),\n      uid,\n      photoURL,\n      name: user?.displayName,\n    });\n\n    await messagesRefSeller.add({\n      text: formValue,\n      createdAt: firebase.firestore.FieldValue.serverTimestamp(),\n      uid,\n      photoURL,\n      name: user?.displayName,\n    });\n\n    setFormValue(\"\");\n    dummy.current.scrollIntoView({ behavior: \"smooth\" });\n    if (currentName != \"flag\") {\n      await reciverRef.set({\n        id: currentId,\n        name: currentName,\n        photoURL: photoURL,\n        prodID: productId,\n      });\n    }\n  };\n\n  return (\n    <div className=\"card\">\n      <div className=\"card-header msg_head\">\n        <div className=\"d-flex head  bd-highlight\">\n          {/* <img\n              src={\n                sellerPhoto\n                  ? sellerPhoto\n                  : \"https://api.adorable.io/avatars/23/abott@adorable.png\"\n              }\n              className=\"rounded-circle user_img\"\n            /> */}\n          {sellerPhoto !== null ? (\n            <img\n              style={{\n                alignSelf: window.screen.width <= 800 ? \"right\" : \"center\",\n                width: \"100px\",\n                height: \"100px\",\n                borderRadius: \"50%\",\n              }}\n              variant=\"top\"\n              src={sellerPhoto}\n              alt={sellerPhoto}\n            />\n          ) : (\n            <Avatar\n              style={{\n                alignSelf: window.screen.width <= 800 ? \"right\" : \"center\",\n                width: \"100px\",\n                height: \"100px\",\n                borderRadius: \"50%\",\n              }}\n            />\n          )}\n          <div className=\"user_info\">\n            <span>\n              Chat with {sellerName}\n              <hr />\n              {desc}\n            </span>\n          </div>\n        </div>\n        <span id=\"action_menu_btn\">\n          {/* <FontAwesomeIcon icon={faEllipsisV} /> */}\n        </span>\n        <div class=\"action_menu\">\n          <ul>\n            <li>\n              <i class=\"fas fa-user-circle\"></i> View profile\n            </li>\n            <li>\n              <i class=\"fas fa-ban\"></i> Block\n            </li>\n          </ul>\n        </div>\n      </div>\n      <div className=\"card-body msg_card_body\">\n        {messagesCurrent &&\n          messagesCurrent.map((msg) => (\n            <ChatMessage key={msg.id} message={msg} />\n          ))}\n        <span ref={dummy}></span>\n      </div>\n      <div class=\"card-footer\">\n        <form className=\"form-inline form\" onSubmit={SendMessage}>\n          <button type=\"none\" className=\"button\" disabled={!formValue}>\n            😀\n          </button>\n          <div className=\"input\">\n            <input\n              type=\"text\"\n              className=\"form-control input  form-control-sm w-100  text-center \"\n              value={formValue}\n              onChange={(e) => setFormValue(e.target.value)}\n              style={{\n                backgroundColor: \"#282c3454\",\n                color: \"wheat\",\n                margin: \"0 auto\",\n                border: \"1px solid transparent\",\n                borderRadius: \"20px\",\n              }}\n              placeholder=\".. say something nice\"\n            />\n          </div>\n          <button type=\"submit\" className=\"button\" disabled={!formValue}>\n            🕊️\n          </button>\n        </form>\n      </div>\n    </div>\n  );\n}\n\nexport default ChatRoom;\nfunction ChatMessage(props) {\n  const { text, uid, photoURL, name } = props.message;\n\n  const messageClass = uid === auth.currentUser.uid ? \"sent\" : \"received\";\n\n  return (\n    <>\n      <div className={`message ${messageClass}`}>\n        <img\n          className=\"img\"\n          src={\n            photoURL || \"https://api.adorable.io/avatars/23/abott@adorable.png\"\n          }\n        />\n        <div class=\"msg_cotainer\">\n          <p className=\"p\">{text}</p>\n          <span className=\"msg_time\">from {name}</span>\n        </div>\n      </div>\n    </>\n  );\n}\n","/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/src/Components/Pages/Categories/Categories.js",["305","306","307"],"import React, { useState, useEffect } from \"react\";\nimport api from \"../../../API/API\";\nimport CardList from \"../Home/CardList\";\nimport { Card } from \"react-bootstrap\";\nimport { useParams } from \"react-router-dom\";\nimport { useIntl } from \"react-intl\";\n\nfunction Categories() {\n  const [category, setCategory] = useState(null);\n  const [products, setProducts] = useState(null);\n  const [users, setUsers] = useState(null);\n  let { id } = useParams();\n  const intl = useIntl();\n\n  useEffect(() => {\n    console.log(window.location.href);\n    console.log(id);\n    if (!category) {\n      setCategory(id);\n      // setCategory(window.location.href.split(\"/categories/\")[1]);\n    }\n    if (!products) {\n      api.getAllProducts().then((res) => setProducts(res.data.data));\n    }\n    if (!users) {\n      api.getAllUsers().then((res) => setUsers(res.data.data));\n    }\n  }, [category, products, id]);\n  {\n  }\n  const deleteHandler = (productId) => {\n    // setProducts(\n    //   products.filter((product) => {\n    //     return product._id !== productId.data._id;\n    //   })\n    // );\n  };\n  return (\n    <Card\n      style={{\n        height: \"100%\",\n        alignItems: \"center\",\n        textAlign: \"center\",\n        border: \"none\",\n      }}\n    >\n      <Card.Header\n        className=\"userHeader\"\n        style={{\n          justifyContent: \"center\",\n        }}\n      >\n        <Card.Title\n          style={{\n            margin: \"1rem\",\n            width: \"80%\",\n            color: \"#147764\",\n            alignSelf: \"center\",\n          }}\n        >\n          {intl.formatMessage({ id: id })}\n        </Card.Title>\n      </Card.Header>\n      <Card.Body style={{ alignItems: \"center\" }}>\n        {products && users ? (\n          <CardList\n            products={products.filter((prod) => prod.category === id)}\n            users={users}\n            deleteHandler={deleteHandler}\n          />\n        ) : (\n          <Card\n            style={{\n              width: \"100%\",\n              height: \"50%\",\n              borderRadius: \"35px\",\n              alignItems: \"center\",\n              textAlign: \"center\",\n              display: \"flex\",\n              justifyContent: \"center\",\n              padding: \"10px\",\n              backgroundColor: \"rgba(0,0,50,0.1)\",\n            }}\n          >\n            <p> אין לנו עוד מוצרים בקטגוריה הזאת ! </p>\n          </Card>\n        )}\n      </Card.Body>\n    </Card>\n  );\n}\nexport default Categories;\n\nfunction CategoriesPage({ category, products, users }) {\n  const deleteHandler = (productId) => {\n    // setProducts(\n    //   products.filter((product) => {\n    //     return product._id !== productId.data._id;\n    //   })\n    // );\n  };\n  return (\n    <Card className=\"userSettings\">\n      <Card.Header className=\"userHeader\">\n        <Card.Title\n          style={{\n            margin: \"1rem\",\n            width: \"80%\",\n            color: \"#147764\",\n            alignSelf: \"center\",\n          }}\n        >\n          {category}\n        </Card.Title>\n      </Card.Header>\n      <Card.Body style={{ alignItems: \"center\" }}>\n        {products && users ? (\n          <CardList\n            products={products.filter(\n              (prod) =>\n                prod.category === window.location.href.split(\"/categories/\")[1]\n            )}\n            users={users}\n            deleteHandler={deleteHandler}\n          />\n        ) : (\n          <Card\n            style={{\n              width: \"100%\",\n              height: \"50%\",\n              borderRadius: \"35px\",\n              alignItems: \"center\",\n              textAlign: \"center\",\n              display: \"flex\",\n              justifyContent: \"center\",\n              padding: \"10px\",\n              backgroundColor: \"rgba(0,0,50,0.1)\",\n            }}\n          >\n            <p> אין לנו עוד מוצרים בקטגוריה הזאת ! </p>\n          </Card>\n        )}\n      </Card.Body>\n    </Card>\n  );\n}\n","/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/src/Components/SSO/Welcome.js",["308","309","310","311"],"import React, { useContext } from \"react\";\nimport { Form, Col, Row, Button } from \"react-bootstrap\";\nimport { Redirect } from \"react-router-dom\";\nimport { AuthContext } from \"./Auth\";\n\nexport default function Welcome({ setWelcomeDone }) {\n  document.title = \"ReBuy | Welcome\";\n  const { currentUser } = useContext(AuthContext);\n  if (currentUser) {\n    return <Redirect to=\"/\" />;\n  }\n  return (\n    <Form>\n      <Form.Label as=\"h1\">Welcome to ReBuy</Form.Label>\n      <Form.Label\n        style={{\n          justifyContent: \"center\",\n          textAlign: \"center\",\n          fontFamily: \"LucidaConsole,CourierNew,monospace\",\n          fontFamily: \"Raleway,sans-serif\",\n          fontSize: \"16px\",\n          fontWeight: \"500,lineHeight\",\n          textAlign: \"center\",\n          boxShadow: \"0px0px15px#fff\",\n          animation: \"glow1sease-in-outinfinitealternate\",\n        }}\n      >\n        <p>\n          Tiered of getting products that doesn't fit for you or just not what\n          you expected ?!\n        </p>\n        <p style={{ fontSize: \"25px\" }}>Welcome to ReBuy!</p>\n        <p>\n          {\" \"}\n          ReBuy is an e-commerce platform for Buying and also Selling products\n          that are just not good for you but could be excellent fit for others!\n        </p>\n      </Form.Label>\n      <Form.Group controlId=\"formPlaintextEmail\"></Form.Group>\n\n      <Button variant=\"primary\" onClick={() => setWelcomeDone(true)} size=\"lg\">\n        Get In!\n      </Button>\n    </Form>\n  );\n}\n","/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/src/Components/Pages/Chat/Notifications.js",["312","313","314","315","316","317","318","319","320","321","322","323","324","325","326","327","328"],"import React, { useRef, useState, useContext, useEffect } from \"react\";\nimport Page from \"../../Utils/Page\";\n// import ChatRoom from \"./ChatRoom\";\nimport \"./chat.css\";\nimport firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\nimport \"firebase/analytics\";\nimport { useAuthState } from \"react-firebase-hooks/auth\";\nimport { AuthContext } from \"../../SSO/Auth\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { Avatar, Button } from \"@material-ui/core\";\nimport { SellerArea } from \"./chat\";\n\n// const auth = firebase.auth();\nconst firestore = firebase.firestore();\n// const analytics = firebase.analytics();\n\nexport default function Notifications({ title, setTitle, setActive, user }) {\n  // const [user] = useAuthState(auth);\n  // const { currentUser } = useContext(AuthContext);\n  // const user = currentUser;\n  console.log(user);\n  const [loading, setLoading] = useState(false);\n  let tmp = [{ name: \"loading\" }];\n  const [products, setProducts] = useState(tmp);\n  const [sellerId, setSellerId] = useState();\n  const [secondaryId, setScondaryId] = useState();\n  const [selling, setSelling] = useState(false);\n  const [itemId, setItemId] = useState(\"\");\n  const userId = user && user[\"uid\"];\n\n  useEffect(() => {\n    async function use() {\n      firestore\n        .collection(`products`)\n        .where(\"ownerId\", \"==\", userId && userId)\n        .get()\n        .then((querySnapshot) => {\n          let temp = [];\n          querySnapshot.docs.map((doc) => temp.push(doc.data()));\n          setProducts(temp);\n        })\n        .catch((error) => {\n          console.log(\"Error getting documents: \", error);\n        });\n    }\n    use();\n  }, [user]);\n\n  return (\n    <Page\n      loading={loading}\n      title={title}\n      color={\"#fdeded\"}\n      setTitle={setTitle}\n      add={false}\n      FAB=\"none\"\n      dots={false}\n    >\n      <div className=\"card contacts_card\">\n        <div className=\"card-header\">\n          <div className=\"col-12\">\n            <div className=\"header \">\n              <h1>Choose Product</h1>\n            </div>\n          </div>\n        </div>\n        <div className=\"card-body contacts_body\">\n          <ui className=\"contacts\">\n            <li className=\"active\">\n              {products.map((item, index) => (\n                <>\n                  <div className=\"d-flex bd-highlight\">\n                    <div className=\"img_cont\">\n                      <Avatar\n                        style={{\n                          alignSelf:\n                            window.screen.width <= 800 ? \"right\" : \"center\",\n                          width: \"70px\",\n                          height: \"70px\",\n                          borderRadius: \"50%\",\n                        }}\n                        variant=\"rounded\"\n                        src={item[\"photo\"] ? item[\"photo\"] : \"\"}\n                      >\n                        {item ? item.name.toString()[0].toUpperCase() : null}\n                      </Avatar>\n\n                      {/* <img\n                          src={\n                            item[\"photo\"]\n                              ? item[\"photo\"]\n                              : \"../../../Assets/Images/ReBuy.png\"\n                          }\n                          alt=\"userPhoto\"\n                          className=\"rounded-circle user_img\"\n                        /> */}\n                    </div>\n                    <div className=\"user_info\">\n                      <span>\n                        <Link\n                          to={`/${item[\"ownerId\"]}/${item[\"description\"]} / ${item[\"seconderyId\"]}`}\n                          style={{ color: \"blue\" }}\n                        >\n                          {item.name}\n                        </Link>\n                        {/* <Button\n                            onClick={() => {\n                              console.log(item);\n                              setItemId(item[\"seconderyId\"]);\n                              setSelling(true);\n                            }}\n                            key={index}\n                          >\n                            {item.name}\n                          </Button> */}\n                      </span>\n                      <p></p>\n                    </div>\n                  </div>\n                  <hr />\n                </>\n              ))}\n            </li>\n          </ui>\n        </div>\n      </div>\n    </Page>\n  );\n}\n\n// function SellerArea({ sellerId, prodId }) {\n//   console.log(sellerId);\n//   console.log(prodId);\n//   let tmp = [{ name: \"loading\" }];\n//   const [recivers, setRecivers] = useState(tmp);\n\n//   useEffect(() => {\n//     //  function use() {\n//     firestore\n//       .collection(`users/${sellerId}/prod/${prodId}/recivers`)\n//       .get()\n//       .then((querySnapshot) => {\n//         console.log(querySnapshot.docs);\n//         let temp = [];\n//         querySnapshot.docs.map((doc) => temp.push(doc.data()));\n//         // console.log(temp);\n//         temp.length > 0 && setRecivers(temp);\n//       })\n//       .catch((error) => {\n//         console.log(\"Error getting documents: \", error);\n//       });\n//     // }\n//     // use();\n//   }, [sellerId, prodId]);\n\n//   return (\n//     <>\n//       <div className=\"card contacts_card\">\n//         <div className=\"card-header\">\n//           <div className=\"col-12\">\n//             <div className=\"header \">\n//               <h1>People who interested your product</h1>\n//             </div>\n//           </div>\n//         </div>\n//         <div className=\"card-body contacts_body\">\n//           <ui className=\"contacts\">\n//             <li className=\"active\">\n//               {recivers.map((item, index) => (\n//                 <>\n//                   <div className=\"d-flex bd-highlight\">\n//                     <div className=\"img_cont\">\n//                       <img\n//                         src={\n//                           item.photoURL\n//                             ? item.photoURL\n//                             : \"https://api.adorable.io/avatars/23/abott@adorable.png\"\n//                         }\n//                         alt=\"userPhoto\"\n//                         className=\"rounded-circle user_img\"\n//                       />\n//                     </div>\n//                     <div className=\"user_info\">\n//                       <span>\n//                         <Link\n//                           to={`/chat/${item.id}/${prodId}/${sellerId}`}\n//                           key={index}\n//                         >\n//                           {item.name}\n//                         </Link>\n//                       </span>\n//                       <p></p>\n//                     </div>\n//                   </div>\n//                   <hr />\n//                 </>\n//               ))}\n//             </li>\n//           </ui>\n//         </div>\n//       </div>\n//     </>\n//   );\n// }\n",{"ruleId":"329","severity":1,"message":"330","line":10,"column":7,"nodeType":"331","messageId":"332","endLine":10,"endColumn":13},{"ruleId":"333","replacedBy":"334"},{"ruleId":"335","replacedBy":"336"},{"ruleId":"329","severity":1,"message":"337","line":10,"column":12,"nodeType":"331","messageId":"332","endLine":10,"endColumn":30},{"ruleId":"329","severity":1,"message":"338","line":2,"column":8,"nodeType":"331","messageId":"332","endLine":2,"endColumn":12},{"ruleId":"329","severity":1,"message":"339","line":10,"column":10,"nodeType":"331","messageId":"332","endLine":10,"endColumn":17},{"ruleId":"329","severity":1,"message":"340","line":10,"column":19,"nodeType":"331","messageId":"332","endLine":10,"endColumn":29},{"ruleId":"341","severity":1,"message":"342","line":16,"column":13,"nodeType":"343","endLine":27,"endColumn":4},{"ruleId":"344","severity":1,"message":"345","line":20,"column":9,"nodeType":"331","messageId":"346","endLine":20,"endColumn":17},{"ruleId":"341","severity":1,"message":"347","line":27,"column":6,"nodeType":"348","endLine":27,"endColumn":22,"suggestions":"349"},{"ruleId":"329","severity":1,"message":"350","line":1,"column":50,"nodeType":"331","messageId":"332","endLine":1,"endColumn":59},{"ruleId":"329","severity":1,"message":"351","line":2,"column":23,"nodeType":"331","messageId":"332","endLine":2,"endColumn":29},{"ruleId":"329","severity":1,"message":"352","line":4,"column":8,"nodeType":"331","messageId":"332","endLine":4,"endColumn":18},{"ruleId":"329","severity":1,"message":"353","line":5,"column":10,"nodeType":"331","messageId":"332","endLine":5,"endColumn":14},{"ruleId":"329","severity":1,"message":"354","line":5,"column":22,"nodeType":"331","messageId":"332","endLine":5,"endColumn":30},{"ruleId":"329","severity":1,"message":"355","line":6,"column":10,"nodeType":"331","messageId":"332","endLine":6,"endColumn":21},{"ruleId":"329","severity":1,"message":"356","line":7,"column":8,"nodeType":"331","messageId":"332","endLine":7,"endColumn":14},{"ruleId":"329","severity":1,"message":"357","line":8,"column":18,"nodeType":"331","messageId":"332","endLine":8,"endColumn":24},{"ruleId":"329","severity":1,"message":"358","line":11,"column":8,"nodeType":"331","messageId":"332","endLine":11,"endColumn":12},{"ruleId":"329","severity":1,"message":"359","line":20,"column":7,"nodeType":"331","messageId":"332","endLine":20,"endColumn":16},{"ruleId":"360","severity":1,"message":"361","line":212,"column":43,"nodeType":"343","messageId":"362","endLine":212,"endColumn":45},{"ruleId":"360","severity":1,"message":"361","line":70,"column":43,"nodeType":"343","messageId":"362","endLine":70,"endColumn":45},{"ruleId":"329","severity":1,"message":"363","line":1,"column":28,"nodeType":"331","messageId":"332","endLine":1,"endColumn":36},{"ruleId":"329","severity":1,"message":"364","line":6,"column":10,"nodeType":"331","messageId":"332","endLine":6,"endColumn":20},{"ruleId":"329","severity":1,"message":"365","line":7,"column":8,"nodeType":"331","messageId":"332","endLine":7,"endColumn":18},{"ruleId":"329","severity":1,"message":"366","line":9,"column":8,"nodeType":"331","messageId":"332","endLine":9,"endColumn":15},{"ruleId":"329","severity":1,"message":"367","line":10,"column":8,"nodeType":"331","messageId":"332","endLine":10,"endColumn":12},{"ruleId":"329","severity":1,"message":"368","line":11,"column":10,"nodeType":"331","messageId":"332","endLine":11,"endColumn":14},{"ruleId":"329","severity":1,"message":"369","line":12,"column":8,"nodeType":"331","messageId":"332","endLine":12,"endColumn":22},{"ruleId":"329","severity":1,"message":"370","line":14,"column":3,"nodeType":"331","messageId":"332","endLine":14,"endColumn":7},{"ruleId":"329","severity":1,"message":"371","line":15,"column":3,"nodeType":"331","messageId":"332","endLine":15,"endColumn":14},{"ruleId":"329","severity":1,"message":"372","line":16,"column":3,"nodeType":"331","messageId":"332","endLine":16,"endColumn":17},{"ruleId":"329","severity":1,"message":"373","line":17,"column":3,"nodeType":"331","messageId":"332","endLine":17,"endColumn":14},{"ruleId":"329","severity":1,"message":"374","line":18,"column":3,"nodeType":"331","messageId":"332","endLine":18,"endColumn":12},{"ruleId":"329","severity":1,"message":"375","line":19,"column":3,"nodeType":"331","messageId":"332","endLine":19,"endColumn":13},{"ruleId":"329","severity":1,"message":"357","line":20,"column":3,"nodeType":"331","messageId":"332","endLine":20,"endColumn":9},{"ruleId":"329","severity":1,"message":"376","line":21,"column":3,"nodeType":"331","messageId":"332","endLine":21,"endColumn":11},{"ruleId":"329","severity":1,"message":"377","line":22,"column":3,"nodeType":"331","messageId":"332","endLine":22,"endColumn":15},{"ruleId":"329","severity":1,"message":"378","line":23,"column":3,"nodeType":"331","messageId":"332","endLine":23,"endColumn":18},{"ruleId":"329","severity":1,"message":"379","line":25,"column":8,"nodeType":"331","messageId":"332","endLine":25,"endColumn":16},{"ruleId":"329","severity":1,"message":"380","line":27,"column":8,"nodeType":"331","messageId":"332","endLine":27,"endColumn":13},{"ruleId":"329","severity":1,"message":"381","line":34,"column":7,"nodeType":"331","messageId":"332","endLine":34,"endColumn":11},{"ruleId":"329","severity":1,"message":"382","line":46,"column":10,"nodeType":"331","messageId":"332","endLine":46,"endColumn":23},{"ruleId":"329","severity":1,"message":"383","line":55,"column":7,"nodeType":"331","messageId":"332","endLine":55,"endColumn":20},{"ruleId":"384","severity":1,"message":"385","line":56,"column":3,"nodeType":"386","messageId":"387","endLine":58,"endColumn":4},{"ruleId":"329","severity":1,"message":"388","line":2,"column":10,"nodeType":"331","messageId":"332","endLine":2,"endColumn":17},{"ruleId":"329","severity":1,"message":"389","line":18,"column":8,"nodeType":"331","messageId":"332","endLine":18,"endColumn":12},{"ruleId":"329","severity":1,"message":"390","line":20,"column":8,"nodeType":"331","messageId":"332","endLine":20,"endColumn":17},{"ruleId":"329","severity":1,"message":"391","line":36,"column":13,"nodeType":"331","messageId":"332","endLine":36,"endColumn":18},{"ruleId":"329","severity":1,"message":"391","line":58,"column":13,"nodeType":"331","messageId":"332","endLine":58,"endColumn":18},{"ruleId":"329","severity":1,"message":"374","line":14,"column":3,"nodeType":"331","messageId":"332","endLine":14,"endColumn":12},{"ruleId":"329","severity":1,"message":"381","line":37,"column":7,"nodeType":"331","messageId":"332","endLine":37,"endColumn":11},{"ruleId":"329","severity":1,"message":"392","line":40,"column":7,"nodeType":"331","messageId":"332","endLine":40,"endColumn":14},{"ruleId":"384","severity":1,"message":"385","line":65,"column":3,"nodeType":"386","messageId":"387","endLine":67,"endColumn":4},{"ruleId":"329","severity":1,"message":"367","line":4,"column":8,"nodeType":"331","messageId":"332","endLine":4,"endColumn":12},{"ruleId":"329","severity":1,"message":"366","line":5,"column":8,"nodeType":"331","messageId":"332","endLine":5,"endColumn":15},{"ruleId":"329","severity":1,"message":"393","line":15,"column":9,"nodeType":"331","messageId":"332","endLine":15,"endColumn":22},{"ruleId":"329","severity":1,"message":"363","line":1,"column":17,"nodeType":"331","messageId":"332","endLine":1,"endColumn":25},{"ruleId":"329","severity":1,"message":"353","line":2,"column":10,"nodeType":"331","messageId":"332","endLine":2,"endColumn":14},{"ruleId":"329","severity":1,"message":"368","line":2,"column":40,"nodeType":"331","messageId":"332","endLine":2,"endColumn":44},{"ruleId":"329","severity":1,"message":"394","line":29,"column":10,"nodeType":"331","messageId":"332","endLine":29,"endColumn":15},{"ruleId":"329","severity":1,"message":"395","line":30,"column":28,"nodeType":"331","messageId":"332","endLine":30,"endColumn":47},{"ruleId":"329","severity":1,"message":"396","line":34,"column":9,"nodeType":"331","messageId":"332","endLine":34,"endColumn":14},{"ruleId":"329","severity":1,"message":"363","line":1,"column":17,"nodeType":"331","messageId":"332","endLine":1,"endColumn":25},{"ruleId":"329","severity":1,"message":"372","line":5,"column":3,"nodeType":"331","messageId":"332","endLine":5,"endColumn":17},{"ruleId":"329","severity":1,"message":"374","line":6,"column":3,"nodeType":"331","messageId":"332","endLine":6,"endColumn":12},{"ruleId":"329","severity":1,"message":"397","line":15,"column":8,"nodeType":"331","messageId":"332","endLine":15,"endColumn":11},{"ruleId":"329","severity":1,"message":"398","line":24,"column":10,"nodeType":"331","messageId":"332","endLine":24,"endColumn":28},{"ruleId":"329","severity":1,"message":"399","line":24,"column":30,"nodeType":"331","messageId":"332","endLine":24,"endColumn":36},{"ruleId":"329","severity":1,"message":"363","line":1,"column":17,"nodeType":"331","messageId":"332","endLine":1,"endColumn":25},{"ruleId":"329","severity":1,"message":"370","line":3,"column":3,"nodeType":"331","messageId":"332","endLine":3,"endColumn":7},{"ruleId":"329","severity":1,"message":"371","line":4,"column":3,"nodeType":"331","messageId":"332","endLine":4,"endColumn":14},{"ruleId":"329","severity":1,"message":"372","line":5,"column":3,"nodeType":"331","messageId":"332","endLine":5,"endColumn":17},{"ruleId":"329","severity":1,"message":"374","line":6,"column":3,"nodeType":"331","messageId":"332","endLine":6,"endColumn":12},{"ruleId":"329","severity":1,"message":"375","line":7,"column":3,"nodeType":"331","messageId":"332","endLine":7,"endColumn":13},{"ruleId":"329","severity":1,"message":"400","line":11,"column":8,"nodeType":"331","messageId":"332","endLine":11,"endColumn":13},{"ruleId":"329","severity":1,"message":"401","line":12,"column":10,"nodeType":"331","messageId":"332","endLine":12,"endColumn":22},{"ruleId":"329","severity":1,"message":"380","line":14,"column":8,"nodeType":"331","messageId":"332","endLine":14,"endColumn":13},{"ruleId":"329","severity":1,"message":"388","line":7,"column":10,"nodeType":"331","messageId":"332","endLine":7,"endColumn":17},{"ruleId":"360","severity":1,"message":"361","line":91,"column":43,"nodeType":"343","messageId":"362","endLine":91,"endColumn":45},{"ruleId":"329","severity":1,"message":"402","line":197,"column":7,"nodeType":"331","messageId":"332","endLine":197,"endColumn":13},{"ruleId":"329","severity":1,"message":"403","line":8,"column":8,"nodeType":"331","messageId":"332","endLine":8,"endColumn":15},{"ruleId":"329","severity":1,"message":"381","line":14,"column":7,"nodeType":"331","messageId":"332","endLine":14,"endColumn":11},{"ruleId":"360","severity":1,"message":"361","line":58,"column":38,"nodeType":"343","messageId":"362","endLine":58,"endColumn":40},{"ruleId":"404","severity":1,"message":"405","line":66,"column":23,"nodeType":"331","messageId":"406","endLine":66,"endColumn":26},{"ruleId":"404","severity":1,"message":"407","line":67,"column":23,"nodeType":"331","messageId":"406","endLine":67,"endColumn":26},{"ruleId":"329","severity":1,"message":"408","line":83,"column":18,"nodeType":"331","messageId":"332","endLine":83,"endColumn":23},{"ruleId":"329","severity":1,"message":"409","line":167,"column":7,"nodeType":"331","messageId":"332","endLine":167,"endColumn":15},{"ruleId":"329","severity":1,"message":"357","line":2,"column":16,"nodeType":"331","messageId":"332","endLine":2,"endColumn":22},{"ruleId":"329","severity":1,"message":"410","line":2,"column":24,"nodeType":"331","messageId":"332","endLine":2,"endColumn":27},{"ruleId":"329","severity":1,"message":"411","line":6,"column":10,"nodeType":"331","messageId":"332","endLine":6,"endColumn":18},{"ruleId":"329","severity":1,"message":"412","line":8,"column":10,"nodeType":"331","messageId":"332","endLine":8,"endColumn":15},{"ruleId":"341","severity":1,"message":"342","line":10,"column":13,"nodeType":"343","endLine":20,"endColumn":4},{"ruleId":"329","severity":1,"message":"413","line":34,"column":9,"nodeType":"331","messageId":"332","endLine":34,"endColumn":25},{"ruleId":"414","severity":1,"message":"415","line":84,"column":1,"nodeType":"416","messageId":"417","endLine":86,"endColumn":2},{"ruleId":"414","severity":1,"message":"415","line":87,"column":1,"nodeType":"416","messageId":"417","endLine":89,"endColumn":2},{"ruleId":"414","severity":1,"message":"415","line":90,"column":1,"nodeType":"416","messageId":"417","endLine":97,"endColumn":2},{"ruleId":"414","severity":1,"message":"415","line":98,"column":1,"nodeType":"416","messageId":"417","endLine":100,"endColumn":2},{"ruleId":"414","severity":1,"message":"415","line":101,"column":1,"nodeType":"416","messageId":"417","endLine":103,"endColumn":2},{"ruleId":"329","severity":1,"message":"418","line":2,"column":10,"nodeType":"331","messageId":"332","endLine":2,"endColumn":22},{"ruleId":"329","severity":1,"message":"419","line":2,"column":24,"nodeType":"331","messageId":"332","endLine":2,"endColumn":29},{"ruleId":"420","severity":1,"message":"421","line":18,"column":7,"nodeType":"422","endLine":18,"endColumn":70},{"ruleId":"329","severity":1,"message":"423","line":2,"column":17,"nodeType":"331","messageId":"332","endLine":2,"endColumn":23},{"ruleId":"329","severity":1,"message":"424","line":9,"column":10,"nodeType":"331","messageId":"332","endLine":9,"endColumn":27},{"ruleId":"329","severity":1,"message":"425","line":12,"column":10,"nodeType":"331","messageId":"332","endLine":12,"endColumn":17},{"ruleId":"329","severity":1,"message":"426","line":13,"column":10,"nodeType":"331","messageId":"332","endLine":13,"endColumn":14},{"ruleId":"329","severity":1,"message":"427","line":18,"column":7,"nodeType":"331","messageId":"332","endLine":18,"endColumn":16},{"ruleId":"428","severity":1,"message":"429","line":26,"column":24,"nodeType":"430","messageId":"431","endLine":26,"endColumn":26},{"ruleId":"341","severity":1,"message":"432","line":69,"column":6,"nodeType":"348","endLine":69,"endColumn":8,"suggestions":"433"},{"ruleId":"329","severity":1,"message":"402","line":172,"column":7,"nodeType":"331","messageId":"332","endLine":172,"endColumn":13},{"ruleId":"329","severity":1,"message":"434","line":176,"column":7,"nodeType":"331","messageId":"332","endLine":176,"endColumn":14},{"ruleId":"329","severity":1,"message":"350","line":1,"column":29,"nodeType":"331","messageId":"332","endLine":1,"endColumn":38},{"ruleId":"329","severity":1,"message":"363","line":1,"column":40,"nodeType":"331","messageId":"332","endLine":1,"endColumn":48},{"ruleId":"329","severity":1,"message":"435","line":5,"column":19,"nodeType":"331","messageId":"332","endLine":5,"endColumn":27},{"ruleId":"329","severity":1,"message":"354","line":6,"column":10,"nodeType":"331","messageId":"332","endLine":6,"endColumn":18},{"ruleId":"329","severity":1,"message":"436","line":11,"column":8,"nodeType":"331","messageId":"332","endLine":11,"endColumn":11},{"ruleId":"329","severity":1,"message":"368","line":1,"column":10,"nodeType":"331","messageId":"332","endLine":1,"endColumn":14},{"ruleId":"329","severity":1,"message":"437","line":12,"column":10,"nodeType":"331","messageId":"332","endLine":12,"endColumn":22},{"ruleId":"428","severity":1,"message":"438","line":122,"column":21,"nodeType":"430","messageId":"431","endLine":122,"endColumn":23},{"ruleId":"420","severity":1,"message":"421","line":234,"column":9,"nodeType":"422","endLine":239,"endColumn":11},{"ruleId":"341","severity":1,"message":"439","line":28,"column":6,"nodeType":"348","endLine":28,"endColumn":30,"suggestions":"440"},{"ruleId":"414","severity":1,"message":"441","line":29,"column":3,"nodeType":"416","messageId":"442","endLine":30,"endColumn":4},{"ruleId":"329","severity":1,"message":"443","line":94,"column":10,"nodeType":"331","messageId":"332","endLine":94,"endColumn":24},{"ruleId":"329","severity":1,"message":"410","line":2,"column":16,"nodeType":"331","messageId":"332","endLine":2,"endColumn":19},{"ruleId":"329","severity":1,"message":"444","line":2,"column":21,"nodeType":"331","messageId":"332","endLine":2,"endColumn":24},{"ruleId":"445","severity":1,"message":"446","line":20,"column":11,"nodeType":"447","messageId":"431","endLine":20,"endColumn":21},{"ruleId":"445","severity":1,"message":"448","line":23,"column":11,"nodeType":"447","messageId":"431","endLine":23,"endColumn":20},{"ruleId":"329","severity":1,"message":"423","line":1,"column":17,"nodeType":"331","messageId":"332","endLine":1,"endColumn":23},{"ruleId":"329","severity":1,"message":"449","line":1,"column":35,"nodeType":"331","messageId":"332","endLine":1,"endColumn":45},{"ruleId":"329","severity":1,"message":"450","line":9,"column":10,"nodeType":"331","messageId":"332","endLine":9,"endColumn":22},{"ruleId":"329","severity":1,"message":"451","line":10,"column":10,"nodeType":"331","messageId":"332","endLine":10,"endColumn":21},{"ruleId":"329","severity":1,"message":"452","line":11,"column":16,"nodeType":"331","messageId":"332","endLine":11,"endColumn":25},{"ruleId":"329","severity":1,"message":"357","line":12,"column":18,"nodeType":"331","messageId":"332","endLine":12,"endColumn":24},{"ruleId":"329","severity":1,"message":"453","line":13,"column":10,"nodeType":"331","messageId":"332","endLine":13,"endColumn":20},{"ruleId":"329","severity":1,"message":"340","line":24,"column":19,"nodeType":"331","messageId":"332","endLine":24,"endColumn":29},{"ruleId":"329","severity":1,"message":"454","line":27,"column":10,"nodeType":"331","messageId":"332","endLine":27,"endColumn":18},{"ruleId":"329","severity":1,"message":"455","line":27,"column":20,"nodeType":"331","messageId":"332","endLine":27,"endColumn":31},{"ruleId":"329","severity":1,"message":"456","line":28,"column":10,"nodeType":"331","messageId":"332","endLine":28,"endColumn":21},{"ruleId":"329","severity":1,"message":"457","line":28,"column":23,"nodeType":"331","messageId":"332","endLine":28,"endColumn":36},{"ruleId":"329","severity":1,"message":"458","line":29,"column":10,"nodeType":"331","messageId":"332","endLine":29,"endColumn":17},{"ruleId":"329","severity":1,"message":"459","line":29,"column":19,"nodeType":"331","messageId":"332","endLine":29,"endColumn":29},{"ruleId":"329","severity":1,"message":"460","line":30,"column":10,"nodeType":"331","messageId":"332","endLine":30,"endColumn":16},{"ruleId":"329","severity":1,"message":"461","line":30,"column":18,"nodeType":"331","messageId":"332","endLine":30,"endColumn":27},{"ruleId":"341","severity":1,"message":"462","line":49,"column":6,"nodeType":"348","endLine":49,"endColumn":12,"suggestions":"463"},"no-unused-vars","'socket' is assigned a value but never used.","Identifier","unusedVar","no-native-reassign",["464"],"no-negated-in-lhs",["465"],"'notificationHandle' is defined but never used.","'Page' is defined but never used.","'loading' is assigned a value but never used.","'setLoading' is assigned a value but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","no-const-assign","'response' is constant.","const","React Hook useEffect has a missing dependency: 'currentUser?.email'. Either include it or remove the dependency array.","ArrayExpression",["466"],"'useEffect' is defined but never used.","'Admins' is defined but never used.","'MediaQuery' is defined but never used.","'Form' is defined but never used.","'Dropdown' is defined but never used.","'FaPencilAlt' is defined but never used.","'Person' is defined but never used.","'Button' is defined but never used.","'apis' is defined but never used.","'InputText' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","expectedInside","'useState' is defined but never used.","'makeStyles' is defined but never used.","'IconButton' is defined but never used.","'Groupby' is defined but never used.","'Sort' is defined but never used.","'Link' is defined but never used.","'StarBorderIcon' is defined but never used.","'Card' is defined but never used.","'CardContent' is defined but never used.","'CardActionArea' is defined but never used.","'CardActions' is defined but never used.","'CardMedia' is defined but never used.","'Typography' is defined but never used.","'GridList' is defined but never used.","'GridListTile' is defined but never used.","'GridListTileBar' is defined but never used.","'Carousel' is defined but never used.","'PopUp' is defined but never used.","'auth' is assigned a value but never used.","'UpdateProduct' is defined but never used.","'DeleteProduct' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'useIntl' is defined but never used.","'Star' is defined but never used.","'Instagram' is defined but never used.","'token' is assigned a value but never used.","'Wrapper' is assigned a value but never used.","'changeHandler' is assigned a value but never used.","'title' is assigned a value but never used.","'setnotificationData' is assigned a value but never used.","'email' is assigned a value but never used.","'Pin' is defined but never used.","'SiGooglestreetview' is defined but never used.","'SiWaze' is defined but never used.","'Modal' is defined but never used.","'IoPinOutline' is defined but never used.","'images' is assigned a value but never used.","'OpenApp' is defined but never used.","no-self-assign","'lat' is assigned to itself.","selfAssignment","'lng' is assigned to itself.","'first' is assigned a value but never used.","'selected' is assigned a value but never used.","'Col' is defined but never used.","'products' is assigned a value but never used.","'total' is assigned a value but never used.","'mapReduceHandler' is assigned a value but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'IoLogoBuffer' is defined but never used.","'IoAdd' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useRef' is defined but never used.","'useCollectionData' is defined but never used.","'NavItem' is defined but never used.","'func' is defined but never used.","'analytics' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has missing dependencies: 'prodId' and 'sellerId'. Either include them or remove the dependency array.",["467"],"'ownerId' is assigned a value but never used.","'Redirect' is defined but never used.","'api' is defined but never used.","'BorderBottom' is defined but never used.","Expected '!==' and instead saw '!='.","React Hook useEffect has a missing dependency: 'users'. Either include it or remove the dependency array.",["468"],"Nested block is redundant.","redundantNestedBlock","'CategoriesPage' is defined but never used.","'Row' is defined but never used.","no-dupe-keys","Duplicate key 'fontFamily'.","ObjectExpression","Duplicate key 'textAlign'.","'useContext' is defined but never used.","'useAuthState' is defined but never used.","'AuthContext' is defined but never used.","'useParams' is defined but never used.","'SellerArea' is defined but never used.","'sellerId' is assigned a value but never used.","'setSellerId' is assigned a value but never used.","'secondaryId' is assigned a value but never used.","'setScondaryId' is assigned a value but never used.","'selling' is assigned a value but never used.","'setSelling' is assigned a value but never used.","'itemId' is assigned a value but never used.","'setItemId' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'userId'. Either include it or remove the dependency array.",["469"],"no-global-assign","no-unsafe-negation",{"desc":"470","fix":"471"},{"desc":"472","fix":"473"},{"desc":"474","fix":"475"},{"desc":"476","fix":"477"},"Update the dependencies array to be: [user, products, currentUser?.email]",{"range":"478","text":"479"},"Update the dependencies array to be: [prodId, sellerId]",{"range":"480","text":"481"},"Update the dependencies array to be: [category, products, id, users]",{"range":"482","text":"483"},"Update the dependencies array to be: [user, userId]",{"range":"484","text":"485"},[969,985],"[user, products, currentUser?.email]",[1949,1951],"[prodId, sellerId]",[866,890],"[category, products, id, users]",[1683,1689],"[user, userId]"]