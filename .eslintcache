[{"/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/src/App.js":"1","/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/src/Components/SSO/Auth.js":"2","/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/src/Components/NavBar/MobileBar.js":"3","/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/src/Components/Pages/Home/Home.js":"4","/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/src/Components/Pages/Map/Map.js":"5","/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/src/Components/Pages/Admin/Admin.js":"6","/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/src/Components/Pages/Favorites/Favorites.js":"7","/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/src/Components/Pages/Settings/ProfileSettings.js":"8","/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/src/Components/SSO/SignUp.js":"9","/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/src/Components/Pages/Home/Products.js":"10","/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/src/Components/Utils/Page.js":"11","/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/src/Components/NavBar/SideBar.js":"12","/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/src/Components/NavBar/TopBar.js":"13","/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/src/Components/SSO/LogIn.js":"14","/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/src/Components/Pages/Home/CardList.js":"15","/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/src/Components/Pages/Home/Search.js":"16","/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/src/Components/Pages/Home/Sort.js":"17","/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/src/Layout.js":"18","/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/src/Components/Utils/PopUp.js":"19","/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/src/Components/Pages/Map/Marker.js":"20","/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/src/Components/Pages/Home/Create.js":"21","/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/src/Components/Pages/Map/GoogleMap.js":"22","/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/src/Components/Pages/Home/Groupby.js":"23","/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/src/Components/Utils/PageBody.js":"24","/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/src/Components/Utils/Alert.js":"25","/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/src/index.js":"26","/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/src/Styles/MessagesMain.js":"27","/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/src/Components/SSO/Config.js":"28","/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/src/Components/SSO/Registration.js":"29","/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/src/API/API.js":"30","/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/src/Components/Pages/Chat/chat.js":"31","/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/src/Components/Pages/Home/Update.js":"32","/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/src/Components/NavBar/User.js":"33","/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/src/Components/Utils/PayPal.js":"34","/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/src/Components/Pages/Chat/SellerRoom.js":"35","/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/src/Components/Pages/Chat/ChatRoom.js":"36","/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/src/Components/Pages/Categories/Categories.js":"37","/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/src/Components/SSO/Welcome.js":"38","/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/src/Components/Pages/Chat/Notifications.js":"39","/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/src/Components/Utils/Handlers.js":"40"},{"size":994,"mtime":1623180934804,"results":"41","hashOfConfig":"42"},{"size":1526,"mtime":1623083597798,"results":"43","hashOfConfig":"42"},{"size":2346,"mtime":1623180955443,"results":"44","hashOfConfig":"42"},{"size":704,"mtime":1623177844125,"results":"45","hashOfConfig":"42"},{"size":672,"mtime":1623179787941,"results":"46","hashOfConfig":"42"},{"size":4308,"mtime":1623179465206,"results":"47","hashOfConfig":"42"},{"size":2855,"mtime":1623181187629,"results":"48","hashOfConfig":"42"},{"size":7528,"mtime":1623181574141,"results":"49","hashOfConfig":"42"},{"size":4864,"mtime":1623179967804,"results":"50","hashOfConfig":"42"},{"size":4268,"mtime":1623181405901,"results":"51","hashOfConfig":"42"},{"size":1344,"mtime":1623181643652,"results":"52","hashOfConfig":"42"},{"size":4543,"mtime":1623180993456,"results":"53","hashOfConfig":"42"},{"size":2069,"mtime":1623179431853,"results":"54","hashOfConfig":"42"},{"size":3343,"mtime":1623181598274,"results":"55","hashOfConfig":"42"},{"size":15140,"mtime":1623241876577,"results":"56","hashOfConfig":"42"},{"size":3293,"mtime":1623181429564,"results":"57","hashOfConfig":"42"},{"size":461,"mtime":1623181444468,"results":"58","hashOfConfig":"42"},{"size":9072,"mtime":1623237370945,"results":"59","hashOfConfig":"42"},{"size":14331,"mtime":1623181665146,"results":"60","hashOfConfig":"42"},{"size":1497,"mtime":1623181538609,"results":"61","hashOfConfig":"42"},{"size":8032,"mtime":1623181252391,"results":"62","hashOfConfig":"42"},{"size":9868,"mtime":1623181524459,"results":"63","hashOfConfig":"42"},{"size":1901,"mtime":1623181319804,"results":"64","hashOfConfig":"42"},{"size":1162,"mtime":1622463841312,"results":"65","hashOfConfig":"42"},{"size":255,"mtime":1623179161165,"results":"66","hashOfConfig":"42"},{"size":240,"mtime":1622463841319,"results":"67","hashOfConfig":"42"},{"size":3489,"mtime":1623175559836,"results":"68","hashOfConfig":"42"},{"size":1128,"mtime":1622725996250,"results":"69","hashOfConfig":"42"},{"size":981,"mtime":1622725996266,"results":"70","hashOfConfig":"42"},{"size":1739,"mtime":1623075472812,"results":"71","hashOfConfig":"42"},{"size":4344,"mtime":1623238733215,"results":"72","hashOfConfig":"42"},{"size":7082,"mtime":1623181455475,"results":"73","hashOfConfig":"42"},{"size":2821,"mtime":1623181020402,"results":"74","hashOfConfig":"42"},{"size":552,"mtime":1623180005283,"results":"75","hashOfConfig":"42"},{"size":418,"mtime":1623181170291,"results":"76","hashOfConfig":"42"},{"size":7063,"mtime":1623238045440,"results":"77","hashOfConfig":"42"},{"size":2791,"mtime":1623181041702,"results":"78","hashOfConfig":"42"},{"size":1391,"mtime":1623181628024,"results":"79","hashOfConfig":"42"},{"size":3011,"mtime":1623238717317,"results":"80","hashOfConfig":"42"},{"size":1853,"mtime":1623181636398,"results":"81","hashOfConfig":"42"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},"q70wwr",{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"84"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"84"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"84"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"84"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"84"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"134","messages":"135","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"84"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},"/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/src/App.js",[],["169","170"],"/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/src/Components/SSO/Auth.js",[],"/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/src/Components/NavBar/MobileBar.js",[],"/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/src/Components/Pages/Home/Home.js",[],"/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/src/Components/Pages/Map/Map.js",[],"/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/src/Components/Pages/Admin/Admin.js",[],"/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/src/Components/Pages/Favorites/Favorites.js",[],"/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/src/Components/Pages/Settings/ProfileSettings.js",["171"],"import React, { Component, useState, useContext } from \"react\";\nimport { AuthContext } from \"../../SSO/Auth\";\nimport { useIntl } from \"react-intl\";\nimport { Card } from \"react-bootstrap\";\nimport { Avatar } from \"@material-ui/core\";\nimport api from \"../../../API/API\";\nimport CardList from \"../Home/CardList\";\nimport Page from \"../../Utils/Page\";\nimport Alert from \"../../Utils/Alert\";\nimport { DeleteProduct } from \"../../Utils/Handlers\";\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/storage\";\nconst storage = firebase.storage();\n\nexport default function ProfileSetting({\n  title,\n  setTitle,\n  intl,\n  user,\n  setUser,\n  name,\n  setName,\n  image,\n  setImage,\n}) {\n  const [loading, setLoading] = useState(true);\n  return (\n    <Page\n      loading={loading}\n      title={title}\n      color={\"#fdeded\"}\n      setTitle={setTitle}\n      add={false}\n      FAB=\"none\"\n      dots={false}\n    >\n      <ProfileSettings\n        loading={loading}\n        setLoading={setLoading}\n        intl={intl}\n        user={user}\n        setUser={setUser}\n        name={name}\n        setName={setName}\n        image={image}\n        setImage={setImage}\n      />\n    </Page>\n  );\n}\nexport class ProfileSettings extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      products: [],\n      images: [],\n      users: [],\n      columns: [],\n      isLoading: this.props.loading,\n      imagePath: \"\",\n      setLoading: this.props.setLoading,\n      user: props.user,\n      setUser: props.setUser,\n      name: props.name,\n      setName: props.setName,\n      image: props.image,\n      setImage: props.setImage,\n    };\n  }\n\n  componentDidMount = async () => {\n    try {\n      await api.getAllProducts().then((product) => {\n        this.setState({\n          products: product.data.data,\n        });\n      });\n      await api.getAllUsers().then((user) => {\n        this.setState({\n          users: user.data.data,\n        });\n      });\n      this.state.setLoading(false);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  searchHandler = (products) => {\n    this.setState({\n      products,\n    });\n  };\n  deleteHandler = (productId) => {\n    this.setState({\n      products: this.state.products.filter((product) => {\n        return product._id !== productId.data._id;\n      }),\n    });\n  };\n  render() {\n    const {\n      products,\n      images,\n      users,\n      setLoading,\n      user,\n      setUser,\n      name,\n      setName,\n      image,\n      setImage,\n    } = this.state;\n\n    return (\n      <Profile\n        products={products}\n        images={images}\n        users={users}\n        setLoading={setLoading}\n        user={user}\n        setUser={setUser}\n        name={name}\n        setName={setName}\n        image={image}\n        setImage={setImage}\n      />\n    );\n  }\n}\nexport function Profile({\n  users,\n  images,\n  products,\n  title,\n  setTitle,\n  setLoading,\n  user,\n  setUser,\n  name,\n  setName,\n  image,\n  setImage,\n}) {\n  const intl = useIntl();\n  const { currentUser } = useContext(AuthContext);\n  const email = useState(currentUser ? currentUser.email : \"Email\");\n  const [nameChange, setNameChange] = useState(false);\n\n  async function handleChangeInputImages(event) {\n    return Promise.all(\n      [...event.target.files].map((image) => {\n        storage\n          .ref(`users/${image.name}`)\n          .put(image)\n          .on(\n            \"state_changed\",\n            () => {},\n            (error) => {\n              console.log(error);\n            },\n            () =>\n              storage\n                .ref(\"users\")\n                .child(image.name)\n                .getDownloadURL()\n                .then(async (url) => {\n                  let data = new FormData();\n                  data.append(\"image\", url);\n                  await api\n                    .updateUserById(currentUser?.email, data)\n                    .then((res) => {\n                      Alert(\"Image changed!\", true);\n                    })\n                    .catch((error) => {\n                      Alert(error.message);\n                    });\n                  setImage(url);\n                })\n          );\n      })\n    );\n  }\n  async function handleChangeInputName(event) {\n    const newName = event.target.value;\n    let data = new FormData();\n    data.append(\"name\", newName);\n    await api\n      .updateUserById(currentUser?.email, data)\n      .then((res) => {\n        Alert(\"Name changed!\", true);\n      })\n      .catch((error) => {\n        Alert(error.message);\n      });\n    setName(newName);\n    setNameChange(false);\n  }\n  return (\n    <Card className=\"userSettings\" style={{ border: \"0px\" }}>\n      <Card.Header className=\"userHeader\">\n        <label\n          style={{\n            border: \"1pxsolid#ccc\",\n            display: \"inline-block\",\n            padding: \"6px12px\",\n            cursor: \"pointer\",\n          }}\n        >\n          <input\n            type=\"file\"\n            onChange={handleChangeInputImages}\n            style={{ display: \"none\" }}\n          />\n          <Avatar\n            style={{\n              alignSelf: window.screen.width <= 800 ? \"right\" : \"center\",\n              width: \"100px\",\n              height: \"100px\",\n              borderRadius: \"50%\",\n            }}\n            variant=\"rounded\"\n            src={image ? image : \"\"}\n          >\n            {/* {user\n              ? user.name.toString().split(\" \")[0][0].toUpperCase() +\n                user.name.toString().split(\" \")[1][0].toUpperCase()\n              : null} */}\n          </Avatar>\n        </label>\n        {/* </Button> */}\n\n        <Card.Title\n          style={{\n            margin: \"1rem\",\n            width: \"80%\",\n            color: \"#147764\",\n            alignSelf: \"center\",\n          }}\n        >\n          <label\n            style={{\n              border: \"1pxsolid#ccc\",\n              display: \"inline-block\",\n              padding: \"6px12px\",\n              cursor: \"pointer\",\n            }}\n          >\n            <input\n              type=\"text\"\n              onClick={() => setNameChange(true)}\n              // onChange={handleChangeInputName}\n              onKeyDown={(e) => e.keyCode === 13 && handleChangeInputName(e)}\n              style={{ display: !nameChange ? \"none\" : \"flex\" }}\n            />\n            {!nameChange && name}\n          </label>\n        </Card.Title>\n        <Card.Subtitle>{email}</Card.Subtitle>\n      </Card.Header>\n      <Card.Body\n        style={{ alignItems: \"center\", width: \"100%\", height: \"100%\" }}\n      >\n        <h1>{intl.formatMessage({ id: \"MyProducts\" })}</h1>\n        {products &&\n        user &&\n        products.filter((prod) => prod.ownerId === user.uid).length > 0 ? (\n          <CardList\n            products={\n              user ? products.filter((prod) => prod.ownerId === user.uid) : null\n            }\n            users={users}\n            deleteHandler={DeleteProduct}\n          />\n        ) : (\n          <Card\n            style={{\n              width: \"100%\",\n              height: \"50%\",\n              borderRadius: \"35px\",\n              alignItems: \"center\",\n              textAlign: \"center\",\n              display: \"flex\",\n              justifyContent: \"center\",\n              padding: \"10px\",\n              backgroundColor: \"rgba(0,0,50,0.1)\",\n            }}\n          >\n            <p> אין לך מוצרים עדיין ! </p>\n            <p>אפשר להוסיף אותם בלחיצה על \"העלה\" באזור הניווט</p>\n          </Card>\n        )}\n      </Card.Body>\n    </Card>\n  );\n}\n","/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/src/Components/SSO/SignUp.js",["172"],"import React, { useContext, useState } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport firebaseConfig from \"./Config\";\nimport { AuthContext } from \"./Auth\";\nimport api from \"../../API/API\";\nimport { Form, Col, Row, Button } from \"react-bootstrap\";\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/storage\";\nimport Alert from \"../Utils/Alert\";\n\nconst storage = firebase.storage();\n\nexport default function SignUp({ setRegistered }) {\n  const [image, setImage] = useState(null);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const { name, phone, email, password } = e.target.elements;\n    if (\n      name.value === \"\" ||\n      name.value === null ||\n      phone.value === \"\" ||\n      phone.value === null ||\n      email.value === null ||\n      email.value === \"\" ||\n      password.value === \"\" ||\n      password.value === null\n    ) {\n      Alert(\"Please fill all the require data!\");\n    } else {\n      try {\n        await firebaseConfig\n          .auth()\n          .createUserWithEmailAndPassword(email.value, password.value)\n          .then(function (result) {\n            Alert(`Welcome to ReBuy`, true);\n            return result.user.updateProfile({\n              displayName: name.value,\n              photoURL: image ? image : \"\",\n            });\n          })\n          .catch((error) => {\n            console.log(error);\n            Alert(error.message);\n          });\n\n        let data = new FormData();\n        data.append(\"name\", name.value);\n        data.append(\"phone\", phone.value);\n        data.append(\"email\", email.value);\n        data.append(\"image\", image);\n        data.append(\"uid\", firebase.auth().currentUser.uid);\n        data.append(\"favorites\", []);\n\n        await api\n          .insertUser(data)\n          .then((res) => {})\n          .catch((error) => {\n            Alert(error.message);\n          });\n      } catch (error) {\n        Alert(error.message);\n      }\n    }\n  };\n\n  async function handleChangeInputImages(event) {\n    return Promise.all(\n      [...event.target.files].map((image) => {\n        storage\n          .ref(`users/${image.name}`)\n          .put(image)\n          .on(\n            \"state_changed\",\n            () => {},\n            (error) => {\n              console.log(error);\n            },\n            () =>\n              storage\n                .ref(\"users\")\n                .child(image.name)\n                .getDownloadURL()\n                .then((url) => {\n                  setImage(url);\n                })\n          );\n      })\n    );\n  }\n\n  const { currentUser } = useContext(AuthContext);\n  if (currentUser) {\n    return <Redirect to=\"/\" />;\n  }\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Form.Label as=\"h1\">Sign Up</Form.Label>\n      <Form.Group as={Row} controlId=\"formPlaintextEmail\">\n        <Form.Label column sm=\"4\">\n          Full Name\n        </Form.Label>\n        <Col sm=\"8\">\n          <Form.Control type=\"text\" name=\"name\" placeholder=\"Name\" />\n        </Col>\n      </Form.Group>\n      <Form.Group as={Row} controlId=\"formPlaintextEmail\">\n        <Form.Label column sm=\"4\">\n          Phone\n        </Form.Label>\n        <Col sm=\"8\">\n          <Form.Control type=\"number\" name=\"phone\" placeholder=\"Phone Number\" />\n        </Col>\n      </Form.Group>\n      <Form.Group as={Row} controlId=\"formPlaintextEmail\">\n        <Form.Label column sm=\"4\">\n          Email\n        </Form.Label>\n        <Col sm=\"8\">\n          <Form.Control type=\"email\" name=\"email\" placeholder=\"Email\" />\n        </Col>\n      </Form.Group>\n      <Form.Group as={Row} controlId=\"formPlaintextPassword\">\n        <Form.Label column sm=\"4\">\n          Password\n        </Form.Label>\n        <Col sm=\"8\">\n          <Form.Control\n            type=\"password\"\n            name=\"password\"\n            placeholder=\"Password\"\n          />\n        </Col>\n      </Form.Group>\n      <Form.Group as={Row} controlId=\"formPlaintextPassword\">\n        <Form.Label column sm=\"4\">\n          Profile Photo\n        </Form.Label>\n        <Col sm=\"8\">\n          <Form.Control\n            type=\"file\"\n            name=\"image\"\n            id=\"image\"\n            onChange={handleChangeInputImages}\n          />\n        </Col>\n      </Form.Group>\n      {/* <Form.Group as={Row} controlId=\"formPlaintextPassword\">\n              <Form.Label column sm=\"4\">\n                Confirm Password\n              </Form.Label>\n              <Col sm=\"8\">\n                <Form.Control type=\"password\" placeholder=\"Confirm Password\" />\n              </Col>\n            </Form.Group> */}\n\n      <Button variant=\"primary\" type=\"submit\" size=\"lg\">\n        Sign Up\n      </Button>\n      <div style={{ margin: \"1rem\" }}>\n        Already Registered?{\" \"}\n        <Button variant=\"secondary\" onClick={() => setRegistered(true)}>\n          Login?\n        </Button>\n      </div>\n    </Form>\n  );\n}\n","/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/src/Components/Pages/Home/Products.js",["173"],"import React, { Component } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport api from \"../../../API/API\";\nimport styled from \"styled-components\";\nimport Search from \"./Search\";\nimport CardList from \"./CardList\";\nimport firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\nimport \"firebase/analytics\";\nimport \"react-table/index\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nconst firestore = firebase.firestore();\n\nconst Wrapper = styled.div``;\n\nexport default class ProductsList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      products: [],\n      users: [],\n      columns: [],\n      isLoading: this.props.loading,\n      imagePath: \"\",\n      setLoading: this.props.setLoading,\n      intl: props.intl,\n      currentUser: props.currentUser,\n      favCategories: [],\n      favProduct: [],\n    };\n  }\n\n  componentDidMount = async () => {\n    try {\n      await api.getAllProducts().then((product) => {\n        this.setState({\n          products: product.data.data,\n        });\n      });\n      await api.getAllUsers().then((user) => {\n        this.setState({\n          users: user.data.data,\n        });\n      });\n      firestore\n        .collection(\"users\")\n        .where(\"email\", \"in\", [\n          this.state.currentUser?.email.toUpperCase(),\n          this.state.currentUser?.email.toLowerCase(),\n        ])\n        .get()\n        .then((Snapshot) => {\n          Snapshot.docs.forEach((doc) => {\n            let favCategory = doc.data().favCategory;\n            let cat1 = null;\n            let max1 = 0;\n            favCategory.forEach((cat) => {\n              if (cat.val > max1) {\n                cat1 = cat.key;\n                max1 = cat.val;\n              }\n            });\n            let cat2 = null;\n            let max2 = 0;\n            favCategory.forEach((cat) => {\n              if (cat.val > max2 && cat.val < max1) {\n                cat2 = cat.key;\n                max2 = cat.val;\n              }\n            });\n            cat2\n              ? this.setState({\n                  favCategories: [cat1, cat2],\n                })\n              : this.setState({\n                  favCategories: [cat1],\n                });\n          });\n          let prods = [];\n          this.state.products.forEach((product) => {\n            this.state.favCategories.some((f) => f === product.category) &&\n              prods.push(product);\n          });\n          this.setState({\n            favProduct: prods,\n          });\n        })\n        .catch((error) => {});\n\n      this.state.setLoading(false);\n    } catch (error) {\n      this.state.setLoading(false);\n      console.log(error);\n    }\n  };\n  searchHandler = (products) => {\n    this.setState({\n      products: products.data,\n    });\n  };\n  deleteHandler = (productId) => {\n    this.setState({\n      products: this.state.products.filter((product) => {\n        return product.seconderyId !== productId;\n      }),\n    });\n  };\n  render() {\n    const { products, users, intl, favProduct } = this.state;\n\n    return (\n      <Wrapper\n        style={{\n          textAlign: \"center\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n          marginTop: \"30px\",\n        }}\n      >\n        <h1>{intl.formatMessage({ id: \"Market\" })}</h1>\n        <Search searchHandler={this.searchHandler} />\n        {/* <Sort searchHandler={this.searchHandler} /> */}\n\n        {favProduct.length > 0 && (\n          <>\n            <h1>{intl.formatMessage({ id: \"Recommendedforyou\" })}</h1>\n            {/* <h3>\n              {`We can see that you like ${favCategories[0]}  ${\n                favCategories[1] ? \"and \" + favCategories[1] : \"\"\n              }`}\n            </h3> */}\n            <CardList\n              products={favProduct}\n              users={users}\n              deleteHandler={this.deleteHandler}\n              from={0}\n              to={products.length}\n            />\n            <h1>{intl.formatMessage({ id: \"AllProducts\" })}</h1>\n          </>\n        )}\n\n        <CardList\n          products={products}\n          users={users}\n          deleteHandler={this.deleteHandler}\n          from={0}\n          to={products.length}\n        />\n        {this.props.setLoading(false)}\n      </Wrapper>\n    );\n  }\n}\n","/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/src/Components/Utils/Page.js",[],"/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/src/Components/NavBar/SideBar.js",[],"/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/src/Components/NavBar/TopBar.js",[],"/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/src/Components/SSO/LogIn.js",[],"/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/src/Components/Pages/Home/CardList.js",[],"/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/src/Components/Pages/Home/Search.js",[],"/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/src/Components/Pages/Home/Sort.js",["174","175"],"/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/src/Layout.js",["176"],"/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/src/Components/Utils/PopUp.js",[],"/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/src/Components/Pages/Map/Marker.js",[],"/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/src/Components/Pages/Home/Create.js",["177"],"import React, { Component } from \"react\";\nimport api from \"../../../API/API\";\nimport styled from \"styled-components\";\nimport { Redirect } from \"react-router-dom\";\nimport Alert from \"../../Utils/Alert\";\nimport firebase from \"firebase/app\";\n\nimport \"firebase/auth\";\nimport \"firebase/storage\";\n\nconst storage = firebase.storage();\n\nconst Title = styled.h1.attrs({\n  className: \"h1\",\n})``;\n\nconst Wrapper = styled.div.attrs({\n  className: \"form-group\",\n})`\n  margin: 0 30px;\n`;\n\nconst Label = styled.label`\n  margin: 5px;\n  direction: ltr;\n`;\n\nconst InputText = styled.input.attrs({\n  className: \"form-control\",\n})`\n  margin: 0 auto;\n  width: 80%;\n  text-align: center;\n`;\n\nconst Button = styled.button.attrs({\n  className: `btn btn-primary`,\n})`\n  margin: 15px 15px 15px 5px;\n`;\n\nconst CancelButton = styled.a.attrs({\n  className: `btn btn-danger`,\n})`\n  margin: 15px 15px 15px 5px;\n`;\n\nexport default class ProductInsert extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      name: \"\",\n      condition: \"\",\n      description: \"\",\n      category: \"\",\n      address: \"\",\n      price: null,\n      images: [],\n      // ownerId: null,\n      redirect: false,\n      alert: false,\n      intl: props.intl,\n    };\n  }\n\n  handleChangeInputName = async (event) => {\n    const name = event.target.value;\n    this.setState({ name });\n  };\n  handleChangeInputCondition = async (event) => {\n    const condition = event.target.value;\n    this.setState({ condition });\n  };\n  handleChangeInputDescription = async (event) => {\n    const description = event.target.value;\n    this.setState({ description });\n  };\n  handleChangeInputCategory = async (event) => {\n    const category = event.target.value;\n    this.setState({ category });\n  };\n  handleChangeInputAdrress = async (event) => {\n    const address = event.target.value;\n    this.setState({ address });\n  };\n\n  handleChangeInputImages = async (event) => {\n    return Promise.all(\n      [...event.target.files].map((image) => {\n        storage\n          .ref(`products/${image.name}`)\n          .put(image)\n          .on(\n            \"state_changed\",\n            () => {},\n            (error) => {\n              console.log(error);\n            },\n            () =>\n              storage\n                .ref(\"products\")\n                .child(image.name)\n                .getDownloadURL()\n                .then((url) =>\n                  this.setState({\n                    images: [...this.state.images, url],\n                  })\n                )\n                .catch((error) => {\n                  Alert(error);\n                })\n          );\n      })\n    );\n  };\n\n  handleChangePrice = async (event) => {\n    const price = event.target.value;\n    this.setState({ price });\n  };\n\n  // handleChangeOwner = async (event) => {\n  //   // const ownerId = event.target.value;\n  //   const ownerId = firebase.auth().currentUser.email;\n  //   this.setState({ ownerId });\n  // };\n\n  categoryArray = [\n    \"Sport\",\n    \"Clothing\",\n    \"Electricity\",\n    \"Underwear\",\n    \"Swimwear\",\n    \"Homecare\",\n    \"Plants\",\n    \"Activewear\",\n    \"Jewlery\",\n    \"Other\",\n  ];\n  handleIncludeProduct = async () => {\n    let data = new FormData();\n    let ownerID = firebase.auth().currentUser\n      ? firebase.auth().currentUser.uid\n      : \"jacobsongal@gmail.com\";\n    data.append(\"name\", this.state.name);\n    data.append(\"condition\", this.state.condition);\n    data.append(\"description\", this.state.description);\n    data.append(\"address\", this.state.address);\n    data.append(\"price\", this.state.price);\n    data.append(\"category\", this.state.category);\n    data.append(\"ownerId\", ownerID);\n    data.append(\"seconderyId\", this.state.description + ownerID);\n    data.append(\"photo\", this.state.images);\n\n    if (\n      Object.values(this.state).some((element) => {\n        return element === \"\" || element === null;\n      })\n    ) {\n      this.setState({ alert: true });\n    } else {\n      // data && console.log(\"sending data\" + data.values());\n      await api\n        .insertProduct(data)\n        .then((res) => {\n          Alert(`Product inserted successfully`, true);\n          this.setState({\n            name: \"\",\n            condition: \"\",\n            description: \"\",\n            category: \"\",\n            address: \"\",\n            images: null,\n            price: null,\n\n            // ownerId: null,\n            redirect: true,\n          });\n        })\n        .catch((error) => {\n          console.log(error);\n          alert(error);\n        });\n    }\n  };\n\n  render() {\n    const {\n      name,\n      condition,\n      description,\n      address,\n      category,\n      price,\n      redirect,\n      alert,\n      intl,\n    } = this.state;\n    let alertMessage = \"\";\n    if (redirect) {\n      return <Redirect to=\"/\" />;\n    }\n    if (alert) {\n      alertMessage = (\n        <Alert variant=\"danger\">Please fill all the fields.</Alert>\n      );\n    }\n\n    return (\n      <Wrapper style={{ marginTop: \"50px\" }}>\n        <Title>{intl.formatMessage({ id: \"CreateProduct\" })}</Title>\n        <div style={{ textAlign: \"center\" }}>\n          <Label>Name: </Label>\n          <InputText\n            type=\"text\"\n            value={name}\n            onChange={this.handleChangeInputName}\n          />\n        </div>\n        <div style={{ textAlign: \"center\" }}>\n          {\" \"}\n          <Label>Condition: </Label>\n          <select\n            class=\"form-control\"\n            style={{\n              margin: \"0 auto\",\n              width: \"80%\",\n              textAlignLast: \"center\",\n              direction: \"ltr\",\n            }}\n            value={condition}\n            onChange={this.handleChangeInputCondition}\n          >\n            <option></option>\n            <option>USED</option>\n            <option>NEW</option>\n          </select>\n        </div>\n        <div style={{ textAlign: \"center\" }}>\n          <Label>Description: </Label>\n          <InputText\n            type=\"text\"\n            value={description}\n            onChange={this.handleChangeInputDescription}\n          />\n        </div>{\" \"}\n        <div style={{ textAlign: \"center\" }}>\n          {\" \"}\n          <Label>Category: </Label>\n          <select\n            class=\"form-control\"\n            style={{\n              margin: \"0 auto\",\n              width: \"80%\",\n              textAlignLast: \"center\",\n              direction: \"ltr\",\n            }}\n            value={category}\n            onChange={this.handleChangeInputCategory}\n          >\n            <option></option>\n            {this.categoryArray.map((category) => {\n              return (\n                <option style={{ textAlignLast: \"center\" }}>{category}</option>\n              );\n            })}\n          </select>\n        </div>\n        <div style={{ textAlign: \"center\" }}>\n          {\" \"}\n          <Label>Address: </Label>\n          <InputText\n            type=\"text\"\n            value={address}\n            onChange={this.handleChangeInputAdrress}\n          />\n        </div>\n        <div style={{ textAlign: \"center\" }}>\n          <Label>Image: </Label>\n          <InputText\n            type=\"file\"\n            multiple={true}\n            name=\"images\"\n            id=\"images\"\n            onChange={this.handleChangeInputImages}\n          />\n        </div>\n        <div style={{ textAlign: \"center\" }}>\n          {\" \"}\n          <Label>Price: </Label>\n          <InputText\n            type=\"number\"\n            value={price}\n            onChange={this.handleChangePrice}\n          />\n        </div>\n        {/* <div style={{ textAlign: \"center\" }}>\n          <Label>OwnerId: </Label>\n          <InputText\n            type=\"number\"\n            value={ownerId}\n            onChange={this.handleChangeOwner}\n          />\n        </div> */}\n        <div>\n          <div style={{ textAlign: \"center\" }}>\n            <Button onClick={this.handleIncludeProduct}>Add Product</Button>\n            <CancelButton href={\"/\"}>Cancel</CancelButton>\n            {alertMessage}\n          </div>{\" \"}\n        </div>\n      </Wrapper>\n    );\n  }\n}\n","/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/src/Components/Pages/Map/GoogleMap.js",["178","179","180","181"],"import React, { Component } from \"react\";\nimport api from \"../../../API/API\";\nimport GoogleMapReact from \"google-map-react\";\nimport Marker from \"./Marker\";\nimport Geocode from \"react-geocode\";\nimport Search from \"../Home/Search\";\nimport PopUp from \"../../Utils/PopUp\";\nimport firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\nimport \"firebase/analytics\";\nconst firestore = firebase.firestore();\n\nexport default class GoogleMap extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      products: [],\n      images: [],\n      users: [],\n      product: null,\n      locations: [{}],\n      selected: \"tel-aviv\",\n      center: {\n        lat: 31.96996095111596,\n        lng: 34.77278720495645,\n      },\n      lat: 31.96996095111596,\n      lng: 34.77278720495645,\n      zoom: 10,\n      isModelOpen: false,\n      setLoading: this.props.setLoading,\n      directionsService: null,\n      directionsDisplay: null,\n      map: null,\n      maps: null,\n      currentUser: props.currentUser,\n    };\n    // this.state.setLoading(true);\n  }\n  componentDidMount = async () => {\n    Geocode.setApiKey(\"AIzaSyDzTw-IhXNRYDH1QpvVVNp_ix9AzFC0McM\");\n    Geocode.setLanguage(\"He\");\n    Geocode.setRegion(\"Il\");\n    Geocode.setLocationType(\"ROOFTOP\");\n    // Geocode.enableDebug();\n\n    try {\n      await api.getAllProducts().then((product) => {\n        this.setState({\n          products: product.data.data,\n        });\n        product.data.data.map((p, i) => {\n          p[\"address\"] &&\n            Geocode.fromAddress(p[\"address\"]).then(\n              (response) => {\n                var { lat, lng } = response.results[0].geometry.location;\n                lat = lat;\n                lng = lng;\n\n                this.setState({\n                  locations: this.state.locations.concat([\n                    { id: p.name, lat: lat, lng: lng },\n                  ]),\n                });\n                // console.log(this.state.locations);\n              },\n              (error) => {\n                console.error(error);\n              }\n            );\n        });\n        this.setState((state) => {\n          const [first, ...rest] = state.locations;\n          return {\n            locations: rest,\n          };\n        });\n        this.state.setLoading(false);\n      });\n      await api.getAllUsers().then((user) => {\n        this.setState({\n          users: user.data.data,\n        });\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  searchHandler = (products) => {\n    this.setState({\n      products,\n    });\n  };\n  productHandler = (product) => {\n    let plat = this.state.locations.some((x) => x.id === product.name)\n      ? this.state.locations.find((x) => x.id === product.name).lat\n      : null;\n\n    let plng = this.state.locations.some((x) => x.id === product.name)\n      ? this.state.locations.find((x) => x.id === product.name).lng\n      : null;\n\n    this.setState({\n      product,\n      selected: product[\"address\"],\n      lat: plat,\n      lng: plng,\n    });\n    let category = product.category;\n    firestore\n      .collection(\"users\")\n      .where(\"email\", \"==\", this.state.currentUser?.email)\n      .get()\n      .then((Snapshot) => {\n        Snapshot.docs.forEach((doc) => {\n          let favCategory = doc.data().favCategory;\n          let newfavCategory = [{}];\n          let flag = false;\n          newfavCategory = favCategory;\n          newfavCategory.forEach((cat) => {\n            if (cat.key === category) {\n              cat.val++;\n              flag = true;\n            }\n          });\n          if (flag === false) {\n            newfavCategory.push({ key: category, val: 1 });\n          }\n          doc.ref.update({\n            favCategory: newfavCategory,\n          });\n        });\n      })\n      .catch((error) => {});\n  };\n  modalHandler = (isModelOpen) => {\n    this.setState({\n      isModelOpen,\n    });\n  };\n  render() {\n    const {\n      products,\n      images,\n      users,\n      center,\n      zoom,\n      isModelOpen,\n      product,\n      locations,\n      map,\n      maps,\n      lat,\n      lng,\n    } = this.state;\n\n    const apiIsLoaded = (map, maps) => {\n      map &&\n        this.setState({\n          map,\n        });\n      maps &&\n        this.setState({\n          maps,\n        });\n    };\n\n    function navigate(address, image) {\n      let Gaddress;\n      Geocode.fromAddress(address).then(\n        (response) => {\n          Gaddress = response.results[0].geometry.location;\n        },\n        (error) => {\n          console.error(error);\n        }\n      );\n      const directionsService = new maps.DirectionsService();\n      const directionsDisplay = new maps.DirectionsRenderer();\n      directionsDisplay.setMap(map);\n      let infoWindow = new maps.InfoWindow();\n      if (navigator.geolocation) {\n        navigator.geolocation.getCurrentPosition(\n          (position) => {\n            const pos = {\n              lat: position.coords.latitude,\n              lng: position.coords.longitude,\n            };\n            directionsService.route(\n              {\n                origin: pos,\n                destination: Gaddress ? Gaddress : address,\n                travelMode: maps.TravelMode.DRIVING,\n              },\n              (response, status) => {\n                if (status === \"OK\") {\n                  directionsDisplay.setDirections(response);\n                  // console.log(response.routes[0]);\n                  map.setCenter(pos);\n                } else {\n                  alert(\"Directions request failed due to \" + status);\n                }\n              }\n            );\n          },\n          () => {\n            handleLocationError(true, infoWindow, map.getCenter());\n          }\n        );\n      } else {\n        // Browser doesn't support Geolocation\n        handleLocationError(false, infoWindow, map.getCenter());\n      }\n\n      function handleLocationError(browserHasGeolocation, infoWindow, pos) {\n        infoWindow.setPosition(pos);\n        infoWindow.setContent(\n          browserHasGeolocation\n            ? \"Error: The Geolocation service failed.\"\n            : \"Error: Your browser doesn't support geolocation.\"\n        );\n        infoWindow.open(map);\n      }\n    }\n    function wazeNavigate(address, image) {\n      Geocode.fromAddress(address).then(\n        (response) => {\n          var { lat, lng } = response.results[0].geometry.location;\n          let url = `https://waze.com/ul?ll=${lat},${lng}&navigate=yes`;\n          window.open(url, \"_blank\").focus();\n        },\n        (error) => {\n          console.error(error);\n        }\n      );\n    }\n\n    function getMapOptions(maps) {\n      return {\n        streetViewControl: true,\n        scaleControl: true,\n        fullscreenControl: true,\n        styles: [\n          {\n            featureType: \"poi.business\",\n            elementType: \"labels\",\n            stylers: [\n              {\n                visibility: \"off\",\n              },\n            ],\n          },\n        ],\n        gestureHandling: \"greedy\",\n        disableDoubleClickZoom: true,\n        minZoom: 0,\n        maxZoom: 30,\n        layerTypes: [\"TrafficLayer\"],\n        mapTypeControl: true,\n        mapTypeId: maps.MapTypeId.ROADMAP,\n        mapTypeControlOptions: {\n          style: maps.MapTypeControlStyle.DROPDOWN_MENU,\n          position: maps.ControlPosition.RIGHT_CENTER,\n          mapTypeIds: [\n            maps.MapTypeId.ROADMAP,\n            maps.MapTypeId.SATELLITE,\n            maps.MapTypeId.HYBRID,\n          ],\n        },\n        zoomControl: true,\n        clickableIcons: false,\n        getCurrentPosition: true,\n      };\n    }\n\n    return (\n      <>\n        <div\n          style={{\n            position: \"absolute\",\n            // top: \"3rem\",\n            alignItems: \"center\",\n            width: \"min-content\",\n            padding: \"2rem\",\n            zIndex: \"99\",\n            // marginTop: \"30px\",\n          }}\n        >\n          <Search\n            searchHandler={this.searchHandler}\n            style={{ position: \"absolute\" }}\n          />\n        </div>\n        <div style={{ height: \"97.2vh\", width: \"100%\" }}>\n          <GoogleMapReact\n            bootstrapURLKeys={{\n              key: \"AIzaSyAiTqUoIPktHrM66nIC7fRevgXvj7BzN-A\",\n              language: \"he\",\n              region: \"il\",\n            }}\n            defaultCenter={center}\n            defaultZoom={zoom}\n            options={getMapOptions}\n            yesIWantToUseGoogleMapApiInternals\n            onGoogleApiLoaded={({ map, maps }) => apiIsLoaded(map, maps)}\n          >\n            <PopUp\n              product={product}\n              images={images}\n              users={users}\n              isModelOpen={isModelOpen}\n              setIsModelOpen={this.modalHandler}\n              navigate={navigate}\n              wazeNavigate={wazeNavigate}\n              lat={lat}\n              lng={lng}\n            />\n            {products &&\n              products.map((product, i) => {\n                // console.log(locations.find((x) => x.id === product._id));\n                return (\n                  <Marker\n                    lat={\n                      locations.some((x) => x.id === product.name)\n                        ? locations.find((x) => x.id === product.name).lat\n                        : null\n                    }\n                    lng={\n                      locations.some((x) => x.id === product.name)\n                        ? locations.find((x) => x.id === product.name).lng\n                        : null\n                    }\n                    product={product}\n                    images={images}\n                    users={users}\n                    key={i}\n                    setIsModelOpen={this.modalHandler}\n                    setData={this.productHandler}\n                  />\n                );\n              })}\n          </GoogleMapReact>\n        </div>\n      </>\n    );\n  }\n}\n","/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/src/Components/Pages/Home/Groupby.js",["182"],"/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/src/Components/Utils/PageBody.js",["183","184","185"],"import React from \"react\";\nimport { IoLogoBuffer, IoAdd } from \"react-icons/io5\";\nimport { Button } from \"@material-ui/core\";\nimport { Link } from \"react-router-dom\";\n\nexport default function PageBody({ color, boldPar, par, pic, to, button }) {\n  return (\n    <div\n      style={{\n        textAlign: \"center\",\n        margin: \"2rem\",\n        height: \"90%\",\n        borderRadius: \"50px\",\n        backgroundColor: color,\n        color: \"gray\",\n      }}\n    >\n      <img src={pic} style={{ marginTop: \"40px\", height: \"50px\" }} />\n      <p style={{ margin: \"2rem\" }}>\n        <b style={{ display: \"block\" }}>{boldPar}</b> {par}\n      </p>\n      <Link to={to}>\n        <Button\n          style={{\n            textAlign: \"center\",\n            margin: \"1rem\",\n            padding: \"1rem\",\n            height: \"90%\",\n            textOverflow: \"ellipsis\",\n            whiteSpace: \"nowrap\",\n            width: \"auto\",\n            background: \"#343798\",\n            color: \"white\",\n            borderRadius: \"66px 66px 66px 66px\",\n            boxShadow: \"0px 0px 10px 0px\",\n          }}\n        >\n          <h5>{button}</h5>\n        </Button>\n      </Link>\n    </div>\n  );\n}\n","/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/src/Components/Utils/Alert.js",[],"/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/src/index.js",[],"/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/src/Styles/MessagesMain.js",[],"/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/src/Components/SSO/Config.js",[],"/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/src/Components/SSO/Registration.js",[],"/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/src/API/API.js",[],"/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/src/Components/Pages/Chat/chat.js",["186"],"/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/src/Components/Pages/Home/Update.js",[],"/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/src/Components/NavBar/User.js",[],"/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/src/Components/Utils/PayPal.js",[],"/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/src/Components/Pages/Chat/SellerRoom.js",[],"/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/src/Components/Pages/Chat/ChatRoom.js",[],"/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/src/Components/Pages/Categories/Categories.js",[],"/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/src/Components/SSO/Welcome.js",[],"/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/src/Components/Pages/Chat/Notifications.js",[],"/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/src/Components/Utils/Handlers.js",[],{"ruleId":"187","replacedBy":"188"},{"ruleId":"189","replacedBy":"190"},{"ruleId":"191","severity":1,"message":"192","line":152,"column":43,"nodeType":"193","messageId":"194","endLine":152,"endColumn":45},{"ruleId":"191","severity":1,"message":"192","line":70,"column":43,"nodeType":"193","messageId":"194","endLine":70,"endColumn":45},{"ruleId":"195","severity":1,"message":"196","line":2,"column":10,"nodeType":"197","messageId":"198","endLine":2,"endColumn":20},{"ruleId":"195","severity":1,"message":"199","line":1,"column":17,"nodeType":"197","messageId":"198","endLine":1,"endColumn":25},{"ruleId":"195","severity":1,"message":"200","line":2,"column":10,"nodeType":"197","messageId":"198","endLine":2,"endColumn":14},{"ruleId":"195","severity":1,"message":"201","line":29,"column":10,"nodeType":"197","messageId":"198","endLine":29,"endColumn":15},{"ruleId":"191","severity":1,"message":"192","line":90,"column":43,"nodeType":"193","messageId":"194","endLine":90,"endColumn":45},{"ruleId":"191","severity":1,"message":"192","line":53,"column":38,"nodeType":"193","messageId":"194","endLine":53,"endColumn":40},{"ruleId":"202","severity":1,"message":"203","line":58,"column":23,"nodeType":"197","messageId":"204","endLine":58,"endColumn":26},{"ruleId":"202","severity":1,"message":"205","line":59,"column":23,"nodeType":"197","messageId":"204","endLine":59,"endColumn":26},{"ruleId":"195","severity":1,"message":"206","line":74,"column":18,"nodeType":"197","messageId":"198","endLine":74,"endColumn":23},{"ruleId":"195","severity":1,"message":"207","line":6,"column":10,"nodeType":"197","messageId":"198","endLine":6,"endColumn":18},{"ruleId":"195","severity":1,"message":"208","line":2,"column":10,"nodeType":"197","messageId":"198","endLine":2,"endColumn":22},{"ruleId":"195","severity":1,"message":"209","line":2,"column":24,"nodeType":"197","messageId":"198","endLine":2,"endColumn":29},{"ruleId":"210","severity":1,"message":"211","line":18,"column":7,"nodeType":"212","endLine":18,"endColumn":70},{"ruleId":"213","severity":1,"message":"214","line":69,"column":6,"nodeType":"215","endLine":69,"endColumn":8,"suggestions":"216"},"no-native-reassign",["217"],"no-negated-in-lhs",["218"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-unused-vars","'useHistory' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'Form' is defined but never used.","'title' is assigned a value but never used.","no-self-assign","'lat' is assigned to itself.","selfAssignment","'lng' is assigned to itself.","'first' is assigned a value but never used.","'products' is assigned a value but never used.","'IoLogoBuffer' is defined but never used.","'IoAdd' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'prodId' and 'sellerId'. Either include them or remove the dependency array.","ArrayExpression",["219"],"no-global-assign","no-unsafe-negation",{"desc":"220","fix":"221"},"Update the dependencies array to be: [prodId, sellerId]",{"range":"222","text":"223"},[1901,1903],"[prodId, sellerId]"]