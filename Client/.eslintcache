[{"/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/Client/src/App.js":"1","/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/Client/src/Redux/userControl.js":"2","/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/Client/src/Styles/Themes/Client.js":"3","/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/Client/src/Redux/actions/userDataActions.js":"4","/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/Client/src/Components/Pages/Favorites/Favorites.js":"5","/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/Client/src/Components/Pages/Home/Home.js":"6","/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/Client/src/Components/Pages/Map/GoogleMap.js":"7","/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/Client/src/Components/Utils/PageBody.js":"8","/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/Client/src/Database/Airtable.js":"9","/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/Client/src/Components/Pages/Home/Products.js":"10","/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/Client/src/API/API.js":"11","/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/Client/src/Layout.js":"12"},{"size":1307,"mtime":1615829822939,"results":"13","hashOfConfig":"14"},{"size":1002,"mtime":1615829374732,"results":"15","hashOfConfig":"14"},{"size":130,"mtime":1615829374733,"results":"16","hashOfConfig":"14"},{"size":2864,"mtime":1615829374731,"results":"17","hashOfConfig":"14"},{"size":415,"mtime":1615829374725,"results":"18","hashOfConfig":"14"},{"size":472,"mtime":1615999833140,"results":"19","hashOfConfig":"14"},{"size":791,"mtime":1615829374726,"results":"20","hashOfConfig":"14"},{"size":1162,"mtime":1615829374727,"results":"21","hashOfConfig":"14"},{"size":7535,"mtime":1615990316729,"results":"22","hashOfConfig":"14"},{"size":3892,"mtime":1615999789958,"results":"23","hashOfConfig":"14"},{"size":591,"mtime":1615994195289,"results":"24","hashOfConfig":"14"},{"size":6909,"mtime":1615999869824,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"kn6s5o",{"filePath":"28","messages":"29","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50"},"/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/Client/src/App.js",[],"/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/Client/src/Redux/userControl.js",["51","52","53","54","55","56","57","58","59","60"],"/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/Client/src/Styles/Themes/Client.js",[],"/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/Client/src/Redux/actions/userDataActions.js",[],"/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/Client/src/Components/Pages/Favorites/Favorites.js",["61"],"/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/Client/src/Components/Pages/Home/Home.js",["62"],"/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/Client/src/Components/Pages/Map/GoogleMap.js",[],"/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/Client/src/Components/Utils/PageBody.js",["63","64","65"],"/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/Client/src/Database/Airtable.js",[],"/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/Client/src/Components/Pages/Home/Products.js",["66","67","68","69","70"],"/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/Client/src/API/API.js",[],"/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/Client/src/Layout.js",["71"],"import React, { useState, useEffect } from \"react\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport { useIntl } from \"react-intl\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { fetchNotificationData } from \"./Redux/actions/userDataActions\";\nimport SideBar from \"./Components/NavBar/SideBar\";\nimport Icon from \"./Assets/Logo/ReBuyLogoTrans.png\";\n\nimport Home from \"./Components/Pages/Home/Home\";\nimport Map from \"./Components/Pages/Map/Map\";\nimport Favorites from \"./Components/Pages/Favorites/Favorites\";\nimport MainSettings from \"./Components/Pages/Settings/MainSettings\";\nimport UserSettings from \"./Components/Pages/Settings/ProfileSettings\";\nimport LoadingOverlay from \"react-loading-overlay\";\n\nexport default function Layout({ setLocale, setActive, isActive }) {\n  const intl = useIntl();\n  const [rtl, setRtl] = useState(true);\n  const [collapsed, setCollapsed] = useState(false);\n  const [image, setImage] = useState(false);\n  const [toggled, setToggled] = useState(true);\n  const [title, setTitle] = useState(\"ReBuy\");\n  const dispatch = useDispatch();\n  const notificationData = useSelector(\n    (state) => state.airTableData.Notification\n  );\n  const count = notificationData ? notificationData.length : 0;\n  const [notificationCount, setNotificationCount] = useState(count);\n\n  useEffect(() => {\n    if (!notificationData) {\n      dispatch(fetchNotificationData());\n    }\n  });\n\n  const handleCollapsedChange = (checked) => {\n    setCollapsed(checked);\n  };\n\n  const handleRtlChange = (checked) => {\n    setRtl(checked);\n    setLocale(checked ? \"he\" : \"en\");\n  };\n  const handleImageChange = (checked) => {\n    setImage(checked);\n  };\n\n  const handleToggleSidebar = () => {\n    setToggled(!toggled);\n  };\n  return (\n    <LoadingOverlay\n      active={true}\n      fadeSpeed={10000}\n      spinner={\n        <div\n          style={{\n            animation: \"spin 1.5s linear infinite\",\n          }}\n        >\n          <img src={Icon} alt={\"Icon\"} style={{ width: \"30%\" }} />\n        </div>\n      }\n      styles={{\n        wrapper: {},\n        overlay: (base) => ({\n          ...base,\n          backgroundColor: \"#f1f7fb\",\n          opacity: \"0.9\",\n          height: \"100%\",\n          position: \"fixed\",\n        }),\n      }}\n    >\n      <BrowserRouter>\n        <Switch>\n          <div\n            className={`app ${rtl ? \"rtl\" : \"\"} ${toggled ? \"toggled\" : \"\"}`}\n          >\n            <div className=\"main-container\">\n              <div className=\"sideBar\">\n                <SideBar\n                  image={image}\n                  collapsed={collapsed}\n                  rtl={rtl}\n                  toggled={toggled}\n                  handleToggleSidebar={handleToggleSidebar}\n                  handleCollapsedChange={handleCollapsedChange}\n                  handleRtlChange={handleRtlChange}\n                  handleImageChange={handleImageChange}\n                  notificationCount={notificationCount}\n                  setNotificationCount={setNotificationCount}\n                  setLoading={setActive}\n                  loading={isActive}\n                />\n              </div>\n              <MobileBar\n                handleToggleSidebar={handleToggleSidebar}\n                notificationCount={notificationCount}\n                setNotificationCount={setNotificationCount}\n              />\n              <div className={`mainPage ${toggled ? \"toggled\" : \"\"}`}>\n                <Route exact path=\"/\">\n                  <Home\n                    title={intl.formatMessage({ id: \"Home\" })}\n                    setTitle={setTitle}\n                    setActive={setActive}\n                  />\n                </Route>\n                <Route exact path=\"/Map\">\n                  <Map\n                    title={intl.formatMessage({ id: \"Map\" })}\n                    setTitle={setTitle}\n                    setActive={setActive}\n                  />\n                </Route>\n                <Route exact path=\"/Favorites\">\n                  <Favorites\n                    title={intl.formatMessage({ id: \"Favorites\" })}\n                    setTitle={setTitle}\n                    setActive={setActive}\n                  />\n                </Route>\n                <Route exact path=\"/settings/userSettings\">\n                  <UserSettings\n                    title={intl.formatMessage({ id: \"profile\" })}\n                    setTitle={setTitle}\n                  />\n                </Route>\n                <Route exact path=\"/settings/mainSettings\">\n                  <MainSettings\n                    title={intl.formatMessage({ id: \"settings\" })}\n                    setTitle={setTitle}\n                  />\n                </Route>\n              </div>\n            </div>\n          </div>\n        </Switch>\n      </BrowserRouter>\n      {setActive(false)}\n    </LoadingOverlay>\n  );\n}\n\nfunction MobileBar({\n  handleToggleSidebar,\n  notificationCount,\n  setNotificationCount,\n}) {\n  function notificationHandle() {\n    if (notificationCount > 0)\n      return (\n        <span\n          class=\"notification-count\"\n          style={{\n            backgroundColor: \"red\",\n            borderRadius: \"500px\",\n            padding: \"2px 4px\",\n            fontSize: \"10px\",\n            fontWeight: \"700\",\n            lineHeight: \"100%\",\n            right: \"-15px\",\n            top: \"5px\",\n          }}\n        >\n          {notificationCount}\n        </span>\n      );\n  }\n\n  return (\n    <div className=\"toggledBar\">\n      <table width=\"100%\">\n        <tr width=\"100%\">\n          <td width=\"10%\">\n            <div className=\"btn-toggle\" onClick={handleToggleSidebar}>\n              <div class=\"wrapper-menu\">\n                <div class=\"line-menu half start\" />\n                <div class=\"line-menu\" />\n                <div class=\"line-menu half end\" />\n              </div>\n            </div>\n          </td>\n          <td width=\"80%\">\n            <Link to=\"/\">\n              <div className=\"logodiv\">\n                <img className=\"yavologo\" src={Icon} alt=\"logo\" />\n              </div>\n            </Link>\n          </td>\n          <td width=\"10%\">\n            <Link to=\"/notification\">\n              <div class=\"notification notify\">\n                {notificationHandle}\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  width=\"25\"\n                  height=\"25\"\n                  viewBox=\"0 0 24 24\"\n                  fill=\"none\"\n                  stroke=\"#ADAFDE\"\n                  stroke-width=\"2\"\n                  stroke-linecap=\"round\"\n                  stroke-linejoin=\"round\"\n                >\n                  <path d=\"M18 8A6 6 0 0 0 6 8c0 7-3 9-3 9h18s-3-2-3-9\"></path>\n                  <path d=\"M13.73 21a2 2 0 0 1-3.46 0\"></path>\n                </svg>\n              </div>\n            </Link>\n          </td>\n        </tr>\n      </table>\n    </div>\n  );\n}\n",{"ruleId":"72","severity":1,"message":"73","line":1,"column":8,"nodeType":"74","messageId":"75","endLine":1,"endColumn":13},{"ruleId":"72","severity":1,"message":"76","line":1,"column":17,"nodeType":"74","messageId":"75","endLine":1,"endColumn":25},{"ruleId":"72","severity":1,"message":"77","line":1,"column":27,"nodeType":"74","messageId":"75","endLine":1,"endColumn":36},{"ruleId":"72","severity":1,"message":"78","line":2,"column":10,"nodeType":"74","messageId":"75","endLine":2,"endColumn":23},{"ruleId":"72","severity":1,"message":"79","line":2,"column":25,"nodeType":"74","messageId":"75","endLine":2,"endColumn":30},{"ruleId":"72","severity":1,"message":"80","line":2,"column":32,"nodeType":"74","messageId":"75","endLine":2,"endColumn":38},{"ruleId":"72","severity":1,"message":"81","line":3,"column":10,"nodeType":"74","messageId":"75","endLine":3,"endColumn":21},{"ruleId":"72","severity":1,"message":"82","line":3,"column":23,"nodeType":"74","messageId":"75","endLine":3,"endColumn":34},{"ruleId":"72","severity":1,"message":"83","line":4,"column":10,"nodeType":"74","messageId":"75","endLine":4,"endColumn":23},{"ruleId":"72","severity":1,"message":"84","line":6,"column":10,"nodeType":"74","messageId":"75","endLine":6,"endColumn":25},{"ruleId":"72","severity":1,"message":"85","line":5,"column":19,"nodeType":"74","messageId":"75","endLine":5,"endColumn":29},{"ruleId":"72","severity":1,"message":"85","line":6,"column":19,"nodeType":"74","messageId":"75","endLine":6,"endColumn":29},{"ruleId":"72","severity":1,"message":"86","line":2,"column":10,"nodeType":"74","messageId":"75","endLine":2,"endColumn":22},{"ruleId":"72","severity":1,"message":"87","line":2,"column":24,"nodeType":"74","messageId":"75","endLine":2,"endColumn":29},{"ruleId":"88","severity":1,"message":"89","line":18,"column":7,"nodeType":"90","endLine":18,"endColumn":70},{"ruleId":"72","severity":1,"message":"91","line":2,"column":8,"nodeType":"74","messageId":"75","endLine":2,"endColumn":18},{"ruleId":"72","severity":1,"message":"92","line":6,"column":29,"nodeType":"74","messageId":"75","endLine":6,"endColumn":39},{"ruleId":"72","severity":1,"message":"93","line":75,"column":23,"nodeType":"74","messageId":"75","endLine":75,"endColumn":32},{"ruleId":"72","severity":1,"message":"94","line":78,"column":11,"nodeType":"74","messageId":"75","endLine":78,"endColumn":18},{"ruleId":"72","severity":1,"message":"95","line":141,"column":7,"nodeType":"74","messageId":"75","endLine":141,"endColumn":16},{"ruleId":"72","severity":1,"message":"96","line":23,"column":10,"nodeType":"74","messageId":"75","endLine":23,"endColumn":15},"no-unused-vars","'React' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'useEffect' is defined but never used.","'BrowserRouter' is defined but never used.","'Route' is defined but never used.","'Switch' is defined but never used.","'useDispatch' is defined but never used.","'useSelector' is defined but never used.","'fetchUserData' is defined but never used.","'FETCH_USER_DATA' is defined but never used.","'setLoading' is assigned a value but never used.","'IoLogoBuffer' is defined but never used.","'IoAdd' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'ReactTable' is defined but never used.","'CardHeader' is defined but never used.","'isLoading' is assigned a value but never used.","'columns' is assigned a value but never used.","'showTable' is assigned a value but never used.","'title' is assigned a value but never used."]