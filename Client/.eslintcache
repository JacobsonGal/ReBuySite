[{"/Users/jacobsonpro/Downloads/ReBuySite/Client/src/Components/Pages/Home/Products.js":"1","/Users/jacobsonpro/Downloads/ReBuySite/Client/src/Components/Pages/Map/GoogleMap.js":"2"},{"size":10058,"mtime":1618678173046,"results":"3","hashOfConfig":"4"},{"size":5140,"mtime":1618678189080,"results":"5","hashOfConfig":"4"},{"filePath":"6","messages":"7","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"xghxrz",{"filePath":"8","messages":"9","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"10"},"/Users/jacobsonpro/Downloads/ReBuySite/Client/src/Components/Pages/Home/Products.js",["11","12","13","14","15","16","17","18","19","20","21","22","23","24","25","26","27","28","29","30"],"/Users/jacobsonpro/Downloads/ReBuySite/Client/src/Components/Pages/Map/GoogleMap.js",["31"],"import React, { Component } from \"react\";\nimport api from \"../../../API/API\";\nimport GoogleMapReact from \"google-map-react\";\nimport Marker from \"./Marker\";\nimport Geocode from \"react-geocode\";\nimport Search from \"../Home/Search\";\nimport PopUp from \"../../Utils/PopUp\";\n\nGeocode.setApiKey(\"AIzaSyDzTw-IhXNRYDH1QpvVVNp_ix9AzFC0McM\");\nGeocode.setLanguage(\"He\");\nGeocode.setRegion(\"Il\");\nGeocode.setLocationType(\"ROOFTOP\");\nGeocode.enableDebug();\n\nexport default class GoogleMap extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      products: [],\n      images: [],\n      users: [],\n      product: null,\n      locations: [{}],\n      center: {\n        lat: 31.96996095111596,\n        lng: 34.77278720495645,\n      },\n      zoom: 10,\n      isModelOpen: false,\n      setLoading: this.props.setLoading,\n    };\n    this.state.setLoading(true);\n  }\n\n  componentDidMount = async () => {\n    this.state.setLoading(false);\n    try {\n      await api.getAllProducts().then((product) => {\n        this.setState({\n          products: product.data.data,\n        });\n      });\n      await api.getAllImages().then((image) => {\n        this.setState({\n          images: image.data.data,\n        });\n      });\n      await api.getAllUsers().then((user) => {\n        this.setState({\n          users: user.data.data,\n        });\n      });\n      this.state.setLoading(false);\n    } catch (error) {\n      console.log(error);\n    }\n    this.state.products.map(\n      (p, i) =>\n        p[\"address\"] &&\n        Geocode.fromAddress(p[\"address\"]).then(\n          // Geocode.fromAddress(\"RISHON-LE-ZION\").then(\n          (response) => {\n            var { lat, lng } = response.results[0].geometry.location;\n            lat = lat + i * 0.005;\n            lng = lng + i * 0.005;\n            this.setState({\n              locations: this.state.locations.concat([{ lat, lng }]),\n            });\n            // console.log(this.state.locations);\n          },\n          (error) => {\n            console.error(error);\n          }\n        )\n    );\n    this.setState((state) => {\n      const [first, ...rest] = state.locations;\n      return {\n        locations: rest,\n      };\n    });\n  };\n  searchHandler = (products) => {\n    this.setState({\n      products,\n    });\n  };\n  productHandler = (product) => {\n    this.setState({\n      product,\n    });\n  };\n  modalHandler = (isModelOpen) => {\n    this.setState({\n      isModelOpen,\n    });\n  };\n  render() {\n    const {\n      products,\n      images,\n      users,\n      center,\n      zoom,\n      isModelOpen,\n      product,\n      locations,\n    } = this.state;\n\n    function getMapOptions(maps) {\n      return {\n        streetViewControl: true,\n        scaleControl: true,\n        fullscreenControl: true,\n        styles: [\n          {\n            featureType: \"poi.business\",\n            elementType: \"labels\",\n            stylers: [\n              {\n                visibility: \"off\",\n              },\n            ],\n          },\n        ],\n        gestureHandling: \"greedy\",\n        disableDoubleClickZoom: true,\n        minZoom: 0,\n        maxZoom: 30,\n        layerTypes: [\"TrafficLayer\"],\n        mapTypeControl: true,\n        mapTypeId: maps.MapTypeId.ROADMAP,\n        mapTypeControlOptions: {\n          style: maps.MapTypeControlStyle.DROPDOWN_MENU,\n          position: maps.ControlPosition.RIGHT_CENTER,\n          mapTypeIds: [\n            maps.MapTypeId.ROADMAP,\n            maps.MapTypeId.SATELLITE,\n            maps.MapTypeId.HYBRID,\n          ],\n        },\n        zoomControl: true,\n        clickableIcons: false,\n      };\n    }\n\n    return (\n      <>\n        <div\n          style={{\n            position: \"absolute\",\n            top: \"3rem\",\n            alignItems: \"center\",\n            width: \"min-content\",\n            padding: \"2rem\",\n            zIndex: \"99\",\n          }}\n        >\n          <Search\n            searchHandler={this.searchHandler}\n            style={{ position: \"absolute\" }}\n          />\n        </div>\n        <div style={{ height: \"96vh\", width: \"100%\" }}>\n          <GoogleMapReact\n            bootstrapURLKeys={{\n              key: \"AIzaSyAiTqUoIPktHrM66nIC7fRevgXvj7BzN-A\",\n              language: \"he\",\n              region: \"il\",\n            }}\n            defaultCenter={center}\n            defaultZoom={zoom}\n            options={getMapOptions}\n          >\n            <PopUp\n              product={product}\n              images={images}\n              users={users}\n              isModelOpen={isModelOpen}\n              setIsModelOpen={this.modalHandler}\n            />\n            {products.map((product, i) => {\n              return (\n                <Marker\n                  lat={locations[i] ? locations[i].lat : null}\n                  lng={locations[i] ? locations[i].lng : null}\n                  product={product}\n                  images={images}\n                  users={users}\n                  key={product[\"name\"]}\n                  setIsModelOpen={this.modalHandler}\n                  setData={this.productHandler}\n                />\n              );\n            })}\n          </GoogleMapReact>\n        </div>\n        )\n      </>\n    );\n  }\n}\n",{"ruleId":"32","severity":1,"message":"33","line":1,"column":28,"nodeType":"34","messageId":"35","endLine":1,"endColumn":36},{"ruleId":"32","severity":1,"message":"36","line":6,"column":10,"nodeType":"34","messageId":"35","endLine":6,"endColumn":20},{"ruleId":"32","severity":1,"message":"37","line":7,"column":8,"nodeType":"34","messageId":"35","endLine":7,"endColumn":18},{"ruleId":"32","severity":1,"message":"38","line":11,"column":10,"nodeType":"34","messageId":"35","endLine":11,"endColumn":14},{"ruleId":"32","severity":1,"message":"39","line":12,"column":8,"nodeType":"34","messageId":"35","endLine":12,"endColumn":22},{"ruleId":"32","severity":1,"message":"40","line":14,"column":3,"nodeType":"34","messageId":"35","endLine":14,"endColumn":7},{"ruleId":"32","severity":1,"message":"41","line":15,"column":3,"nodeType":"34","messageId":"35","endLine":15,"endColumn":14},{"ruleId":"32","severity":1,"message":"42","line":16,"column":3,"nodeType":"34","messageId":"35","endLine":16,"endColumn":17},{"ruleId":"32","severity":1,"message":"43","line":17,"column":3,"nodeType":"34","messageId":"35","endLine":17,"endColumn":14},{"ruleId":"32","severity":1,"message":"44","line":18,"column":3,"nodeType":"34","messageId":"35","endLine":18,"endColumn":12},{"ruleId":"32","severity":1,"message":"45","line":19,"column":3,"nodeType":"34","messageId":"35","endLine":19,"endColumn":13},{"ruleId":"32","severity":1,"message":"46","line":20,"column":3,"nodeType":"34","messageId":"35","endLine":20,"endColumn":9},{"ruleId":"32","severity":1,"message":"47","line":21,"column":3,"nodeType":"34","messageId":"35","endLine":21,"endColumn":11},{"ruleId":"32","severity":1,"message":"48","line":22,"column":3,"nodeType":"34","messageId":"35","endLine":22,"endColumn":15},{"ruleId":"32","severity":1,"message":"49","line":23,"column":3,"nodeType":"34","messageId":"35","endLine":23,"endColumn":18},{"ruleId":"32","severity":1,"message":"50","line":25,"column":8,"nodeType":"34","messageId":"35","endLine":25,"endColumn":16},{"ruleId":"32","severity":1,"message":"51","line":27,"column":8,"nodeType":"34","messageId":"35","endLine":27,"endColumn":13},{"ruleId":"32","severity":1,"message":"52","line":44,"column":10,"nodeType":"34","messageId":"35","endLine":44,"endColumn":23},{"ruleId":"32","severity":1,"message":"53","line":54,"column":7,"nodeType":"34","messageId":"35","endLine":54,"endColumn":20},{"ruleId":"54","severity":1,"message":"55","line":55,"column":3,"nodeType":"56","messageId":"57","endLine":57,"endColumn":4},{"ruleId":"32","severity":1,"message":"58","line":77,"column":14,"nodeType":"34","messageId":"35","endLine":77,"endColumn":19},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'makeStyles' is defined but never used.","'IconButton' is defined but never used.","'Link' is defined but never used.","'StarBorderIcon' is defined but never used.","'Card' is defined but never used.","'CardContent' is defined but never used.","'CardActionArea' is defined but never used.","'CardActions' is defined but never used.","'CardMedia' is defined but never used.","'Typography' is defined but never used.","'Button' is defined but never used.","'GridList' is defined but never used.","'GridListTile' is defined but never used.","'GridListTileBar' is defined but never used.","'Carousel' is defined but never used.","'PopUp' is defined but never used.","'UpdateProduct' is defined but never used.","'DeleteProduct' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'first' is assigned a value but never used."]