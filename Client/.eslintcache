[{"/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/Client/src/App.js":"1","/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/Client/src/Components/SSO/Auth.js":"2","/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/Client/src/Components/NavBar/MobileBar.js":"3","/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/Client/src/Components/Pages/Home/Product.js":"4","/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/Client/src/Components/Pages/Favorites/Favorites.js":"5","/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/Client/src/Components/Pages/Map/Map.js":"6","/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/Client/src/Components/Pages/Settings/ProfileSettings.js":"7","/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/Client/src/Components/NavBar/User.js":"8","/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/Client/src/Components/Utils/Page.js":"9","/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/Client/src/Components/Pages/Map/Marker.js":"10","/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/Client/src/Components/Pages/Home/Sort.js":"11","/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/Client/src/Components/NavBar/SideBar.js":"12","/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/Client/src/Components/SSO/SignUp.js":"13","/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/Client/src/API/API.js":"14","/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/Client/src/Components/Pages/Home/Create.js":"15","/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/Client/src/Styles/MessagesMain.js":"16","/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/Client/src/Components/SSO/Config.js":"17","/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/Client/src/Components/Pages/Map/GoogleMap.js":"18","/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/Client/src/Components/Utils/PageBody.js":"19","/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/Client/src/Components/Pages/Home/Products.js":"20","/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/Client/src/Layout.js":"21","/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/Client/src/Components/Pages/Settings/MainSettings.js":"22","/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/Client/src/Components/Pages/Home/Search.js":"23","/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/Client/src/Components/Pages/Home/Home.js":"24","/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/Client/src/Components/Utils/PopUp.js":"25","/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/Client/src/Components/Pages/Home/Update.js":"26","/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/Client/src/Components/SSO/LogIn.js":"27"},{"size":954,"mtime":1618148462694,"results":"28","hashOfConfig":"29"},{"size":1168,"mtime":1616345228879,"results":"30","hashOfConfig":"29"},{"size":2138,"mtime":1616017594447,"results":"31","hashOfConfig":"29"},{"size":2631,"mtime":1618253184865,"results":"32","hashOfConfig":"29"},{"size":525,"mtime":1618225807687,"results":"33","hashOfConfig":"29"},{"size":466,"mtime":1617201333892,"results":"34","hashOfConfig":"29"},{"size":3906,"mtime":1618148462709,"results":"35","hashOfConfig":"29"},{"size":2425,"mtime":1618148462695,"results":"36","hashOfConfig":"29"},{"size":1372,"mtime":1616017738941,"results":"37","hashOfConfig":"29"},{"size":2823,"mtime":1618252957776,"results":"38","hashOfConfig":"29"},{"size":441,"mtime":1618221697569,"results":"39","hashOfConfig":"29"},{"size":3710,"mtime":1618225784208,"results":"40","hashOfConfig":"29"},{"size":3022,"mtime":1618258222183,"results":"41","hashOfConfig":"29"},{"size":890,"mtime":1618301979581,"results":"42","hashOfConfig":"29"},{"size":6607,"mtime":1618300570649,"results":"43","hashOfConfig":"29"},{"size":1658,"mtime":1616600000023,"results":"44","hashOfConfig":"29"},{"size":506,"mtime":1616345228879,"results":"45","hashOfConfig":"29"},{"size":3673,"mtime":1618253130354,"results":"46","hashOfConfig":"29"},{"size":1162,"mtime":1616017500273,"results":"47","hashOfConfig":"29"},{"size":9740,"mtime":1618253184866,"results":"48","hashOfConfig":"29"},{"size":6505,"mtime":1618148462710,"results":"49","hashOfConfig":"29"},{"size":1545,"mtime":1616017500271,"results":"50","hashOfConfig":"29"},{"size":1052,"mtime":1618148462698,"results":"51","hashOfConfig":"29"},{"size":514,"mtime":1618148462697,"results":"52","hashOfConfig":"29"},{"size":2084,"mtime":1618253184871,"results":"53","hashOfConfig":"29"},{"size":6038,"mtime":1618148462699,"results":"54","hashOfConfig":"29"},{"size":2588,"mtime":1616604342865,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"59"},"kn6s5o",{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"68"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"64"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"64"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"59"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"68"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"68"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"59"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"104","messages":"105","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"68"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"68"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"116"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"68"},"/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/Client/src/App.js",["128"],"import React, { useState } from \"react\";\nimport { IntlProvider } from \"react-intl\";\nimport Layout from \"./Layout\";\nimport messages from \"./Styles/MessagesMain\";\nimport \"./Styles/App.scss\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport { AuthProvider } from \"./Components/SSO/Auth\";\n\nimport io from \"socket.io-client\"\nconst socket=io.connect(\"http://localhost:3000\")\n\n\nexport default function App() {\n  const [locale, setLocale] = useState(\"en\");\n  const [isActive, setActive] = useState(true);\n\n  return (\n    <AuthProvider>\n      <IntlProvider locale={locale} messages={messages[locale]}>\n        <BrowserRouter>\n          <Switch>\n            <Route path=\"/\">\n              <Layout\n                setLocale={setLocale}\n                setActive={setActive}\n                isActive={isActive}\n              />\n            </Route>\n          </Switch>\n        </BrowserRouter>\n      </IntlProvider>\n    </AuthProvider>\n  );\n}\n",["129","130"],"/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/Client/src/Components/SSO/Auth.js",[],"/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/Client/src/Components/NavBar/MobileBar.js",[],["131","132"],"/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/Client/src/Components/Pages/Home/Product.js",["133","134"],"import React, { useState, useEffect, useRef } from \"react\";\nimport api from \"../../../API/API\";\nimport { Container, Card } from \"react-bootstrap\";\n\nfunction Product() {\n  const [id, setId] = useState(\"\");\n  const [product, setProduct] = useState(null);\n  const [Images, setImages] = useState([]);\n  const inputRef = useRef(null);\n  const varRed = useRef(Images.length);\n\n  useEffect(() => {\n    inputRef.current.focus();\n    async function fetchData() {\n      if (product === null) {\n        setId(window.location.href.split(\"product/\")[1]);\n        // console.log(\"id\", id);\n        if (id) {\n          const newProduct = await api.getProductById(id);\n          // const imgArr = await api.getAllImages();\n          await api.getAllImages().then((image) => {\n            setImages(image.data);\n          });\n          // const imgArr = [];\n          // newProduct.data[\"images\"] &&\n          //   newProduct.data[\"images\"].map((image) => {\n          //     console.log(image);\n          //     const newImage = api.getProductImagesById(image);\n          //     imgArr.push(newImage);\n          //   });\n          setProduct(newProduct.data);\n          // setImages(imgArr.data.data);\n        }\n      }\n      // if (product) {\n      //   let imgArr = [];\n      //   product.data[\"images\"].map((image) => {\n      //     console.log(image);\n      //     const newImage = api.getProductImagesById(image);\n      //     imgArr.push(newImage);\n      //   });\n      //   // const newImages = await api.getProductImagesById(id);\n      //   setImages(imgArr);\n      //   console.log(\"Images : \" + imgArr);\n      //   // console.log(\"Images : \" + Images);\n      // }\n    }\n\n    fetchData();\n  }, [id, product, Images]);\n\n  return (\n    product && (\n      <Container className=\"mt-5\">\n        <h1>{product.data.name}</h1>\n        {console.log(\"Images : \" + Images.data)}\n        {product.data[\"images\"].map((image) => {\n          return (\n            <img\n              style={{ width: \"300px\" }}\n              src={`http://localhost:3000/${image}`}\n            />\n          );\n        })}\n        {/* {product.data[\"images\"].map((image) => {\n          return (\n            <img\n              style={{ width: \"300px\" }}\n              src={`http://localhost:3000/${image}`}\n            />\n          );\n        })} */}\n        <Card>\n          <Card.Body>{product.data.description}</Card.Body>\n          <Card.Body>{product.data.condition}</Card.Body>\n          <Card.Body>{product.data.price} NIS</Card.Body>\n          <Card.Body>from {product.data.address}</Card.Body>\n        </Card>\n      </Container>\n    )\n  );\n}\n\nexport default Product;\n",["135","136"],"/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/Client/src/Components/Pages/Favorites/Favorites.js",[],"/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/Client/src/Components/Pages/Map/Map.js",["137"],"import React, { useState } from \"react\";\nimport Page from \"../../Utils/Page\";\nimport GoogleMap from \"./GoogleMap\";\n\nexport default function Map({ title, setTitle, setActive }) {\n  const [loading, setLoading] = useState(false);\n  return (\n    <Page\n      loading={loading}\n      title={title}\n      color={\"#fdeded\"}\n      setTitle={setTitle}\n      add={false}\n      FAB=\"none\"\n      dots={false}\n    >\n      <GoogleMap />\n      {setActive(false)}\n    </Page>\n  );\n}\n","/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/Client/src/Components/Pages/Settings/ProfileSettings.js",["138","139","140","141","142","143"],"import React, { useState } from \"react\";\nimport { useIntl } from \"react-intl\";\nimport MediaQuery from \"react-responsive\";\nimport { Form, Card, Dropdown } from \"react-bootstrap\";\nimport { FaPencilAlt } from \"react-icons/fa\";\n\nexport default function ProfileSetting({ title, setTitle }) {\n  const userData = null;\n  const Admin = userData ? userData[\"Admin\"] : true;\n\n  return (\n    <>\n      {Admin ? (\n        <iframe\n          src=\"http://localhost:4200\"\n          title=\"Admin\"\n          style={{\n            width: \"102%\",\n            height: \"102%\",\n            margin: \"-5px\",\n            marginRight: \"-1.5rem\",\n          }}\n        />\n      ) : (\n        <Card className=\"userSettings\">\n          {/* <Card.Header className=\"userHeader\">\n            <Card.Img\n              style={{\n                alignSelf: window.screen.width <= 800 ? \"right\" : \"center\",\n                width: \"100px\",\n                height: \"100px\",\n                borderRadius: \"50%\",\n              }}\n              variant=\"top\"\n              src={photo}\n            />\n            <Card.Title\n              style={{\n                margin: \"1rem\",\n                width: \"80%\",\n                color: \"#147764\",\n                alignSelf: \"center\",\n              }}\n            >\n              {fullName}\n              <Card.Subtitle>{plan}</Card.Subtitle>\n              <MediaQuery minWidth={800}>\n                <div\n                  style={{\n                    width: \"100%\",\n                    textAlign: \"center\",\n                    marginTop: \"10px\",\n                  }}\n                >\n                  <a\n                    onClick={() => setEditMode((x) => !x)}\n                    // disabled={props.editdisabled}\n                    // onClick={editHandler}\n\n                    style={{\n                      padding: \"5px\",\n                      borderRadius: \"35px\",\n                      fontSize: \"15px\",\n                      backgroundColor: \"#ececec\",\n                      // width: \"100%\",\n                      textAlign: \"center\",\n                      color: \"black\",\n                    }}\n                  >\n                    <FaPencilAlt style={{ padding: \"2px\" }} />\n                    ערוך\n                  </a>{\" \"}\n                </div>\n              </MediaQuery>\n            </Card.Title>\n            <MediaQuery maxWidth={800}>\n              <Dropdown\n                className=\"pageHeaderDrop\"\n                style={{ alignSelf: \"center\", float: \"left\" }}\n              >\n                <Dropdown.Toggle as={CustomToggle}></Dropdown.Toggle>\n\n                <Dropdown.Menu size=\"sm\" title=\"\">\n                  <Dropdown.Header>עוד</Dropdown.Header>\n                  <Dropdown.Item\n                    onClick={() => setEditMode((x) => !x)}\n                    // disabled={props.editdisabled}\n                    // onClick={editHandler}\n                    href=\"\"\n                  >\n                    <FaPencilAlt style={{ padding: \"2px\" }} />\n                    ערוך\n                  </Dropdown.Item>\n                  {/* <Dropdown.Item onClick={shareHandler} href=\"\">\n                שתף\n              </Dropdown.Item> */}\n          {/* <Dropdown.Item href=''>\n\t\t\t\t\t\t\t\t<FaPrint style={{ padding: '2px' }} />\n\t\t\t\t\t\t\t\tהדפס\n\t\t\t\t\t\t\t</Dropdown.Item> \n                </Dropdown.Menu>\n              </Dropdown>\n            </MediaQuery>\n          </Card.Header>\n\n          <Card.Body style={{ alignItems: \"center\" }}>\n            {/* <Form>\n          {dataArray.map((x) => (\n            <UpdateFormComponent\n              editMode={editMode}\n              id={id}\n              key={id}\n              name={x.name}\n              data={x.data}\n              dataBase={x.dataBase}\n              dontEdit={x.dontEdit || false}\n            />\n          ))}\n        </Form> \n          </Card.Body>\n        */}\n        </Card>\n      )}\n    </>\n  );\n}\n","/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/Client/src/Components/NavBar/User.js",["144"],"import React from \"react\";\nimport { useIntl } from \"react-intl\";\nimport { Menu, MenuItem } from \"react-pro-sidebar\";\nimport { SubMenu } from \"react-pro-sidebar\";\nimport { NavLink, Redirect } from \"react-router-dom\";\nimport Star from \"@material-ui/icons/StarRounded\";\nimport Person from \"@material-ui/icons/PersonRounded\";\nimport firebaseConfig from \"../SSO/Config.js\";\n\nexport default function User({ handleToggleSidebar }) {\n  const intl = useIntl();\n  // const userData = useSelector((state) => state.airTableData.userData);\n  const userData = null;\n  const photo = userData\n    ? userData[0]?.fields?.Picture[0].thumbnails.full.url\n    : \"\";\n  const name = userData ? userData[0]?.fields?.[\"First name\"] : \"\";\n  const Admin = userData ? userData[\"Admin\"] : true;\n\n  function Userlog() {\n    if (photo !== \"\") {\n      return (\n        <img\n          src={photo}\n          alt=\"User\"\n          style={{\n            alignContent: \"center\",\n            width: \"100%\",\n            height: \"100%\",\n            borderRadius: \"55px\",\n          }}\n        />\n      );\n    } else {\n      return <Person className=\"userPhoto\" />;\n    }\n  }\n\n  return (\n    <>\n      <Menu iconShape=\"circle\">\n        <SubMenu\n          title={intl.formatMessage({ id: \"welcome\" }) + name}\n          icon={<Userlog />}\n        >\n          <MenuItem icon={<Star />}>\n            <NavLink to=\"/settings/userSettings\" onClick={handleToggleSidebar}>\n              {intl.formatMessage({ id: \"profile\" })}\n            </NavLink>\n          </MenuItem>\n          <MenuItem>\n            <NavLink to=\"/settings/mainSettings\" onClick={handleToggleSidebar}>\n              {intl.formatMessage({ id: \"settings\" })}\n            </NavLink>\n          </MenuItem>\n          <MenuItem>{intl.formatMessage({ id: \"help\" })}</MenuItem>\n          <MenuItem onClick={() => firebaseConfig.auth().signOut()}>\n            {intl.formatMessage({ id: \"disconnect\" })}\n          </MenuItem>\n        </SubMenu>\n      </Menu>\n      {Admin && (\n        <Menu iconShape=\"circle\">\n          <Menu title={intl.formatMessage({ id: \"welcome\" }) + name}>\n            <MenuItem icon={<Star />}>\n              <NavLink\n                to=\"/settings/userSettings\"\n                onClick={handleToggleSidebar}\n              >\n                {intl.formatMessage({ id: \"Administrator\" })}\n              </NavLink>\n            </MenuItem>\n          </Menu>\n        </Menu>\n      )}\n    </>\n  );\n}\n","/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/Client/src/Components/Utils/Page.js",["145"],"import React from \"react\";\nimport { useIntl } from \"react-intl\";\nimport PageBody from \"./PageBody\";\nimport LoadingOverlay from \"react-loading-overlay\";\nimport icon from \"../../Assets/Images/ReBuyLogoTrans.png\";\n\nexport default function Page({\n  onlyTop,\n  data,\n  title,\n  setTitle,\n  color,\n  boldPar,\n  par,\n  pic,\n  to,\n  button,\n  children,\n  loading,\n  setEdit,\n  edit,\n  share,\n  setShare,\n  dots,\n  editdisabled,\n  add,\n  FAB,\n  print,\n  setPrint,\n  printArr,\n  setPrintArr,\n  dataArr,\n  main,\n  shareRecord,\n  type,\n}) {\n  document.title = \"ReBuy | \" + title;\n  setTitle(title);\n  function Body() {\n    return children ? (\n      children\n    ) : !loading ? (\n      <PageBody\n        data={data}\n        color={color}\n        boldPar={boldPar}\n        par={par}\n        pic={pic}\n        to={to}\n        button={button}\n      />\n    ) : null;\n  }\n\n  return (\n    <div>\n      <LoadingOverlay\n        active={loading}\n        spinner={<img src={icon} className=\"pageLoader\" alt=\"loader\" />}\n        styles={{\n          wrapper: {},\n          overlay: (base) => ({\n            ...base,\n            height: \"110%\",\n            backgroundColor: \"#f5f7fb\",\n            opacity: \"0.7\",\n          }),\n        }}\n      >\n        {!loading ? (\n          <div className=\"page\">\n            <Body />\n          </div>\n        ) : null}\n      </LoadingOverlay>\n    </div>\n  );\n}\n","/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/Client/src/Components/Pages/Map/Marker.js",["146"],"/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/Client/src/Components/Pages/Home/Sort.js",["147","148"],"import React, { useState } from \"react\";\nimport { Form, Button } from \"react-bootstrap\";\nimport api from \"../../../API/API\";\n\nfunction Search(props) {\n  const clickHandler = async () => {\n    await api\n      .sort()\n      .then((res) => {\n        props.searchHandler(res.data);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n  return <Button onClick={clickHandler}>Sort By Name</Button>;\n}\n\nexport default Search;\n","/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/Client/src/Components/NavBar/SideBar.js",["149","150"],"import React from \"react\";\nimport { useIntl } from \"react-intl\";\nimport { NavLink } from \"react-router-dom\";\nimport {\n  ProSidebar,\n  Menu,\n  MenuItem,\n  SidebarHeader,\n  SidebarFooter,\n  SidebarContent,\n  SubMenu,\n} from \"react-pro-sidebar\";\nimport logo from \"../../Assets/ReBuy.jpeg\";\nimport Home from \"@material-ui/icons/HomeRounded\";\nimport Map from \"@material-ui/icons/MapRounded\";\nimport Category from \"@material-ui/icons/CategoryRounded\";\nimport Star from \"@material-ui/icons/StarRounded\";\nimport Upload from \"@material-ui/icons/ArrowUpwardRounded\";\nimport Instagram from \"@material-ui/icons/Instagram\";\nimport Facebook from \"@material-ui/icons/Facebook\";\nimport TopBar from \"./TopBar\";\nimport User from \"./User\";\n\nexport default function SideBar({\n  image,\n  collapsed,\n  rtl,\n  toggled,\n  email,\n  handleToggleSidebar,\n  handleCollapsedChange,\n  handleRtlChange,\n  handleImageChange,\n  setSeen,\n  notificationCount,\n  setNotificationCount,\n  setLoading,\n}) {\n  const intl = useIntl();\n  return (\n    <div className=\"sideBar\">\n      <ProSidebar\n        // image={image ? sidebarBg : false}\n        rtl={rtl}\n        collapsed={collapsed}\n        toggled={toggled}\n        breakPoint=\"md\"\n        onToggle={handleToggleSidebar}\n      >\n        <SidebarHeader>\n          <TopBar\n            toggled={toggled}\n            handleToggleSidebar={handleToggleSidebar}\n            notificationCount={notificationCount}\n            setNotificationCount={setNotificationCount}\n            main={false}\n          />\n        </SidebarHeader>\n        <SidebarContent>\n          <Menu iconShape=\"circle\">\n            <MenuItem icon={<Home />}>\n              <NavLink to=\"/\" onClick={handleToggleSidebar}>\n                {intl.formatMessage({ id: \"Home\" })}\n              </NavLink>\n            </MenuItem>\n            <MenuItem icon={<Map />}>\n              <NavLink to=\"/Map\" onClick={handleToggleSidebar}>\n                {intl.formatMessage({ id: \"Map\" })}\n              </NavLink>\n            </MenuItem>\n            <MenuItem icon={<Upload />}>\n              <NavLink to=\"/Upload\" onClick={handleToggleSidebar}>\n                {intl.formatMessage({ id: \"Upload\" })}\n              </NavLink>\n            </MenuItem>\n            <MenuItem icon={<Star />}>\n              <NavLink to=\"/Favorites\" onClick={handleToggleSidebar}>\n                {intl.formatMessage({ id: \"Favorites\" })}\n              </NavLink>\n            </MenuItem>\n            {/* <SubMenu\n              title={intl.formatMessage({ id: \"Catagories\" })}\n              icon={<Category />}\n            >\n              <MenuItem>Clothes</MenuItem>\n              <MenuItem>Tech</MenuItem>\n              <MenuItem>Music</MenuItem>\n              <MenuItem>Gadgets</MenuItem>\n            </SubMenu> */}\n          </Menu>\n\n          <User handleToggleSidebar={handleToggleSidebar} />\n        </SidebarContent>\n        <SidebarFooter className=\"sideBarFooter\">\n          <div className=\"sidebar-btn-wrapper\">\n            <a\n              iconShape=\"circle\"\n              href=\"https://www.facebook.com/ReBuyPlatform\"\n              className=\"sidebar-btn\"\n            >\n              <span>\n                {\"    ReBuy \"} {new Date().getFullYear()}\n                {\"  \"}\n                <img\n                  src={logo}\n                  alt=\"Logo\"\n                  style={{\n                    width: \"1.5rem\",\n                    height: \"1.5rem\",\n                    filter: \"grayscale(100%)\",\n                    opacity: \"0.9\",\n                  }}\n                />\n                <Facebook />\n                <Instagram />\n              </span>\n            </a>\n          </div>\n        </SidebarFooter>\n      </ProSidebar>\n    </div>\n  );\n}\n","/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/Client/src/Components/SSO/SignUp.js",["151"],"/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/Client/src/API/API.js",[],"/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/Client/src/Components/Pages/Home/Create.js",["152"],"/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/Client/src/Styles/MessagesMain.js",[],"/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/Client/src/Components/SSO/Config.js",[],["153","154"],"/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/Client/src/Components/Pages/Map/GoogleMap.js",["155"],"/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/Client/src/Components/Utils/PageBody.js",["156","157","158"],"import React from \"react\";\nimport { IoLogoBuffer, IoAdd } from \"react-icons/io5\";\nimport { Button } from \"@material-ui/core\";\nimport { Link } from \"react-router-dom\";\n\nexport default function PageBody({ color, boldPar, par, pic, to, button }) {\n  return (\n    <div\n      style={{\n        textAlign: \"center\",\n        margin: \"2rem\",\n        height: \"90%\",\n        borderRadius: \"50px\",\n        backgroundColor: color,\n        color: \"gray\",\n      }}\n    >\n      <img src={pic} style={{ marginTop: \"40px\", height: \"50px\" }} />\n      <p style={{ margin: \"2rem\" }}>\n        <b style={{ display: \"block\" }}>{boldPar}</b> {par}\n      </p>\n      <Link to={to}>\n        <Button\n          style={{\n            textAlign: \"center\",\n            margin: \"1rem\",\n            padding: \"1rem\",\n            height: \"90%\",\n            textOverflow: \"ellipsis\",\n            whiteSpace: \"nowrap\",\n            width: \"auto\",\n            background: \"#343798\",\n            color: \"white\",\n            borderRadius: \"66px 66px 66px 66px\",\n            boxShadow: \"0px 0px 10px 0px\",\n          }}\n        >\n          <h5>{button}</h5>\n        </Button>\n      </Link>\n    </div>\n  );\n}\n","/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/Client/src/Components/Pages/Home/Products.js",["159","160","161","162","163","164","165","166","167"],"import React, { Component, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport api from \"../../../API/API\";\nimport styled from \"styled-components\";\nimport \"react-table/index\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Search from \"./Search\";\nimport Sort from \"./Sort\";\nimport { Link } from \"react-router-dom\";\nimport StarBorderIcon from \"@material-ui/icons/StarBorder\";\nimport {\n  Card,\n  CardContent,\n  CardActionArea,\n  CardActions,\n  CardMedia,\n  Typography,\n  Button,\n  GridList,\n  GridListTile,\n  GridListTileBar,\n} from \"@material-ui/core\";\nimport Carousel from \"react-bootstrap/Carousel\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport PopUp from \"../../Utils/PopUp\";\n\nconst Wrapper = styled.div`\n  padding: 0 40px 40px 40px;\n`;\n\nconst Update = styled.div`\n  color: #ef9b0f;\n  cursor: pointer;\n`;\n\nconst Delete = styled.div`\n  color: #ff0000;\n  cursor: pointer;\n`;\n\nfunction UpdateProduct({ id }) {\n  const history = useHistory();\n\n  const updateUser = (event) => {\n    event.preventDefault();\n    history.push(`/Update/${id}`);\n  };\n  return <Update onClick={updateUser}>Update</Update>;\n}\n\nclass DeleteProduct extends Component {\n  constructor() {\n    super();\n  }\n  deleteUser = (event) => {\n    event.preventDefault();\n\n    if (\n      window.confirm(\n        `Do tou want to delete the product ${this.props.id} permanently?`\n      )\n    ) {\n      api\n        .deleteProductById(this.props.id)\n        .then((res) => {\n          this.props.deleteHandler(res.data);\n        })\n        .catch((err) => console.log(err));\n      console.log(\"after res\");\n      // window.location.reload();\n    }\n  };\n\n  render() {\n    return <Delete onClick={this.deleteUser}>DELETE</Delete>;\n  }\n}\n\nexport default class ProductsList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      products: [],\n      images: [],\n      columns: [],\n      isLoading: this.props.loading,\n      imagePath: \"\",\n    };\n  }\n\n  componentDidMount = async () => {\n    this.setState({ isLoading: true });\n    try {\n      await api.getAllProducts().then((product) => {\n        this.setState({\n          products: product.data.data,\n        });\n        this.props.setLoading(false);\n      });\n      await api.getAllImages().then((image) => {\n        this.setState({\n          images: image.data.data,\n        });\n        this.props.setLoading(false);\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  searchHandler = (products) => {\n    this.setState({\n      products,\n    });\n  };\n  deleteHandler = (productId) => {\n    this.setState({\n      products: this.state.products.filter((product) => {\n        return product._id !== productId.data._id;\n      }),\n    });\n  };\n  render() {\n    const { products, images, isLoading } = this.state;\n    console.log(images);\n\n    return (\n      <Wrapper>\n        <h1>Market</h1>\n        <Search searchHandler={this.searchHandler} />\n        <Sort searchHandler={this.searchHandler} />\n        <CardLine\n          products={products}\n          images={images}\n          deleteHandler={this.deleteHandler}\n        />\n      </Wrapper>\n    );\n  }\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    // width: \"100%\",\n    // height: \"100%\",\n    flexWrap: \"wrap\",\n    justifyContent: \"space-around\",\n    overflow: \"hidden\",\n    direction: \"ltr\",\n  },\n  gridList: {\n    // height: \"100%\",\n    // width: \"100%\",\n    flexWrap: \"nowrap\",\n    // display: \"flex\",\n    // flexDirection: \"column\",\n    // alignItems: \"center\",\n    transform: \"translateZ(0)\",\n  },\n  tile: {\n    height: \"100%\",\n  },\n  title: {\n    color: theme.palette.primary.light,\n  },\n  titleBar: {\n    background:\n      \"linear-gradient(to top, rgba(0,0,0,0.7) 0%, rgba(0,0,0,0.3) 70%, rgba(0,0,0,0) 100%)\",\n  },\n}));\n\nfunction CardLine({ products, images, deleteHandler }) {\n  const history = useHistory();\n  const cardOnClickHandler = (e, id) => {\n    // history.push(`/product/${id}`);\n  };\n  const classes = useStyles();\n  const [isModelOpen, setIsModelOpen] = useState(false);\n\n  function productImages(product) {\n    let arr = [];\n    product[\"images\"].map((src) => {\n      let temp = images.find((element) => element[\"_id\"] === src);\n      return temp && arr.push(temp);\n    });\n    return arr;\n  }\n  return (\n    <div className={classes.root}>\n      <GridList className={classes.gridList} cols={2}>\n        {products &&\n          products.map((product, i) => (\n            <GridListTile\n              style={{ height: \"100%\", maxWidth: 300, minWidth: 100 }}\n              key={product[\"name\"]}\n            >\n              <PopUp\n                product={product}\n                isModelOpen={isModelOpen}\n                setIsModelOpen={setIsModelOpen}\n              />\n              <Card\n                style={{\n                  margin: \"1rem\",\n                  maxWidth: 300,\n                  minWidth: 100,\n                  height: \"fit-content\",\n                  border: \"1px solid #ececec\",\n                  borderRadius: \"15px\",\n                }}\n              >\n                {product[\"images\"] && images[0] && (\n                  // productImages(product).map((img) => {\n                  //   return (\n                  //     <CardMedia\n                  //       image={`data:${images[0][\"contentType\"]};base64,${images[0][\"imageBase64\"]}`}\n                  //       // image={`data:${img[\"contentType\"]};base64,${img[\"imageBase64\"]}`}\n                  //       title=\"Contemplative Reptile\"\n                  //       style={{ height: 140 }}\n                  //     />\n                  //   );\n                  // })\n                  // <CardMedia\n                  //   image={`data:${images[i % 5][\"contentType\"]};base64,${\n                  //     images[i % 5][\"imageBase64\"]\n                  //   }`}\n                  //   // image={`data:${img[\"contentType\"]};base64,${img[\"imageBase64\"]}`}\n                  //   title=\"Contemplative Reptile\"\n                  //   style={{ height: 140 }}\n                  // />\n                  <SingleLineGridList images={images} />\n                  // <SingleLineGridList images={productImages(product)} />\n                )}{\" \"}\n                <CardActionArea\n                  // onClick={(e) => cardOnClickHandler(e, product[\"_id\"])}\n                  onClick={() => setIsModelOpen(true)}\n                >\n                  <CardContent>\n                    <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                      <p>{product[\"name\"]}</p>\n                      <p>{product[\"price\"]}</p>\n                    </Typography>\n                    <Typography\n                      variant=\"body2\"\n                      color=\"textSecondary\"\n                      component=\"p\"\n                    >\n                      {/* <p>Seller:{product[\"ownerId\"]}</p> */}\n                      <p>Description:{product[\"description\"]}</p>\n                      <p>Condition:{product[\"condition\"]}</p>\n                      <p>Address:{product[\"address\"]}</p>\n                    </Typography>\n                  </CardContent>\n                </CardActionArea>\n                <CardActions style={{ justifyContent: \"center\" }}>\n                  <Button size=\"small\" color=\"primary\">\n                    <DeleteProduct\n                      id={product[\"_id\"]}\n                      deleteHandler={deleteHandler}\n                    />\n                  </Button>\n                  <Button size=\"small\" color=\"primary\">\n                    <StarBorderIcon />\n                  </Button>\n                  <Button size=\"small\" color=\"primary\">\n                    <UpdateProduct id={product[\"_id\"]} />\n                  </Button>\n                </CardActions>\n              </Card>\n            </GridListTile>\n          ))}\n      </GridList>\n    </div>\n  );\n}\n\nfunction SingleLineGridList({ images }) {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <Carousel>\n        {images.map((Image) => (\n          <Carousel.Item>\n            <img\n              className=\"d-block w-100\"\n              src={`data:${Image[\"contentType\"]};base64,${Image[\"imageBase64\"]}`}\n              alt={Image[\"fileName\"]}\n            />\n          </Carousel.Item>\n        ))}\n      </Carousel>\n    </div>\n  );\n}\n\n// function SingleLineGridList({ images }) {\n//   const classes = useStyles();\n\n//   return (\n//     <div className={classes.root}>\n//       {/* <GridList className={classes.gridList} cols={1}> */}\n//       <Carousel>\n//         {images.map((Image) => (\n//           <Carousel.Item>\n//             <img\n//               className=\"d-block w-100\"\n//               src={`data:${Image[\"contentType\"]};base64,${Image[\"imageBase64\"]}`}\n//               alt={Image[\"fileName\"]}\n//             />\n//           </Carousel.Item>\n\n//           // <GridListTile key={Image[\"_id\"].img}>\n//           //   <img\n//           //     src={`data:${Image[\"contentType\"]};base64,${Image[\"imageBase64\"]}`}\n//           //     alt={Image[\"fileName\"]}\n//           //   />\n//           //   {/* <GridListTileBar\n//           //     title={Image[\"fileName\"]}\n//           //     classes={{\n//           //       root: classes.titleBar,\n//           //       title: classes.title,\n//           //     }}\n//           //     actionIcon={\n//           //       <IconButton aria-label={`star ${Image[\"fileName\"]}`}>\n//           //         <StarBorderIcon className={classes.title} />\n//           //       </IconButton>\n//           //     }\n//           //   /> */}\n//           // </GridListTile>\n//         ))}\n//       </Carousel>\n//       {/* </GridList> */}\n//     </div>\n//   );\n// }\n","/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/Client/src/Layout.js",["168","169","170"],"import React, { useState, useContext } from \"react\";\nimport { BrowserRouter, Route, Switch, Link } from \"react-router-dom\";\nimport { useIntl } from \"react-intl\";\nimport SideBar from \"./Components/NavBar/SideBar\";\nimport MobileBar from \"./Components/NavBar/MobileBar\";\nimport LoadingOverlay from \"react-loading-overlay\";\nimport Icon from \"./Assets/Images/ReBuyLogoTrans.png\";\nimport Home from \"./Components/Pages/Home/Home\";\nimport Map from \"./Components/Pages/Map/Map\";\nimport Favorites from \"./Components/Pages/Favorites/Favorites\";\nimport MainSettings from \"./Components/Pages/Settings/MainSettings\";\nimport UserSettings from \"./Components/Pages/Settings/ProfileSettings\";\nimport Product from \"./Components/Pages/Home/Product\";\nimport ProductInsert from \"./Components/Pages/Home/Create\";\nimport ProductUpload from \"./Components/Pages/Home/Update\";\nimport { AuthContext } from \"./Components/SSO/Auth\";\nimport Registration from \"./Components/SSO/Registration\";\n\nexport default function Layout({ setLocale, setActive, isActive }) {\n  const intl = useIntl();\n  const [rtl, setRtl] = useState(true);\n  const [collapsed, setCollapsed] = useState(false);\n  const [image, setImage] = useState(false);\n  const [toggled, setToggled] = useState(true);\n  const [title, setTitle] = useState(\"ReBuy\");\n  const [notificationData, setnotificationData] = useState();\n  const count = notificationData ? notificationData.length : 0;\n  const [notificationCount, setNotificationCount] = useState(count);\n  const { currentUser } = useContext(AuthContext);\n\n  const handleCollapsedChange = (checked) => {\n    setCollapsed(checked);\n  };\n\n  const handleRtlChange = (checked) => {\n    setRtl(checked);\n    setLocale(checked ? \"he\" : \"en\");\n  };\n  const handleImageChange = (checked) => {\n    setImage(checked);\n  };\n\n  const handleToggleSidebar = () => {\n    setToggled(!toggled);\n  };\n  return (\n    <LoadingOverlay\n      active={isActive}\n      fadeSpeed={10000}\n      spinner={\n        <div\n          style={{\n            animation: \"spin 1.5s linear infinite\",\n          }}\n        >\n          <img src={Icon} alt={\"Icon\"} style={{ width: \"30%\" }} />\n        </div>\n      }\n      styles={{\n        wrapper: {},\n        overlay: (base) => ({\n          ...base,\n          backgroundColor: \"#f1f7fb\",\n          opacity: \"0.9\",\n          height: \"100%\",\n          position: \"fixed\",\n        }),\n      }}\n    >\n      {isActive || currentUser ? (\n        <BrowserRouter>\n          <Switch>\n            <div\n              className={`app ${rtl ? \"rtl\" : \"\"} ${toggled ? \"toggled\" : \"\"}`}\n            >\n              <div className=\"main-container\">\n                <div className=\"sideBar\">\n                  <SideBar\n                    image={image}\n                    collapsed={collapsed}\n                    rtl={rtl}\n                    toggled={toggled}\n                    handleToggleSidebar={handleToggleSidebar}\n                    handleCollapsedChange={handleCollapsedChange}\n                    handleRtlChange={handleRtlChange}\n                    handleImageChange={handleImageChange}\n                    notificationCount={notificationCount}\n                    setNotificationCount={setNotificationCount}\n                    setLoading={setActive}\n                    loading={isActive}\n                  />\n                </div>\n                <MobileBar\n                  handleToggleSidebar={handleToggleSidebar}\n                  notificationCount={notificationCount}\n                  setNotificationCount={setNotificationCount}\n                />\n                <div className={`mainPage ${toggled ? \"toggled\" : \"\"}`}>\n                  {/* {!isSignIn() ? (\n                  <Route exact path=\"/\">\n                    <Authentication />\n                  </Route>\n                ) : (\n                  <> */}\n                  <Route exact path=\"/\">\n                    <Home\n                      title={intl.formatMessage({ id: \"Home\" })}\n                      setTitle={setTitle}\n                      setActive={setActive}\n                    />\n                  </Route>\n                  <Route exact path=\"/Map\">\n                    <Map\n                      title={intl.formatMessage({ id: \"Map\" })}\n                      setTitle={setTitle}\n                      setActive={setActive}\n                    />\n                  </Route>\n                  <Route exact path=\"/Upload\">\n                    <ProductInsert\n                      title={intl.formatMessage({ id: \"Upload\" })}\n                      setTitle={setTitle}\n                      setActive={setActive}\n                    />\n                  </Route>\n                  <Route path=\"/Update/:id\">\n                    <ProductUpload\n                      title={intl.formatMessage({ id: \"Update\" })}\n                      setTitle={setTitle}\n                      setActive={setActive}\n                    />\n                  </Route>\n                  <Route path=\"/Product/:id\">\n                    <Product\n                      title={intl.formatMessage({ id: \"Product\" })}\n                      setTitle={setTitle}\n                      setActive={setActive}\n                    />\n                  </Route>\n                  <Route exact path=\"/Favorites\">\n                    <Favorites\n                      title={intl.formatMessage({ id: \"Favorites\" })}\n                      setTitle={setTitle}\n                      setActive={setActive}\n                    />\n                  </Route>\n                  <Route exact path=\"/settings/userSettings\">\n                    <UserSettings\n                      title={intl.formatMessage({ id: \"profile\" })}\n                      setTitle={setTitle}\n                    />\n                  </Route>\n                  <Route exact path=\"/settings/mainSettings\">\n                    <MainSettings\n                      title={intl.formatMessage({ id: \"settings\" })}\n                      setTitle={setTitle}\n                    />\n                  </Route>\n                  {/* </>\n                )} */}\n                </div>\n              </div>\n            </div>\n          </Switch>\n        </BrowserRouter>\n      ) : (\n        <div className={`app ${rtl ? \"rtl\" : \"\"} ${toggled ? \"toggled\" : \"\"}`}>\n          <div className=\"main-container\">\n            <div className={`mainPage ${toggled ? \"toggled\" : \"\"}`}>\n              <Registration />\n            </div>\n          </div>\n        </div>\n      )}\n\n      {setActive(false)}\n    </LoadingOverlay>\n  );\n}\n","/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/Client/src/Components/Pages/Settings/MainSettings.js",["171","172","173"],"import React, { useEffect, useState } from \"react\";\nimport { Card } from \"react-bootstrap\";\n\nexport default function Settings({ title, setTitle }) {\n  const [place, setPlace] = useState(\"\");\n\n  const Wrap = () => (\n    <Card className=\"settings\">\n      {/* <Card.Header>\n        <Card.Subtitle style={{ textAlign: \"center\" }}>\n          <Card.Title style={{ fontSize: \"40px\" }}>הגדרות כלליות </Card.Title>\n          <Button\n            size=\"md\"\n            variant=\"flat\"\n            onClick={() => setPage(\"ClinicalSettings\")}\n          >\n            מטפלים\n          </Button>{\" \"}\n          {\" | \"}\n          <Button\n            size=\"md\"\n            variant=\"flat\"\n            onClick={() => setPage(\"InsuranceSettings\")}\n          >\n            ביטוח\n          </Button>{\" \"}\n          {\" | \"}\n          <Button\n            size=\"md\"\n            variant=\"flat\"\n            onClick={() => setPage(\"FamilySettings\")}\n          >\n            אנשי קשר\n          </Button>{\" \"}\n          {\" | \"}\n          <Button\n            size=\"md\"\n            variant=\"flat\"\n            onClick={() => setPage(\"PaymentSettings\")}\n          >\n            תשלום\n          </Button>{\" \"}\n        </Card.Subtitle>\n      </Card.Header>\n\n      <Card.Body>\n        <HandleActive loc={place} />\n      </Card.Body>\n      <style type=\"text/css\">\n        {`\n    .btn-flat {\n      padding:0px;\n\t  background-color: #9dccf1;\n\t  opacity:0.9;\n      color: #3764fd;\n    }\n    `}\n      </style> */}\n    </Card>\n  );\n\n  return <Wrap />;\n}\n",["174","175"],"/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/Client/src/Components/Pages/Home/Search.js",[],"/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/Client/src/Components/Pages/Home/Home.js",[],"/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/Client/src/Components/Utils/PopUp.js",["176","177","178","179"],"/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/Client/src/Components/Pages/Home/Update.js",["180"],"/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/Client/src/Components/SSO/LogIn.js",["181"],"import React, { useContext } from \"react\";\nimport { Form, Col, Row, Button } from \"react-bootstrap\";\nimport { Redirect } from \"react-router-dom\";\nimport {\n  FacebookLoginButton,\n  GoogleLoginButton,\n} from \"react-social-login-buttons\";\nimport { AuthContext } from \"./Auth\";\nimport firebaseConfig from \"./Config.js\";\n\nexport default function LogIn() {\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const { email, password } = e.target.elements;\n    try {\n      firebaseConfig\n        .auth()\n        .signInWithEmailAndPassword(email.value, password.value);\n    } catch (error) {\n      alert(error);\n    }\n  };\n  function GoogleLogin() {\n    alert(\"google login\");\n    var googleAuthProvider = new firebaseConfig.auth.GoogleAuthProvider();\n    // firebase.auth().signInWithPopup(googleAuthProvider);\n    firebaseConfig\n      .auth()\n      .signInWithPopup(googleAuthProvider)\n      .then((result) => {\n        /** @type {firebase.auth.OAuthCredential} */\n        var credential = result.credential;\n        var token = credential.accessToken;\n        var user = result.user;\n        console.log(user);\n      })\n      .catch((error) => {\n        var errorCode = error.code;\n        var errorMessage = error.message;\n        var email = error.email;\n        var credential = error.credential;\n        console.log(errorCode, errorMessage, email, credential);\n      });\n  }\n  const { currentUser } = useContext(AuthContext);\n  if (currentUser) {\n    return <Redirect to=\"/\" />;\n  }\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Form.Label as=\"h1\">Log In</Form.Label>\n      <Form.Group as={Row} controlId=\"formPlaintextEmail\">\n        <Form.Label column sm=\"2\">\n          Email\n        </Form.Label>\n        <Col sm=\"12\">\n          <Form.Control type=\"email\" name=\"email\" placeholder=\"Email\" />\n        </Col>\n      </Form.Group>\n      <Form.Group as={Row} controlId=\"formPlaintextPassword\">\n        <Form.Label column sm=\"3\">\n          Password\n        </Form.Label>\n        <Col sm=\"12\">\n          <Form.Control\n            type=\"password\"\n            name=\"password\"\n            placeholder=\"Password\"\n          />\n        </Col>\n      </Form.Group>\n      <Form.Group as={Row}>\n        <FacebookLoginButton />\n      </Form.Group>\n      <Form.Group as={Row}>\n        <GoogleLoginButton onClick={() => GoogleLogin} />\n      </Form.Group>\n      <Form.Group controlId=\"formBasicCheckbox\">\n        <Form.Check type=\"checkbox\" label=\"Remember Me\" />\n      </Form.Group>\n      <Button variant=\"primary\" type=\"submit\" size=\"lg\">\n        Login\n      </Button>\n    </Form>\n  );\n}\n",{"ruleId":"182","severity":1,"message":"183","line":10,"column":7,"nodeType":"184","messageId":"185","endLine":10,"endColumn":13},{"ruleId":"186","replacedBy":"187"},{"ruleId":"188","replacedBy":"189"},{"ruleId":"186","replacedBy":"190"},{"ruleId":"188","replacedBy":"191"},{"ruleId":"182","severity":1,"message":"192","line":10,"column":9,"nodeType":"184","messageId":"185","endLine":10,"endColumn":15},{"ruleId":"193","severity":1,"message":"194","line":59,"column":13,"nodeType":"195","endLine":62,"endColumn":15},{"ruleId":"186","replacedBy":"196"},{"ruleId":"188","replacedBy":"197"},{"ruleId":"182","severity":1,"message":"198","line":6,"column":19,"nodeType":"184","messageId":"185","endLine":6,"endColumn":29},{"ruleId":"182","severity":1,"message":"199","line":1,"column":17,"nodeType":"184","messageId":"185","endLine":1,"endColumn":25},{"ruleId":"182","severity":1,"message":"200","line":2,"column":10,"nodeType":"184","messageId":"185","endLine":2,"endColumn":17},{"ruleId":"182","severity":1,"message":"201","line":3,"column":8,"nodeType":"184","messageId":"185","endLine":3,"endColumn":18},{"ruleId":"182","severity":1,"message":"202","line":4,"column":10,"nodeType":"184","messageId":"185","endLine":4,"endColumn":14},{"ruleId":"182","severity":1,"message":"203","line":4,"column":22,"nodeType":"184","messageId":"185","endLine":4,"endColumn":30},{"ruleId":"182","severity":1,"message":"204","line":5,"column":10,"nodeType":"184","messageId":"185","endLine":5,"endColumn":21},{"ruleId":"182","severity":1,"message":"205","line":5,"column":19,"nodeType":"184","messageId":"185","endLine":5,"endColumn":27},{"ruleId":"182","severity":1,"message":"200","line":2,"column":10,"nodeType":"184","messageId":"185","endLine":2,"endColumn":17},{"ruleId":"182","severity":1,"message":"206","line":15,"column":12,"nodeType":"184","messageId":"185","endLine":15,"endColumn":25},{"ruleId":"182","severity":1,"message":"199","line":1,"column":17,"nodeType":"184","messageId":"185","endLine":1,"endColumn":25},{"ruleId":"182","severity":1,"message":"202","line":2,"column":10,"nodeType":"184","messageId":"185","endLine":2,"endColumn":14},{"ruleId":"182","severity":1,"message":"207","line":11,"column":3,"nodeType":"184","messageId":"185","endLine":11,"endColumn":10},{"ruleId":"182","severity":1,"message":"208","line":16,"column":8,"nodeType":"184","messageId":"185","endLine":16,"endColumn":16},{"ruleId":"182","severity":1,"message":"199","line":1,"column":29,"nodeType":"184","messageId":"185","endLine":1,"endColumn":37},{"ruleId":"182","severity":1,"message":"209","line":159,"column":7,"nodeType":"184","messageId":"185","endLine":159,"endColumn":13},{"ruleId":"186","replacedBy":"210"},{"ruleId":"188","replacedBy":"211"},{"ruleId":"182","severity":1,"message":"212","line":64,"column":14,"nodeType":"184","messageId":"185","endLine":64,"endColumn":19},{"ruleId":"182","severity":1,"message":"213","line":2,"column":10,"nodeType":"184","messageId":"185","endLine":2,"endColumn":22},{"ruleId":"182","severity":1,"message":"214","line":2,"column":24,"nodeType":"184","messageId":"185","endLine":2,"endColumn":29},{"ruleId":"193","severity":1,"message":"194","line":18,"column":7,"nodeType":"195","endLine":18,"endColumn":70},{"ruleId":"182","severity":1,"message":"215","line":7,"column":8,"nodeType":"184","messageId":"185","endLine":7,"endColumn":18},{"ruleId":"182","severity":1,"message":"216","line":10,"column":10,"nodeType":"184","messageId":"185","endLine":10,"endColumn":14},{"ruleId":"182","severity":1,"message":"217","line":17,"column":3,"nodeType":"184","messageId":"185","endLine":17,"endColumn":12},{"ruleId":"182","severity":1,"message":"218","line":22,"column":3,"nodeType":"184","messageId":"185","endLine":22,"endColumn":18},{"ruleId":"219","severity":1,"message":"220","line":53,"column":3,"nodeType":"221","messageId":"222","endLine":55,"endColumn":4},{"ruleId":"182","severity":1,"message":"223","line":124,"column":31,"nodeType":"184","messageId":"185","endLine":124,"endColumn":40},{"ruleId":"182","severity":1,"message":"224","line":174,"column":9,"nodeType":"184","messageId":"185","endLine":174,"endColumn":16},{"ruleId":"182","severity":1,"message":"225","line":175,"column":9,"nodeType":"184","messageId":"185","endLine":175,"endColumn":27},{"ruleId":"182","severity":1,"message":"206","line":181,"column":12,"nodeType":"184","messageId":"185","endLine":181,"endColumn":25},{"ruleId":"182","severity":1,"message":"216","line":2,"column":40,"nodeType":"184","messageId":"185","endLine":2,"endColumn":44},{"ruleId":"182","severity":1,"message":"226","line":25,"column":10,"nodeType":"184","messageId":"185","endLine":25,"endColumn":15},{"ruleId":"182","severity":1,"message":"227","line":26,"column":28,"nodeType":"184","messageId":"185","endLine":26,"endColumn":47},{"ruleId":"182","severity":1,"message":"228","line":1,"column":17,"nodeType":"184","messageId":"185","endLine":1,"endColumn":26},{"ruleId":"182","severity":1,"message":"229","line":5,"column":10,"nodeType":"184","messageId":"185","endLine":5,"endColumn":15},{"ruleId":"182","severity":1,"message":"230","line":5,"column":17,"nodeType":"184","messageId":"185","endLine":5,"endColumn":25},{"ruleId":"186","replacedBy":"231"},{"ruleId":"188","replacedBy":"232"},{"ruleId":"182","severity":1,"message":"199","line":1,"column":17,"nodeType":"184","messageId":"185","endLine":1,"endColumn":25},{"ruleId":"182","severity":1,"message":"233","line":8,"column":3,"nodeType":"184","messageId":"185","endLine":8,"endColumn":9},{"ruleId":"182","severity":1,"message":"234","line":12,"column":10,"nodeType":"184","messageId":"185","endLine":12,"endColumn":22},{"ruleId":"182","severity":1,"message":"235","line":15,"column":7,"nodeType":"184","messageId":"185","endLine":15,"endColumn":10},{"ruleId":"182","severity":1,"message":"209","line":145,"column":7,"nodeType":"184","messageId":"185","endLine":145,"endColumn":13},{"ruleId":"182","severity":1,"message":"236","line":33,"column":13,"nodeType":"184","messageId":"185","endLine":33,"endColumn":18},"no-unused-vars","'socket' is assigned a value but never used.","Identifier","unusedVar","no-native-reassign",["237"],"no-negated-in-lhs",["238"],["237"],["238"],"'varRed' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["237"],["238"],"'setLoading' is assigned a value but never used.","'useState' is defined but never used.","'useIntl' is defined but never used.","'MediaQuery' is defined but never used.","'Form' is defined but never used.","'Dropdown' is defined but never used.","'FaPencilAlt' is defined but never used.","'Redirect' is defined but never used.","'productImages' is defined but never used.","'SubMenu' is defined but never used.","'Category' is defined but never used.","'images' is assigned a value but never used.",["237"],["238"],"'first' is assigned a value but never used.","'IoLogoBuffer' is defined but never used.","'IoAdd' is defined but never used.","'IconButton' is defined but never used.","'Link' is defined but never used.","'CardMedia' is defined but never used.","'GridListTileBar' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'isLoading' is assigned a value but never used.","'history' is assigned a value but never used.","'cardOnClickHandler' is assigned a value but never used.","'title' is assigned a value but never used.","'setnotificationData' is assigned a value but never used.","'useEffect' is defined but never used.","'place' is assigned a value but never used.","'setPlace' is assigned a value but never used.",["237"],["238"],"'Button' is defined but never used.","'IoPinOutline' is defined but never used.","'img' is assigned a value but never used.","'token' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]