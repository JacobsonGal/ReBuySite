[{"/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/Client/src/Layout.js":"1","/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/Client/src/Components/SSO/Config.js":"2","/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/Client/src/Components/NavBar/SideBar.js":"3","/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/Client/src/Components/Pages/Home/Home.js":"4","/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/Client/src/Components/Pages/Settings/MainSettings.js":"5","/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/Client/src/Components/SSO/LogIn.js":"6","/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/Client/src/Components/NavBar/TopBar.js":"7","/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/Client/src/Components/NavBar/User.js":"8","/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/Client/src/Components/Utils/Page.js":"9","/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/Client/src/API/API.js":"10","/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/Client/src/Components/Utils/PopUp.js":"11","/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/Client/src/Components/Pages/Map/Marker.js":"12","/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/Client/src/Components/NavBar/MobileBar.js":"13","/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/Client/src/Components/Pages/Home/Groupby.js":"14","/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/Client/src/Components/Utils/PageBody.js":"15","/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/Client/src/Components/Pages/Map/GoogleMap.js":"16","/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/Client/src/Components/Pages/Home/Products.js":"17","/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/Client/src/Components/Pages/Home/Search.js":"18","/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/Client/src/Components/Pages/Home/Sort.js":"19","/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/Client/src/Components/Pages/Map/Map.js":"20","/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/Client/src/Components/SSO/SignUp.js":"21","/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/Client/src/Components/Pages/Home/Create.js":"22"},{"size":5978,"mtime":1618332470060,"results":"23","hashOfConfig":"24"},{"size":506,"mtime":1616345228879,"results":"25","hashOfConfig":"24"},{"size":3718,"mtime":1618312302311,"results":"26","hashOfConfig":"24"},{"size":514,"mtime":1618570035668,"results":"27","hashOfConfig":"24"},{"size":1545,"mtime":1616017500271,"results":"28","hashOfConfig":"24"},{"size":2604,"mtime":1618587526287,"results":"29","hashOfConfig":"24"},{"size":1896,"mtime":1618322520669,"results":"30","hashOfConfig":"24"},{"size":3178,"mtime":1618591778201,"results":"31","hashOfConfig":"24"},{"size":1372,"mtime":1616017738941,"results":"32","hashOfConfig":"24"},{"size":1839,"mtime":1618570035666,"results":"33","hashOfConfig":"24"},{"size":5816,"mtime":1618581091734,"results":"34","hashOfConfig":"24"},{"size":1493,"mtime":1618581076810,"results":"35","hashOfConfig":"24"},{"size":2146,"mtime":1618322520668,"results":"36","hashOfConfig":"24"},{"size":2267,"mtime":1618575087502,"results":"37","hashOfConfig":"24"},{"size":1162,"mtime":1616017500273,"results":"38","hashOfConfig":"24"},{"size":4492,"mtime":1618581068817,"results":"39","hashOfConfig":"24"},{"size":9566,"mtime":1618580993229,"results":"40","hashOfConfig":"24"},{"size":3225,"mtime":1618574475890,"results":"41","hashOfConfig":"24"},{"size":481,"mtime":1618574086824,"results":"42","hashOfConfig":"24"},{"size":532,"mtime":1618577622565,"results":"43","hashOfConfig":"24"},{"size":3701,"mtime":1618590105379,"results":"44","hashOfConfig":"24"},{"size":7493,"mtime":1618589522938,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"49"},"kn6s5o",{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"55"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"55"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"49"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"49"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/Client/src/Layout.js",["99","100","101"],"import React, { useState, useContext } from \"react\";\nimport { BrowserRouter, Route, Switch, Link } from \"react-router-dom\";\nimport { useIntl } from \"react-intl\";\nimport SideBar from \"./Components/NavBar/SideBar\";\nimport MobileBar from \"./Components/NavBar/MobileBar\";\nimport LoadingOverlay from \"react-loading-overlay\";\nimport Icon from \"./Assets/Images/ReBuyLogoTrans.png\";\nimport Home from \"./Components/Pages/Home/Home\";\nimport Map from \"./Components/Pages/Map/Map\";\nimport Favorites from \"./Components/Pages/Favorites/Favorites\";\nimport MainSettings from \"./Components/Pages/Settings/MainSettings\";\nimport UserSettings from \"./Components/Pages/Settings/ProfileSettings\";\nimport ProductInsert from \"./Components/Pages/Home/Create\";\nimport ProductUpload from \"./Components/Pages/Home/Update\";\nimport { AuthContext } from \"./Components/SSO/Auth\";\nimport Registration from \"./Components/SSO/Registration\";\n\nexport default function Layout({ setLocale, setActive, isActive }) {\n  const intl = useIntl();\n  const [rtl, setRtl] = useState(true);\n  const [collapsed, setCollapsed] = useState(false);\n  const [image, setImage] = useState(false);\n  const [toggled, setToggled] = useState(true);\n  const [title, setTitle] = useState(\"ReBuy\");\n  const [notificationData, setnotificationData] = useState();\n  const count = notificationData ? notificationData.length : 0;\n  const [notificationCount, setNotificationCount] = useState(count);\n  const { currentUser } = useContext(AuthContext);\n\n  const handleCollapsedChange = (checked) => {\n    setCollapsed(checked);\n  };\n\n  const handleRtlChange = (checked) => {\n    setRtl(checked);\n    setLocale(checked ? \"he\" : \"en\");\n  };\n  const handleImageChange = (checked) => {\n    setImage(checked);\n  };\n\n  const handleToggleSidebar = () => {\n    setToggled(!toggled);\n  };\n  return (\n    <LoadingOverlay\n      active={isActive}\n      fadeSpeed={10000}\n      spinner={\n        <div\n          style={{\n            animation: \"spin 1.5s linear infinite\",\n          }}\n        >\n          <img src={Icon} alt={\"Icon\"} style={{ width: \"30%\" }} />\n        </div>\n      }\n      styles={{\n        wrapper: {},\n        overlay: (base) => ({\n          ...base,\n          backgroundColor: \"#f1f7fb\",\n          opacity: \"0.9\",\n          height: \"100%\",\n          position: \"fixed\",\n        }),\n      }}\n    >\n      {isActive || currentUser ? (\n        <BrowserRouter>\n          <Switch>\n            <div\n              className={`app ${rtl ? \"rtl\" : \"\"} ${toggled ? \"toggled\" : \"\"}`}\n            >\n              <div className=\"main-container\">\n                <div className=\"sideBar\">\n                  <SideBar\n                    image={image}\n                    collapsed={collapsed}\n                    rtl={rtl}\n                    toggled={toggled}\n                    handleToggleSidebar={handleToggleSidebar}\n                    handleCollapsedChange={handleCollapsedChange}\n                    handleRtlChange={handleRtlChange}\n                    handleImageChange={handleImageChange}\n                    notificationCount={notificationCount}\n                    setNotificationCount={setNotificationCount}\n                    setLoading={setActive}\n                    loading={isActive}\n                  />\n                </div>\n                <MobileBar\n                  handleToggleSidebar={handleToggleSidebar}\n                  notificationCount={notificationCount}\n                  setNotificationCount={setNotificationCount}\n                />\n                <div className={`mainPage ${toggled ? \"toggled\" : \"\"}`}>\n                  <Route exact path=\"/\">\n                    <Home\n                      title={intl.formatMessage({ id: \"Home\" })}\n                      setTitle={setTitle}\n                      setActive={setActive}\n                    />\n                  </Route>\n                  <Route exact path=\"/Map\">\n                    <Map\n                      title={intl.formatMessage({ id: \"Map\" })}\n                      setTitle={setTitle}\n                      setActive={setActive}\n                    />\n                  </Route>\n                  <Route exact path=\"/Upload\">\n                    <ProductInsert\n                      title={intl.formatMessage({ id: \"Upload\" })}\n                      setTitle={setTitle}\n                      setActive={setActive}\n                    />\n                  </Route>\n                  <Route path=\"/Update/:id\">\n                    <ProductUpload\n                      title={intl.formatMessage({ id: \"Update\" })}\n                      setTitle={setTitle}\n                      setActive={setActive}\n                    />\n                  </Route>\n                  <Route exact path=\"/Favorites\">\n                    <Favorites\n                      title={intl.formatMessage({ id: \"Favorites\" })}\n                      setTitle={setTitle}\n                      setActive={setActive}\n                    />\n                  </Route>\n                  <Route exact path=\"/settings/userSettings\">\n                    <UserSettings\n                      title={intl.formatMessage({ id: \"profile\" })}\n                      setTitle={setTitle}\n                    />\n                  </Route>\n                  <Route exact path=\"/settings/mainSettings\">\n                    <MainSettings\n                      title={intl.formatMessage({ id: \"settings\" })}\n                      setTitle={setTitle}\n                    />\n                  </Route>\n                  {/* </>\n                )} */}\n                </div>\n              </div>\n            </div>\n          </Switch>\n        </BrowserRouter>\n      ) : (\n        <div className={`app ${rtl ? \"rtl\" : \"\"} ${toggled ? \"toggled\" : \"\"}`}>\n          <div className=\"main-container\">\n            <div className={`mainPage ${toggled ? \"toggled\" : \"\"}`}>\n              <Registration />\n            </div>\n          </div>\n        </div>\n      )}\n\n      {setActive(false)}\n    </LoadingOverlay>\n  );\n}\n",["102","103"],"/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/Client/src/Components/SSO/Config.js",[],"/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/Client/src/Components/NavBar/SideBar.js",["104","105","106"],"import React from \"react\";\nimport { useIntl } from \"react-intl\";\nimport { NavLink } from \"react-router-dom\";\nimport {\n  ProSidebar,\n  Menu,\n  MenuItem,\n  SidebarHeader,\n  SidebarFooter,\n  SidebarContent,\n  SubMenu,\n} from \"react-pro-sidebar\";\nimport logo from \"../../Assets/ReBuy.jpeg\";\nimport Home from \"@material-ui/icons/HomeRounded\";\nimport Map from \"@material-ui/icons/MapRounded\";\nimport Category from \"@material-ui/icons/CategoryRounded\";\nimport Star from \"@material-ui/icons/StarRounded\";\nimport Upload from \"@material-ui/icons/ArrowUpwardRounded\";\nimport Instagram from \"@material-ui/icons/Instagram\";\nimport Facebook from \"@material-ui/icons/Facebook\";\nimport TopBar from \"./TopBar\";\nimport User from \"./User\";\n\nexport default function SideBar({\n  image,\n  collapsed,\n  rtl,\n  toggled,\n  email,\n  handleToggleSidebar,\n  handleCollapsedChange,\n  handleRtlChange,\n  handleImageChange,\n  setSeen,\n  notificationCount,\n  setNotificationCount,\n  setLoading,\n}) {\n  const intl = useIntl();\n  return (\n    <div className=\"sideBar\">\n      <ProSidebar\n        // image={image ? sidebarBg : false}\n        rtl={rtl}\n        collapsed={collapsed}\n        toggled={toggled}\n        breakPoint=\"md\"\n        onToggle={handleToggleSidebar}\n      >\n        <SidebarHeader>\n          <TopBar\n            toggled={toggled}\n            handleToggleSidebar={handleToggleSidebar}\n            notificationCount={notificationCount}\n            setNotificationCount={setNotificationCount}\n            main={false}\n          />\n        </SidebarHeader>\n        <SidebarContent>\n          <Menu iconShape=\"circle\">\n            <MenuItem icon={<Home />}>\n              <NavLink to=\"/\" onClick={handleToggleSidebar}>\n                {intl.formatMessage({ id: \"Home\" })}\n              </NavLink>\n            </MenuItem>\n            <MenuItem icon={<Map />}>\n              <NavLink to=\"/Map\" onClick={handleToggleSidebar}>\n                {intl.formatMessage({ id: \"Map\" })}\n              </NavLink>\n            </MenuItem>\n            <MenuItem icon={<Upload />}>\n              <NavLink to=\"/Upload\" onClick={handleToggleSidebar}>\n                {intl.formatMessage({ id: \"Upload\" })}\n              </NavLink>\n            </MenuItem>\n            {/* <MenuItem icon={<Star />}>\n              <NavLink to=\"/Favorites\" onClick={handleToggleSidebar}>\n                {intl.formatMessage({ id: \"Favorites\" })}\n              </NavLink>\n            </MenuItem> */}\n            {/* <SubMenu\n              title={intl.formatMessage({ id: \"Catagories\" })}\n              icon={<Category />}\n            >\n              <MenuItem>Clothes</MenuItem>\n              <MenuItem>Tech</MenuItem>\n              <MenuItem>Music</MenuItem>\n              <MenuItem>Gadgets</MenuItem>\n            </SubMenu> */}\n          </Menu>\n\n          <User handleToggleSidebar={handleToggleSidebar} />\n        </SidebarContent>\n        <SidebarFooter className=\"sideBarFooter\">\n          <div className=\"sidebar-btn-wrapper\">\n            <a\n              iconShape=\"circle\"\n              href=\"https://www.facebook.com/ReBuyPlatform\"\n              className=\"sidebar-btn\"\n            >\n              <span>\n                {\"    ReBuy \"} {new Date().getFullYear()}\n                {\"  \"}\n                <img\n                  src={logo}\n                  alt=\"Logo\"\n                  style={{\n                    width: \"1.5rem\",\n                    height: \"1.5rem\",\n                    filter: \"grayscale(100%)\",\n                    opacity: \"0.9\",\n                  }}\n                />\n                <Facebook />\n                <Instagram />\n              </span>\n            </a>\n          </div>\n        </SidebarFooter>\n      </ProSidebar>\n    </div>\n  );\n}\n",["107","108"],"/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/Client/src/Components/Pages/Home/Home.js",[],"/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/Client/src/Components/Pages/Settings/MainSettings.js",["109","110","111"],"/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/Client/src/Components/SSO/LogIn.js",["112","113"],"/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/Client/src/Components/NavBar/TopBar.js",["114","115"],"/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/Client/src/Components/NavBar/User.js",["116"],"/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/Client/src/Components/Utils/Page.js",["117"],"import React from \"react\";\nimport { useIntl } from \"react-intl\";\nimport PageBody from \"./PageBody\";\nimport LoadingOverlay from \"react-loading-overlay\";\nimport icon from \"../../Assets/Images/ReBuyLogoTrans.png\";\n\nexport default function Page({\n  onlyTop,\n  data,\n  title,\n  setTitle,\n  color,\n  boldPar,\n  par,\n  pic,\n  to,\n  button,\n  children,\n  loading,\n  setEdit,\n  edit,\n  share,\n  setShare,\n  dots,\n  editdisabled,\n  add,\n  FAB,\n  print,\n  setPrint,\n  printArr,\n  setPrintArr,\n  dataArr,\n  main,\n  shareRecord,\n  type,\n}) {\n  document.title = \"ReBuy | \" + title;\n  setTitle(title);\n  function Body() {\n    return children ? (\n      children\n    ) : !loading ? (\n      <PageBody\n        data={data}\n        color={color}\n        boldPar={boldPar}\n        par={par}\n        pic={pic}\n        to={to}\n        button={button}\n      />\n    ) : null;\n  }\n\n  return (\n    <div>\n      <LoadingOverlay\n        active={loading}\n        spinner={<img src={icon} className=\"pageLoader\" alt=\"loader\" />}\n        styles={{\n          wrapper: {},\n          overlay: (base) => ({\n            ...base,\n            height: \"110%\",\n            backgroundColor: \"#f5f7fb\",\n            opacity: \"0.7\",\n          }),\n        }}\n      >\n        {!loading ? (\n          <div className=\"page\">\n            <Body />\n          </div>\n        ) : null}\n      </LoadingOverlay>\n    </div>\n  );\n}\n","/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/Client/src/API/API.js",[],"/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/Client/src/Components/Utils/PopUp.js",["118","119","120","121"],"/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/Client/src/Components/Pages/Map/Marker.js",["122","123","124","125","126","127","128"],"/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/Client/src/Components/NavBar/MobileBar.js",["129"],"import { Link } from \"react-router-dom\";\nimport Icon from \"../../Assets/Images/ReBuyLogoTrans.png\";\n\nexport default function MobileBar({\n  handleToggleSidebar,\n  notificationCount,\n  setNotificationCount,\n}) {\n  function notificationHandle() {\n    if (notificationCount > 0)\n      return (\n        <span\n          class=\"notification-count\"\n          style={{\n            backgroundColor: \"red\",\n            borderRadius: \"500px\",\n            padding: \"2px 4px\",\n            fontSize: \"10px\",\n            fontWeight: \"700\",\n            lineHeight: \"100%\",\n            right: \"-15px\",\n            top: \"5px\",\n          }}\n        >\n          {notificationCount}\n        </span>\n      );\n  }\n\n  return (\n    <div className=\"toggledBar\">\n      <table width=\"100%\">\n        <tr width=\"100%\">\n          <td width=\"10%\">\n            <div className=\"btn-toggle\" onClick={handleToggleSidebar}>\n              <div class=\"wrapper-menu\">\n                <div class=\"line-menu half start\" />\n                <div class=\"line-menu\" />\n                <div class=\"line-menu half end\" />\n              </div>\n            </div>\n          </td>\n          <td width=\"80%\">\n            <Link to=\"/\">\n              <div className=\"logodiv\">\n                <img className=\"yavologo\" src={Icon} alt=\"logo\" />\n              </div>\n            </Link>\n          </td>\n          <td width=\"10%\">\n            {/* <Link to=\"/notification\">\n              <div class=\"notification notify\">\n                {notificationHandle}\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  width=\"25\"\n                  height=\"25\"\n                  viewBox=\"0 0 24 24\"\n                  fill=\"none\"\n                  stroke=\"#ADAFDE\"\n                  stroke-width=\"2\"\n                  stroke-linecap=\"round\"\n                  stroke-linejoin=\"round\"\n                >\n                  <path d=\"M18 8A6 6 0 0 0 6 8c0 7-3 9-3 9h18s-3-2-3-9\"></path>\n                  <path d=\"M13.73 21a2 2 0 0 1-3.46 0\"></path>\n                </svg>\n              </div>\n            </Link> */}\n          </td>\n        </tr>\n      </table>\n    </div>\n  );\n}\n","/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/Client/src/Components/Pages/Home/Groupby.js",["130","131","132","133","134","135","136","137","138"],"/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/Client/src/Components/Utils/PageBody.js",["139","140","141"],"import React from \"react\";\nimport { IoLogoBuffer, IoAdd } from \"react-icons/io5\";\nimport { Button } from \"@material-ui/core\";\nimport { Link } from \"react-router-dom\";\n\nexport default function PageBody({ color, boldPar, par, pic, to, button }) {\n  return (\n    <div\n      style={{\n        textAlign: \"center\",\n        margin: \"2rem\",\n        height: \"90%\",\n        borderRadius: \"50px\",\n        backgroundColor: color,\n        color: \"gray\",\n      }}\n    >\n      <img src={pic} style={{ marginTop: \"40px\", height: \"50px\" }} />\n      <p style={{ margin: \"2rem\" }}>\n        <b style={{ display: \"block\" }}>{boldPar}</b> {par}\n      </p>\n      <Link to={to}>\n        <Button\n          style={{\n            textAlign: \"center\",\n            margin: \"1rem\",\n            padding: \"1rem\",\n            height: \"90%\",\n            textOverflow: \"ellipsis\",\n            whiteSpace: \"nowrap\",\n            width: \"auto\",\n            background: \"#343798\",\n            color: \"white\",\n            borderRadius: \"66px 66px 66px 66px\",\n            boxShadow: \"0px 0px 10px 0px\",\n          }}\n        >\n          <h5>{button}</h5>\n        </Button>\n      </Link>\n    </div>\n  );\n}\n","/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/Client/src/Components/Pages/Map/GoogleMap.js",["142"],"/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/Client/src/Components/Pages/Home/Products.js",["143","144","145","146","147","148","149"],"import React, { Component, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport api from \"../../../API/API\";\nimport styled from \"styled-components\";\nimport \"react-table/index\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Search from \"./Search\";\nimport Groupby from \"./Groupby\";\nimport Sort from \"./Sort\";\nimport { Link } from \"react-router-dom\";\nimport StarBorderIcon from \"@material-ui/icons/StarBorder\";\nimport {\n  Card,\n  CardContent,\n  CardActionArea,\n  CardActions,\n  CardMedia,\n  Typography,\n  Button,\n  GridList,\n  GridListTile,\n  GridListTileBar,\n} from \"@material-ui/core\";\nimport Carousel from \"react-bootstrap/Carousel\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport PopUp from \"../../Utils/PopUp\";\n\nconst Wrapper = styled.div`\n  padding: 0 40px 40px 40px;\n`;\n\nconst Update = styled.div`\n  color: #ef9b0f;\n  cursor: pointer;\n`;\n\nconst Delete = styled.div`\n  color: #ff0000;\n  cursor: pointer;\n`;\n\nfunction UpdateProduct({ id }) {\n  const history = useHistory();\n\n  const updateUser = (event) => {\n    event.preventDefault();\n    history.push(`/Update/${id}`);\n  };\n  return <Update onClick={updateUser}>Update</Update>;\n}\n\nclass DeleteProduct extends Component {\n  constructor() {\n    super();\n  }\n  deleteUser = (event) => {\n    event.preventDefault();\n\n    if (\n      window.confirm(\n        `Do tou want to delete the product ${this.props.id} permanently?`\n      )\n    ) {\n      api\n        .deleteProductById(this.props.id)\n        .then((res) => {\n          this.props.deleteHandler(res.data);\n        })\n        .catch((err) => console.log(err));\n      console.log(\"after res\");\n      // window.location.reload();\n    }\n  };\n\n  render() {\n    return <Delete onClick={this.deleteUser}>DELETE</Delete>;\n  }\n}\n\nexport default class ProductsList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      products: [],\n      images: [],\n      users: [],\n      columns: [],\n      isLoading: this.props.loading,\n      imagePath: \"\",\n      setLoading: this.props.setLoading,\n    };\n  }\n\n  componentDidMount = async () => {\n    this.state.setLoading(false);\n    try {\n      await api.getAllProducts().then((product) => {\n        this.setState({\n          products: product.data.data,\n        });\n      });\n      await api.getAllImages().then((image) => {\n        this.setState({\n          images: image.data.data,\n        });\n      });\n      await api.getAllUsers().then((user) => {\n        this.setState({\n          users: user.data.data,\n        });\n      });\n\n      this.state.setLoading(false);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  searchHandler = (products) => {\n    this.setState({\n      products,\n    });\n  };\n  deleteHandler = (productId) => {\n    this.setState({\n      products: this.state.products.filter((product) => {\n        return product._id !== productId.data._id;\n      }),\n    });\n  };\n  render() {\n    const { products, images, users } = this.state;\n    // console.log(users);\n\n    return (\n      <Wrapper>\n        <h1>Market</h1>\n        <Search searchHandler={this.searchHandler} />\n        {/* <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n          <Sort searchHandler={this.searchHandler} />\n          <Groupby searchHandler={this.searchHandler} />\n        </div> */}\n        <div\n          style={{\n            display: \"flex\",\n            flexDirection: \"row\",\n            width: \"100%\",\n            textAlign: \"center\",\n            justifyContent: \"center\",\n          }}\n        >\n          <Sort searchHandler={this.searchHandler} />\n          <Groupby searchHandler={this.searchHandler} />\n        </div>\n\n        <CardLine\n          products={products}\n          images={images}\n          users={users}\n          deleteHandler={this.deleteHandler}\n          from={0}\n          to={50}\n        />\n        <CardLine\n          products={products}\n          images={images}\n          users={users}\n          deleteHandler={this.deleteHandler}\n          from={50}\n          to={100}\n        />\n        {this.props.setLoading(false)}\n      </Wrapper>\n    );\n  }\n}\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    justifyContent: \"space-around\",\n    overflow: \"hidden\",\n    direction: \"ltr\",\n  },\n  gridList: {\n    flexWrap: \"nowrap\",\n    transform: \"translateZ(0)\",\n  },\n  tile: {\n    height: \"100%\",\n  },\n  title: {\n    color: theme.palette.primary.light,\n  },\n  titleBar: {\n    background:\n      \"linear-gradient(to top, rgba(0,0,0,0.7) 0%, rgba(0,0,0,0.3) 70%, rgba(0,0,0,0) 100%)\",\n  },\n}));\n\nfunction CardLine({ products, images, users, deleteHandler, from, to }) {\n  const history = useHistory();\n  const cardOnClickHandler = (e, id) => {\n    // history.push(`/product/${id}`);\n  };\n  const classes = useStyles();\n  const [isModelOpen, setIsModelOpen] = useState(false);\n\n  return (\n    <div className={classes.root}>\n      <GridList className={classes.gridList} cols={3}>\n        {products &&\n          products.slice(from, to).map((product, i) => (\n            <GridListTile\n              style={{ height: \"100%\", width: \"fit-content\" }}\n              key={product[\"name\"]}\n            >\n              <PopUp\n                product={product}\n                users={users}\n                images={images}\n                isModelOpen={isModelOpen}\n                setIsModelOpen={setIsModelOpen}\n              />\n              <Card\n                style={{\n                  margin: \"1rem\",\n                  maxWidth: 300,\n                  minWidth: 100,\n                  height: \"fit-content\",\n                  border: \"1px solid #ececec\",\n                  borderRadius: \"15px\",\n                }}\n              >\n                {product[\"images\"] && images && (\n                  <Carousel>\n                    {images.map(\n                      (Image) =>\n                        product[\"images\"].some((id) => id === Image._id) && (\n                          <Carousel.Item\n                            style={{ width: \"100%\", height: \"10rem\" }}\n                          >\n                            <img\n                              className=\"d-block w-100\"\n                              style={{ width: \"100%\", height: \"100%\" }}\n                              src={`data:${Image[\"contentType\"]};base64,${Image[\"imageBase64\"]}`}\n                              alt={Image[\"fileName\"]}\n                            />\n                          </Carousel.Item>\n                        )\n                    )}\n                  </Carousel>\n                )}{\" \"}\n                <CardActionArea\n                  // onClick={(e) => cardOnClickHandler(e, product[\"_id\"])}\n                  onClick={() => setIsModelOpen(true)}\n                >\n                  <CardContent>\n                    <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                      {/* <p>{product[\"name\"]}</p>    */}\n                      <p\n                        style={{\n                          height: \"6rem\",\n                          overflow: \"scroll\",\n                          justifyContent: \"center\",\n                        }}\n                      >\n                        {product[\"name\"]}\n                      </p>\n                      <p>{product[\"price\"]}₪</p>\n                    </Typography>\n                    <Typography\n                      variant=\"body2\"\n                      color=\"textSecondary\"\n                      component=\"p\"\n                    >\n                      {users.some((user) => user._id === product[\"owner\"]) && (\n                        <div\n                          style={{\n                            backgroundColor: \"#ececec\",\n                            borderRadius: \"15px\",\n                          }}\n                        >\n                          <p>\n                            {\n                              users.find(\n                                (user) => user._id === product[\"owner\"]\n                              )[\"name\"]\n                            }\n                          </p>\n                          <p>\n                            Phone:{\" \"}\n                            {\n                              users.find(\n                                (user) => user._id === product[\"owner\"]\n                              )[\"phone\"]\n                            }\n                          </p>\n                        </div>\n                      )}\n                      <p>Description: {product[\"description\"]}</p>\n                      <p>Condition: {product[\"condition\"]}</p>\n                      <p>Category: {product[\"category\"]}</p>\n                      <p>Address: {product[\"address\"]}</p>\n                    </Typography>\n                  </CardContent>\n                </CardActionArea>\n                <CardActions style={{ justifyContent: \"center\" }}>\n                  <Button size=\"small\" color=\"primary\">\n                    <DeleteProduct\n                      id={product[\"_id\"]}\n                      deleteHandler={deleteHandler}\n                    />\n                  </Button>\n                  <Button size=\"small\" color=\"primary\">\n                    <StarBorderIcon />\n                  </Button>\n                  <Button size=\"small\" color=\"primary\">\n                    <UpdateProduct id={product[\"_id\"]} />\n                  </Button>\n                </CardActions>\n              </Card>\n            </GridListTile>\n          ))}\n      </GridList>\n    </div>\n  );\n}\n","/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/Client/src/Components/Pages/Home/Search.js",["150","151","152"],"import React, { useState } from \"react\";\nimport { Form, Button, Col } from \"react-bootstrap\";\nimport api from \"../../../API/API\";\nimport Sort from \"./Sort\";\nimport Groupby from \"./Groupby\";\n\nfunction Search(props) {\n  const [query, setQuery] = useState(\"\");\n  const [condition, setCondition] = useState(\"\");\n  const [category, setCategory] = useState(\"\");\n  const [price, setPrice] = useState(\"\");\n\n  const changeHandler = async (e) => {\n    setQuery(e.target.value);\n    await api\n      .search(query)\n      .then((res) => {\n        props.searchHandler(res.data);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n  // const clickHandler = async () => {\n  //   await api\n  //     .search(query)\n  //     .then((res) => {\n  //       props.searchHandler(res.data);\n  //     })\n  //     .catch((err) => {\n  //       console.log(err);\n  //     });\n  // };\n  const clickHandler = async () => {\n    await api\n      .search(category, condition, price)\n      .then((res) => {\n        props.searchHandler(res.data);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n  const conditionChangeHandler = (e) => {\n    setCondition(e.target.value);\n  };\n  const categoryChangeHandler = (e) => {\n    setCategory(e.target.value);\n  };\n  const priceChangeHandler = (e) => {\n    setPrice(e.target.value);\n  };\n  const categoryArray = [\n    \"Sport\",\n    \"Clothing\",\n    \"Electricity\",\n    \"Underwear\",\n    \"Swimwear\",\n    \"Homecare\",\n    \"Plants\",\n    \"Activewear\",\n    \"Jewlery\",\n    \"Other\",\n  ];\n  return (\n    // <Form>\n    //   <Form.Group controlId=\"formGroupEmail\">\n    //     <Form.Label>Search Product</Form.Label>\n    //     <Form.Control\n    //       type=\"text\"\n    //       style={{ direction: \"ltr\" }}\n    //       placeholder=\"Enter search\"\n    //       onChange={(e) => changeHandler(e)}\n    //     />\n    //     <Button onClick={clickHandler}>Search</Button>\n    //   </Form.Group>\n    // </Form>\n    <Form>\n      <Form.Row style={{ direction: \"ltr\" }}>\n        <Form.Group as={Col} controlId=\"formGridPassword\">\n          <Form.Label>Price</Form.Label>\n          <Form.Control as=\"select\" onChange={(e) => priceChangeHandler(e)}>\n            <option></option>\n            <option>less than 500</option>\n            <option>500-1000</option>\n            <option>1000-5000</option>\n            <option>5000+</option>\n          </Form.Control>\n        </Form.Group>\n        <Form.Group as={Col} controlId=\"formGridPassword\">\n          <Form.Label>Category</Form.Label>\n          <Form.Control as=\"select\" onChange={(e) => categoryChangeHandler(e)}>\n            <option></option>\n            {categoryArray.map((category) => {\n              return <option>{category}</option>;\n            })}\n          </Form.Control>\n        </Form.Group>\n        <Form.Group as={Col} controlId=\"formGridEmail\">\n          <Form.Label>Condition</Form.Label>\n\n          <Form.Control as=\"select\" onChange={(e) => conditionChangeHandler(e)}>\n            <option></option>\n            <option>NEW</option>\n            <option>USED</option>\n          </Form.Control>\n        </Form.Group>\n      </Form.Row>\n      <Button onClick={clickHandler}>Search</Button>\n    </Form>\n  );\n}\n\nexport default Search;\n","/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/Client/src/Components/Pages/Home/Sort.js",["153","154"],"/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/Client/src/Components/Pages/Map/Map.js",[],"/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/Client/src/Components/SSO/SignUp.js",["155","156"],"/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/Client/src/Components/Pages/Home/Create.js",["157"],{"ruleId":"158","severity":1,"message":"159","line":2,"column":40,"nodeType":"160","messageId":"161","endLine":2,"endColumn":44},{"ruleId":"158","severity":1,"message":"162","line":24,"column":10,"nodeType":"160","messageId":"161","endLine":24,"endColumn":15},{"ruleId":"158","severity":1,"message":"163","line":25,"column":28,"nodeType":"160","messageId":"161","endLine":25,"endColumn":47},{"ruleId":"164","replacedBy":"165"},{"ruleId":"166","replacedBy":"167"},{"ruleId":"158","severity":1,"message":"168","line":11,"column":3,"nodeType":"160","messageId":"161","endLine":11,"endColumn":10},{"ruleId":"158","severity":1,"message":"169","line":16,"column":8,"nodeType":"160","messageId":"161","endLine":16,"endColumn":16},{"ruleId":"158","severity":1,"message":"170","line":17,"column":8,"nodeType":"160","messageId":"161","endLine":17,"endColumn":12},{"ruleId":"164","replacedBy":"171"},{"ruleId":"166","replacedBy":"172"},{"ruleId":"158","severity":1,"message":"173","line":1,"column":17,"nodeType":"160","messageId":"161","endLine":1,"endColumn":26},{"ruleId":"158","severity":1,"message":"174","line":5,"column":10,"nodeType":"160","messageId":"161","endLine":5,"endColumn":15},{"ruleId":"158","severity":1,"message":"175","line":5,"column":17,"nodeType":"160","messageId":"161","endLine":5,"endColumn":25},{"ruleId":"158","severity":1,"message":"176","line":5,"column":3,"nodeType":"160","messageId":"161","endLine":5,"endColumn":22},{"ruleId":"158","severity":1,"message":"177","line":33,"column":13,"nodeType":"160","messageId":"161","endLine":33,"endColumn":18},{"ruleId":"158","severity":1,"message":"178","line":21,"column":12,"nodeType":"160","messageId":"161","endLine":21,"endColumn":31},{"ruleId":"179","severity":1,"message":"180","line":58,"column":1,"nodeType":"181","messageId":"182","endLine":65,"endColumn":2},{"ruleId":"158","severity":1,"message":"183","line":5,"column":19,"nodeType":"160","messageId":"161","endLine":5,"endColumn":27},{"ruleId":"158","severity":1,"message":"184","line":2,"column":10,"nodeType":"160","messageId":"161","endLine":2,"endColumn":17},{"ruleId":"158","severity":1,"message":"185","line":1,"column":17,"nodeType":"160","messageId":"161","endLine":1,"endColumn":25},{"ruleId":"158","severity":1,"message":"186","line":6,"column":3,"nodeType":"160","messageId":"161","endLine":6,"endColumn":12},{"ruleId":"158","severity":1,"message":"187","line":8,"column":3,"nodeType":"160","messageId":"161","endLine":8,"endColumn":9},{"ruleId":"158","severity":1,"message":"188","line":12,"column":10,"nodeType":"160","messageId":"161","endLine":12,"endColumn":22},{"ruleId":"158","severity":1,"message":"189","line":3,"column":3,"nodeType":"160","messageId":"161","endLine":3,"endColumn":7},{"ruleId":"158","severity":1,"message":"190","line":4,"column":3,"nodeType":"160","messageId":"161","endLine":4,"endColumn":14},{"ruleId":"158","severity":1,"message":"191","line":5,"column":3,"nodeType":"160","messageId":"161","endLine":5,"endColumn":17},{"ruleId":"158","severity":1,"message":"186","line":6,"column":3,"nodeType":"160","messageId":"161","endLine":6,"endColumn":12},{"ruleId":"158","severity":1,"message":"192","line":7,"column":3,"nodeType":"160","messageId":"161","endLine":7,"endColumn":13},{"ruleId":"158","severity":1,"message":"193","line":11,"column":8,"nodeType":"160","messageId":"161","endLine":11,"endColumn":13},{"ruleId":"158","severity":1,"message":"188","line":12,"column":10,"nodeType":"160","messageId":"161","endLine":12,"endColumn":22},{"ruleId":"158","severity":1,"message":"194","line":9,"column":12,"nodeType":"160","messageId":"161","endLine":9,"endColumn":30},{"ruleId":"158","severity":1,"message":"195","line":2,"column":24,"nodeType":"160","messageId":"161","endLine":2,"endColumn":27},{"ruleId":"158","severity":1,"message":"196","line":6,"column":10,"nodeType":"160","messageId":"161","endLine":6,"endColumn":18},{"ruleId":"158","severity":1,"message":"197","line":8,"column":10,"nodeType":"160","messageId":"161","endLine":8,"endColumn":15},{"ruleId":"198","severity":1,"message":"199","line":10,"column":13,"nodeType":"200","endLine":20,"endColumn":4},{"ruleId":"179","severity":1,"message":"180","line":79,"column":1,"nodeType":"181","messageId":"182","endLine":81,"endColumn":2},{"ruleId":"179","severity":1,"message":"180","line":82,"column":1,"nodeType":"181","messageId":"182","endLine":84,"endColumn":2},{"ruleId":"179","severity":1,"message":"180","line":85,"column":1,"nodeType":"181","messageId":"182","endLine":92,"endColumn":2},{"ruleId":"179","severity":1,"message":"180","line":93,"column":1,"nodeType":"181","messageId":"182","endLine":95,"endColumn":2},{"ruleId":"179","severity":1,"message":"180","line":96,"column":1,"nodeType":"181","messageId":"182","endLine":98,"endColumn":2},{"ruleId":"158","severity":1,"message":"201","line":2,"column":10,"nodeType":"160","messageId":"161","endLine":2,"endColumn":22},{"ruleId":"158","severity":1,"message":"202","line":2,"column":24,"nodeType":"160","messageId":"161","endLine":2,"endColumn":29},{"ruleId":"203","severity":1,"message":"204","line":18,"column":7,"nodeType":"205","endLine":18,"endColumn":70},{"ruleId":"158","severity":1,"message":"206","line":73,"column":14,"nodeType":"160","messageId":"161","endLine":73,"endColumn":19},{"ruleId":"158","severity":1,"message":"207","line":7,"column":8,"nodeType":"160","messageId":"161","endLine":7,"endColumn":18},{"ruleId":"158","severity":1,"message":"159","line":11,"column":10,"nodeType":"160","messageId":"161","endLine":11,"endColumn":14},{"ruleId":"158","severity":1,"message":"186","line":18,"column":3,"nodeType":"160","messageId":"161","endLine":18,"endColumn":12},{"ruleId":"158","severity":1,"message":"208","line":23,"column":3,"nodeType":"160","messageId":"161","endLine":23,"endColumn":18},{"ruleId":"209","severity":1,"message":"210","line":54,"column":3,"nodeType":"211","messageId":"212","endLine":56,"endColumn":4},{"ruleId":"158","severity":1,"message":"213","line":202,"column":9,"nodeType":"160","messageId":"161","endLine":202,"endColumn":16},{"ruleId":"158","severity":1,"message":"214","line":203,"column":9,"nodeType":"160","messageId":"161","endLine":203,"endColumn":27},{"ruleId":"158","severity":1,"message":"215","line":4,"column":8,"nodeType":"160","messageId":"161","endLine":4,"endColumn":12},{"ruleId":"158","severity":1,"message":"216","line":5,"column":8,"nodeType":"160","messageId":"161","endLine":5,"endColumn":15},{"ruleId":"158","severity":1,"message":"217","line":13,"column":9,"nodeType":"160","messageId":"161","endLine":13,"endColumn":22},{"ruleId":"158","severity":1,"message":"185","line":1,"column":17,"nodeType":"160","messageId":"161","endLine":1,"endColumn":25},{"ruleId":"158","severity":1,"message":"218","line":2,"column":10,"nodeType":"160","messageId":"161","endLine":2,"endColumn":14},{"ruleId":"158","severity":1,"message":"219","line":9,"column":10,"nodeType":"160","messageId":"161","endLine":9,"endColumn":17},{"ruleId":"158","severity":1,"message":"220","line":9,"column":19,"nodeType":"160","messageId":"161","endLine":9,"endColumn":29},{"ruleId":"158","severity":1,"message":"221","line":171,"column":7,"nodeType":"160","messageId":"161","endLine":171,"endColumn":13},"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'title' is assigned a value but never used.","'setnotificationData' is assigned a value but never used.","no-native-reassign",["222"],"no-negated-in-lhs",["223"],"'SubMenu' is defined but never used.","'Category' is defined but never used.","'Star' is defined but never used.",["222"],["223"],"'useEffect' is defined but never used.","'place' is assigned a value but never used.","'setPlace' is assigned a value but never used.","'FacebookLoginButton' is defined but never used.","'token' is assigned a value but never used.","'notificationHandler' is defined but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'Redirect' is defined but never used.","'useIntl' is defined but never used.","'useState' is defined but never used.","'CardMedia' is defined but never used.","'Button' is defined but never used.","'IoPinOutline' is defined but never used.","'Card' is defined but never used.","'CardContent' is defined but never used.","'CardActionArea' is defined but never used.","'Typography' is defined but never used.","'Modal' is defined but never used.","'notificationHandle' is defined but never used.","'Col' is defined but never used.","'products' is assigned a value but never used.","'total' is assigned a value but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","'IoLogoBuffer' is defined but never used.","'IoAdd' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'first' is assigned a value but never used.","'IconButton' is defined but never used.","'GridListTileBar' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'history' is assigned a value but never used.","'cardOnClickHandler' is assigned a value but never used.","'Sort' is defined but never used.","'Groupby' is defined but never used.","'changeHandler' is assigned a value but never used.","'Form' is defined but never used.","'signdUp' is assigned a value but never used.","'setsigndUp' is assigned a value but never used.","'images' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]