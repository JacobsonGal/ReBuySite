[{"C:\\Users\\Amit\\Documents\\GitHub\\ReBuySite\\Client\\src\\Components\\Pages\\Home\\Home.js":"1","C:\\Users\\Amit\\Documents\\GitHub\\ReBuySite\\Client\\src\\Components\\Pages\\Map\\GoogleMap.js":"2","C:\\Users\\Amit\\Documents\\GitHub\\ReBuySite\\Client\\src\\Components\\Pages\\Home\\Groupby.js":"3","C:\\Users\\Amit\\Documents\\GitHub\\ReBuySite\\Client\\src\\API\\API.js":"4"},{"size":535,"mtime":1618397390350,"results":"5","hashOfConfig":"6"},{"size":4025,"mtime":1618399073884,"results":"7","hashOfConfig":"6"},{"size":2110,"mtime":1618406302590,"results":"8","hashOfConfig":"6"},{"size":1898,"mtime":1618405097771,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"19oexd0",{"filePath":"12","messages":"13","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"14","messages":"15","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Amit\\Documents\\GitHub\\ReBuySite\\Client\\src\\Components\\Pages\\Home\\Home.js",[],"C:\\Users\\Amit\\Documents\\GitHub\\ReBuySite\\Client\\src\\Components\\Pages\\Map\\GoogleMap.js",["19"],"C:\\Users\\Amit\\Documents\\GitHub\\ReBuySite\\Client\\src\\Components\\Pages\\Home\\Groupby.js",["20","21","22","23"],"import React, { useState, useEffect } from \"react\";\r\nimport { Form, Button, Col } from \"react-bootstrap\";\r\nimport api from \"../../../API/API\";\r\n\r\nfunction Groupby(props) {\r\n  const [products, setProducts] = useState([]);\r\n  const [data, setData] = useState([]);\r\n  const [total, setTotal] = useState(0);\r\n\r\n  useEffect(async () => {\r\n    await api\r\n      .groupByCategory()\r\n      .then((res) => {\r\n        setProducts(res.data.products);\r\n        setData(res.data.data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, []);\r\n\r\n  const onChange = async (e) => {\r\n    const category = e.target.value.split(\" \")[0];\r\n    await api\r\n      .groupByCategory(category)\r\n      .then((res) => {\r\n        console.log(res.data.products);\r\n        props.searchHandler(res.data.products);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n  const mapReduceHandler = async () => {\r\n    await api\r\n      .mapAndReduce()\r\n      .then((res) => {\r\n        console.log(res);\r\n        setTotal(res);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n  return (\r\n    <Form>\r\n      <Form.Group controlId=\"formGroupEmail\">\r\n        {/* <Form.Label>Groupby Category</Form.Label> */}\r\n        {/* <Form.Control\r\n          type=\"text\"\r\n          style={{ direction: \"ltr\" }}\r\n          placeholder=\"Enter search\"\r\n          onChange={(e) => changeHandler(e)}\r\n        /> */}\r\n        {/* <Button onClick={clickHandler}>Group By Category</Button> */}\r\n        <Form.Group style={{ direction: \"ltr\" }} controlId=\"formGridState\">\r\n          <Form.Label>Group By</Form.Label>\r\n          <select onChange={(e) => onChange(e)} placeholder=\"Choose...\">\r\n            <option></option>\r\n            {data.map((obj) => {\r\n              return (\r\n                <option>\r\n                  {obj._id} ({obj.total})\r\n                </option>\r\n              );\r\n            })}\r\n          </select>\r\n        </Form.Group>\r\n        <Button onClick={mapReduceHandler}>MAPREDUCE</Button>\r\n      </Form.Group>\r\n    </Form>\r\n  );\r\n}\r\n\r\nexport default Groupby;\r\n","C:\\Users\\Amit\\Documents\\GitHub\\ReBuySite\\Client\\src\\API\\API.js",[],{"ruleId":"24","severity":1,"message":"25","line":63,"column":14,"nodeType":"26","messageId":"27","endLine":63,"endColumn":19},{"ruleId":"24","severity":1,"message":"28","line":2,"column":24,"nodeType":"26","messageId":"27","endLine":2,"endColumn":27},{"ruleId":"24","severity":1,"message":"29","line":6,"column":10,"nodeType":"26","messageId":"27","endLine":6,"endColumn":18},{"ruleId":"24","severity":1,"message":"30","line":8,"column":10,"nodeType":"26","messageId":"27","endLine":8,"endColumn":15},{"ruleId":"31","severity":1,"message":"32","line":10,"column":13,"nodeType":"33","endLine":20,"endColumn":4},"no-unused-vars","'first' is assigned a value but never used.","Identifier","unusedVar","'Col' is defined but never used.","'products' is assigned a value but never used.","'total' is assigned a value but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression"]