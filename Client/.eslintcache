[{"/Users/jacobsonpro/Downloads/ReBuySite/Client/src/Components/Pages/Home/Products.js":"1","/Users/jacobsonpro/Downloads/ReBuySite/Client/src/Components/Pages/Map/GoogleMap.js":"2","/Users/jacobsonpro/Downloads/ReBuySite/Client/src/Components/Pages/Home/CardList.js":"3","/Users/jacobsonpro/Downloads/ReBuySite/Client/src/Components/Pages/Home/Update.js":"4"},{"size":10058,"mtime":1618678173046,"results":"5","hashOfConfig":"6"},{"size":5140,"mtime":1618678189080,"results":"7","hashOfConfig":"6"},{"size":8581,"mtime":1618679028681,"results":"8","hashOfConfig":"6"},{"size":7054,"mtime":1618678639474,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"xghxrz",{"filePath":"12","messages":"13","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"14"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/jacobsonpro/Downloads/ReBuySite/Client/src/Components/Pages/Home/Products.js",["20","21","22","23","24","25","26","27","28","29","30","31","32","33","34","35","36","37","38","39"],"/Users/jacobsonpro/Downloads/ReBuySite/Client/src/Components/Pages/Map/GoogleMap.js",["40"],"import React, { Component } from \"react\";\nimport api from \"../../../API/API\";\nimport GoogleMapReact from \"google-map-react\";\nimport Marker from \"./Marker\";\nimport Geocode from \"react-geocode\";\nimport Search from \"../Home/Search\";\nimport PopUp from \"../../Utils/PopUp\";\n\nGeocode.setApiKey(\"AIzaSyDzTw-IhXNRYDH1QpvVVNp_ix9AzFC0McM\");\nGeocode.setLanguage(\"He\");\nGeocode.setRegion(\"Il\");\nGeocode.setLocationType(\"ROOFTOP\");\nGeocode.enableDebug();\n\nexport default class GoogleMap extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      products: [],\n      images: [],\n      users: [],\n      product: null,\n      locations: [{}],\n      center: {\n        lat: 31.96996095111596,\n        lng: 34.77278720495645,\n      },\n      zoom: 10,\n      isModelOpen: false,\n      setLoading: this.props.setLoading,\n    };\n    this.state.setLoading(true);\n  }\n\n  componentDidMount = async () => {\n    this.state.setLoading(false);\n    try {\n      await api.getAllProducts().then((product) => {\n        this.setState({\n          products: product.data.data,\n        });\n      });\n      await api.getAllImages().then((image) => {\n        this.setState({\n          images: image.data.data,\n        });\n      });\n      await api.getAllUsers().then((user) => {\n        this.setState({\n          users: user.data.data,\n        });\n      });\n      this.state.setLoading(false);\n    } catch (error) {\n      console.log(error);\n    }\n    this.state.products.map(\n      (p, i) =>\n        p[\"address\"] &&\n        Geocode.fromAddress(p[\"address\"]).then(\n          // Geocode.fromAddress(\"RISHON-LE-ZION\").then(\n          (response) => {\n            var { lat, lng } = response.results[0].geometry.location;\n            lat = lat + i * 0.005;\n            lng = lng + i * 0.005;\n            this.setState({\n              locations: this.state.locations.concat([{ lat, lng }]),\n            });\n            // console.log(this.state.locations);\n          },\n          (error) => {\n            console.error(error);\n          }\n        )\n    );\n    this.setState((state) => {\n      const [first, ...rest] = state.locations;\n      return {\n        locations: rest,\n      };\n    });\n  };\n  searchHandler = (products) => {\n    this.setState({\n      products,\n    });\n  };\n  productHandler = (product) => {\n    this.setState({\n      product,\n    });\n  };\n  modalHandler = (isModelOpen) => {\n    this.setState({\n      isModelOpen,\n    });\n  };\n  render() {\n    const {\n      products,\n      images,\n      users,\n      center,\n      zoom,\n      isModelOpen,\n      product,\n      locations,\n    } = this.state;\n\n    function getMapOptions(maps) {\n      return {\n        streetViewControl: true,\n        scaleControl: true,\n        fullscreenControl: true,\n        styles: [\n          {\n            featureType: \"poi.business\",\n            elementType: \"labels\",\n            stylers: [\n              {\n                visibility: \"off\",\n              },\n            ],\n          },\n        ],\n        gestureHandling: \"greedy\",\n        disableDoubleClickZoom: true,\n        minZoom: 0,\n        maxZoom: 30,\n        layerTypes: [\"TrafficLayer\"],\n        mapTypeControl: true,\n        mapTypeId: maps.MapTypeId.ROADMAP,\n        mapTypeControlOptions: {\n          style: maps.MapTypeControlStyle.DROPDOWN_MENU,\n          position: maps.ControlPosition.RIGHT_CENTER,\n          mapTypeIds: [\n            maps.MapTypeId.ROADMAP,\n            maps.MapTypeId.SATELLITE,\n            maps.MapTypeId.HYBRID,\n          ],\n        },\n        zoomControl: true,\n        clickableIcons: false,\n      };\n    }\n\n    return (\n      <>\n        <div\n          style={{\n            position: \"absolute\",\n            top: \"3rem\",\n            alignItems: \"center\",\n            width: \"min-content\",\n            padding: \"2rem\",\n            zIndex: \"99\",\n          }}\n        >\n          <Search\n            searchHandler={this.searchHandler}\n            style={{ position: \"absolute\" }}\n          />\n        </div>\n        <div style={{ height: \"96vh\", width: \"100%\" }}>\n          <GoogleMapReact\n            bootstrapURLKeys={{\n              key: \"AIzaSyAiTqUoIPktHrM66nIC7fRevgXvj7BzN-A\",\n              language: \"he\",\n              region: \"il\",\n            }}\n            defaultCenter={center}\n            defaultZoom={zoom}\n            options={getMapOptions}\n          >\n            <PopUp\n              product={product}\n              images={images}\n              users={users}\n              isModelOpen={isModelOpen}\n              setIsModelOpen={this.modalHandler}\n            />\n            {products.map((product, i) => {\n              return (\n                <Marker\n                  lat={locations[i] ? locations[i].lat : null}\n                  lng={locations[i] ? locations[i].lng : null}\n                  product={product}\n                  images={images}\n                  users={users}\n                  key={product[\"name\"]}\n                  setIsModelOpen={this.modalHandler}\n                  setData={this.productHandler}\n                />\n              );\n            })}\n          </GoogleMapReact>\n        </div>\n        )\n      </>\n    );\n  }\n}\n","/Users/jacobsonpro/Downloads/ReBuySite/Client/src/Components/Pages/Home/CardList.js",["41","42","43","44","45","46","47","48","49","50","51"],"import React, { Component, useState, useContext } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport api from \"../../../API/API\";\nimport styled from \"styled-components\";\nimport \"react-table/index\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Search from \"./Search\";\nimport Groupby from \"./Groupby\";\nimport Sort from \"./Sort\";\nimport { Link } from \"react-router-dom\";\nimport StarBorderIcon from \"@material-ui/icons/StarBorder\";\nimport {\n  Card,\n  CardContent,\n  CardActionArea,\n  CardActions,\n  CardMedia,\n  Typography,\n  Button,\n  GridList,\n  GridListTile,\n  GridListTileBar,\n} from \"@material-ui/core\";\nimport Carousel from \"react-bootstrap/Carousel\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport PopUp from \"../../Utils/PopUp\";\nimport { AuthContext, Admins } from \"../../SSO/Auth\";\n\nconst Wrapper = styled.div`\n  padding: 0 40px 40px 40px;\n`;\n\nconst Update = styled.div`\n  color: #ef9b0f;\n  cursor: pointer;\n`;\n\nconst Delete = styled.div`\n  color: #ff0000;\n  cursor: pointer;\n`;\n\nfunction UpdateProduct({ id }) {\n  const history = useHistory();\n\n  const updateUser = (event) => {\n    event.preventDefault();\n    history.push(`/Update/${id}`);\n  };\n  return <Update onClick={updateUser}>Update</Update>;\n}\n\nclass DeleteProduct extends Component {\n  constructor() {\n    super();\n  }\n  deleteUser = (event) => {\n    event.preventDefault();\n\n    if (\n      window.confirm(\n        `Do tou want to delete the product ${this.props.id} permanently?`\n      )\n    ) {\n      api\n        .deleteProductById(this.props.id)\n        .then((res) => {\n          this.props.deleteHandler(res.data);\n        })\n        .catch((err) => console.log(err));\n      console.log(\"after res\");\n      // window.location.reload();\n    }\n  };\n\n  render() {\n    return <Delete onClick={this.deleteUser}>DELETE</Delete>;\n  }\n}\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    justifyContent: \"space-around\",\n    overflow: \"hidden\",\n    direction: \"ltr\",\n  },\n  gridList: {\n    flexWrap: \"nowrap\",\n    transform: \"translateZ(0)\",\n  },\n  tile: {\n    height: \"100%\",\n  },\n  title: {\n    color: theme.palette.primary.light,\n  },\n  titleBar: {\n    background:\n      \"linear-gradient(to top, rgba(0,0,0,0.7) 0%, rgba(0,0,0,0.3) 70%, rgba(0,0,0,0) 100%)\",\n  },\n}));\n\nexport default function CardList({\n  products,\n  images,\n  users,\n\n  deleteHandler,\n  from,\n  to,\n}) {\n  const classes = useStyles();\n  const [isModelOpen, setIsModelOpen] = useState(false);\n  const [product, setproduct] = useState(null);\n  const { currentUser } = useContext(AuthContext);\n  const user = users.find(\n    (usr) =>\n      usr[\"email\"] === currentUser.email.toUpperCase() ||\n      (usr[\"email\"] === currentUser.email.toLowerCase() && usr[\"email\"])\n  );\n\n  function setData(product) {\n    setproduct(product);\n    setIsModelOpen(true);\n  }\n\n  return (\n    <div className={classes.root}>\n      <PopUp\n        product={product}\n        users={users}\n        images={images}\n        isModelOpen={isModelOpen}\n        setIsModelOpen={setIsModelOpen}\n      />\n      <GridList className={classes.gridList} cols={3}>\n        {products &&\n          products.slice(from, to).map(\n            (product, i) =>\n              product && (\n                <GridListTile\n                  style={{ height: \"100%\", width: \"fit-content\" }}\n                  key={product[\"name\"]}\n                >\n                  {/* <PopUp\n                product={product}\n                users={users}\n                images={images}\n                isModelOpen={isModelOpen}\n                setIsModelOpen={setIsModelOpen}\n              /> */}\n                  <Card\n                    style={{\n                      margin: \"1rem\",\n                      width: 250,\n                      minHeight: 500,\n                      maxHeight: \"fit-content\",\n                      border: \"1px solid #ececec\",\n                      borderRadius: \"15px\",\n                    }}\n                  >\n                    {product[\"images\"] && images && (\n                      <Carousel>\n                        {images.map(\n                          (Image) =>\n                            product[\"images\"].some(\n                              (id) => id === Image._id\n                            ) && (\n                              <Carousel.Item\n                                style={{ width: \"100%\", height: \"10rem\" }}\n                              >\n                                <img\n                                  className=\"d-block w-100\"\n                                  style={{ width: \"100%\", height: \"100%\" }}\n                                  src={`data:${Image[\"contentType\"]};base64,${Image[\"imageBase64\"]}`}\n                                  alt={Image[\"fileName\"]}\n                                />\n                              </Carousel.Item>\n                            )\n                        )}\n                      </Carousel>\n                    )}{\" \"}\n                    <CardActionArea\n                      onClick={() => setData(product)}\n                      style={{\n                        height: 400,\n                      }}\n                    >\n                      <CardContent>\n                        <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                          {/* <p>{product[\"name\"]}</p>    */}\n                          <p\n                            style={{\n                              height: \"3rem\",\n                              overflow: \"scroll\",\n                              justifyContent: \"center\",\n                            }}\n                          >\n                            {product[\"name\"]}\n                          </p>\n                          <p>{product[\"price\"]}₪</p>\n                        </Typography>\n                        <Typography\n                          variant=\"body2\"\n                          color=\"textSecondary\"\n                          component=\"p\"\n                        >\n                          {users.some(\n                            (user) => user._id === product[\"owner\"]\n                          ) && (\n                            <div\n                              style={{\n                                backgroundColor: \"#ececec\",\n                                borderRadius: \"15px\",\n                                font: \"15px assistant bold\",\n                              }}\n                            >\n                              <p>\n                                {\n                                  users.find(\n                                    (user) => user._id === product[\"owner\"]\n                                  )[\"name\"]\n                                }\n                              </p>\n                              <p>\n                                Phone:{\" \"}\n                                {\n                                  users.find(\n                                    (user) => user._id === product[\"owner\"]\n                                  )[\"phone\"]\n                                }\n                              </p>\n                            </div>\n                          )}\n                          <p>Description: {product[\"description\"]}</p>\n                          <p>Condition: {product[\"condition\"]}</p>\n                          <p>Category: {product[\"category\"]}</p>\n                          <p>Address: {product[\"address\"]}</p>\n                        </Typography>\n                      </CardContent>\n                    </CardActionArea>\n                    {user && user[\"products\"].some((id) => id === product._id) && (\n                      <CardActions\n                        style={{ justifyContent: \"center\", height: 50 }}\n                      >\n                        <Button size=\"small\" color=\"primary\">\n                          <DeleteProduct\n                            id={product[\"_id\"]}\n                            deleteHandler={deleteHandler}\n                          />\n                        </Button>\n                        {/* <Button size=\"small\" color=\"primary\">\n                    <StarBorderIcon />\n                  </Button> */}\n                        <Button size=\"small\" color=\"primary\">\n                          <UpdateProduct id={product[\"_id\"]} />\n                        </Button>\n                      </CardActions>\n                    )}\n                  </Card>\n                </GridListTile>\n              )\n          )}\n      </GridList>\n    </div>\n  );\n}\n","/Users/jacobsonpro/Downloads/ReBuySite/Client/src/Components/Pages/Home/Update.js",["52","53"],{"ruleId":"54","severity":1,"message":"55","line":1,"column":28,"nodeType":"56","messageId":"57","endLine":1,"endColumn":36},{"ruleId":"54","severity":1,"message":"58","line":6,"column":10,"nodeType":"56","messageId":"57","endLine":6,"endColumn":20},{"ruleId":"54","severity":1,"message":"59","line":7,"column":8,"nodeType":"56","messageId":"57","endLine":7,"endColumn":18},{"ruleId":"54","severity":1,"message":"60","line":11,"column":10,"nodeType":"56","messageId":"57","endLine":11,"endColumn":14},{"ruleId":"54","severity":1,"message":"61","line":12,"column":8,"nodeType":"56","messageId":"57","endLine":12,"endColumn":22},{"ruleId":"54","severity":1,"message":"62","line":14,"column":3,"nodeType":"56","messageId":"57","endLine":14,"endColumn":7},{"ruleId":"54","severity":1,"message":"63","line":15,"column":3,"nodeType":"56","messageId":"57","endLine":15,"endColumn":14},{"ruleId":"54","severity":1,"message":"64","line":16,"column":3,"nodeType":"56","messageId":"57","endLine":16,"endColumn":17},{"ruleId":"54","severity":1,"message":"65","line":17,"column":3,"nodeType":"56","messageId":"57","endLine":17,"endColumn":14},{"ruleId":"54","severity":1,"message":"66","line":18,"column":3,"nodeType":"56","messageId":"57","endLine":18,"endColumn":12},{"ruleId":"54","severity":1,"message":"67","line":19,"column":3,"nodeType":"56","messageId":"57","endLine":19,"endColumn":13},{"ruleId":"54","severity":1,"message":"68","line":20,"column":3,"nodeType":"56","messageId":"57","endLine":20,"endColumn":9},{"ruleId":"54","severity":1,"message":"69","line":21,"column":3,"nodeType":"56","messageId":"57","endLine":21,"endColumn":11},{"ruleId":"54","severity":1,"message":"70","line":22,"column":3,"nodeType":"56","messageId":"57","endLine":22,"endColumn":15},{"ruleId":"54","severity":1,"message":"71","line":23,"column":3,"nodeType":"56","messageId":"57","endLine":23,"endColumn":18},{"ruleId":"54","severity":1,"message":"72","line":25,"column":8,"nodeType":"56","messageId":"57","endLine":25,"endColumn":16},{"ruleId":"54","severity":1,"message":"73","line":27,"column":8,"nodeType":"56","messageId":"57","endLine":27,"endColumn":13},{"ruleId":"54","severity":1,"message":"74","line":44,"column":10,"nodeType":"56","messageId":"57","endLine":44,"endColumn":23},{"ruleId":"54","severity":1,"message":"75","line":54,"column":7,"nodeType":"56","messageId":"57","endLine":54,"endColumn":20},{"ruleId":"76","severity":1,"message":"77","line":55,"column":3,"nodeType":"78","messageId":"79","endLine":57,"endColumn":4},{"ruleId":"54","severity":1,"message":"80","line":77,"column":14,"nodeType":"56","messageId":"57","endLine":77,"endColumn":19},{"ruleId":"54","severity":1,"message":"59","line":7,"column":8,"nodeType":"56","messageId":"57","endLine":7,"endColumn":18},{"ruleId":"54","severity":1,"message":"81","line":8,"column":8,"nodeType":"56","messageId":"57","endLine":8,"endColumn":14},{"ruleId":"54","severity":1,"message":"82","line":9,"column":8,"nodeType":"56","messageId":"57","endLine":9,"endColumn":15},{"ruleId":"54","severity":1,"message":"83","line":10,"column":8,"nodeType":"56","messageId":"57","endLine":10,"endColumn":12},{"ruleId":"54","severity":1,"message":"60","line":11,"column":10,"nodeType":"56","messageId":"57","endLine":11,"endColumn":14},{"ruleId":"54","severity":1,"message":"61","line":12,"column":8,"nodeType":"56","messageId":"57","endLine":12,"endColumn":22},{"ruleId":"54","severity":1,"message":"66","line":18,"column":3,"nodeType":"56","messageId":"57","endLine":18,"endColumn":12},{"ruleId":"54","severity":1,"message":"71","line":23,"column":3,"nodeType":"56","messageId":"57","endLine":23,"endColumn":18},{"ruleId":"54","severity":1,"message":"84","line":28,"column":23,"nodeType":"56","messageId":"57","endLine":28,"endColumn":29},{"ruleId":"54","severity":1,"message":"85","line":30,"column":7,"nodeType":"56","messageId":"57","endLine":30,"endColumn":14},{"ruleId":"76","severity":1,"message":"77","line":55,"column":3,"nodeType":"78","messageId":"79","endLine":57,"endColumn":4},{"ruleId":"54","severity":1,"message":"86","line":167,"column":7,"nodeType":"56","messageId":"57","endLine":167,"endColumn":13},{"ruleId":"54","severity":1,"message":"87","line":171,"column":7,"nodeType":"56","messageId":"57","endLine":171,"endColumn":14},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'makeStyles' is defined but never used.","'IconButton' is defined but never used.","'Link' is defined but never used.","'StarBorderIcon' is defined but never used.","'Card' is defined but never used.","'CardContent' is defined but never used.","'CardActionArea' is defined but never used.","'CardActions' is defined but never used.","'CardMedia' is defined but never used.","'Typography' is defined but never used.","'Button' is defined but never used.","'GridList' is defined but never used.","'GridListTile' is defined but never used.","'GridListTileBar' is defined but never used.","'Carousel' is defined but never used.","'PopUp' is defined but never used.","'UpdateProduct' is defined but never used.","'DeleteProduct' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'first' is assigned a value but never used.","'Search' is defined but never used.","'Groupby' is defined but never used.","'Sort' is defined but never used.","'Admins' is defined but never used.","'Wrapper' is assigned a value but never used.","'images' is assigned a value but never used.","'ownerId' is assigned a value but never used."]