[{"/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/Client/src/Layout.js":"1","/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/Client/src/Components/SSO/Config.js":"2","/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/Client/src/Components/NavBar/SideBar.js":"3","/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/Client/src/Components/Pages/Home/Home.js":"4","/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/Client/src/Components/Pages/Settings/MainSettings.js":"5","/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/Client/src/Components/SSO/LogIn.js":"6","/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/Client/src/Components/NavBar/TopBar.js":"7","/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/Client/src/Components/NavBar/User.js":"8","/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/Client/src/Components/Utils/Page.js":"9","/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/Client/src/API/API.js":"10","/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/Client/src/Components/Utils/PopUp.js":"11","/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/Client/src/Components/Pages/Map/Marker.js":"12","/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/Client/src/Components/NavBar/MobileBar.js":"13","/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/Client/src/Components/Pages/Home/Groupby.js":"14","/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/Client/src/Components/Utils/PageBody.js":"15","/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/Client/src/Components/Pages/Map/GoogleMap.js":"16","/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/Client/src/Components/Pages/Home/Products.js":"17","/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/Client/src/Components/Pages/Home/Search.js":"18","/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/Client/src/Components/Pages/Home/Sort.js":"19","/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/Client/src/Components/Pages/Map/Map.js":"20","/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/Client/src/Components/SSO/SignUp.js":"21","/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/Client/src/Components/Pages/Home/Create.js":"22","/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/Client/src/Components/SSO/Auth.js":"23","/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/Client/src/Components/Pages/Settings/ProfileSettings.js":"24","/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/Client/src/Components/Pages/Home/CardList.js":"25","/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/Client/src/index.js":"26","/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/Client/src/Styles/MessagesMain.js":"27","/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/Client/src/Components/SSO/Registration.js":"28","/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/Client/src/Components/Pages/Home/Update.js":"29"},{"size":5978,"mtime":1618332470060,"results":"30","hashOfConfig":"31"},{"size":506,"mtime":1616345228879,"results":"32","hashOfConfig":"31"},{"size":3718,"mtime":1618312302311,"results":"33","hashOfConfig":"31"},{"size":514,"mtime":1618570035668,"results":"34","hashOfConfig":"31"},{"size":1545,"mtime":1616017500271,"results":"35","hashOfConfig":"31"},{"size":2604,"mtime":1618587526287,"results":"36","hashOfConfig":"31"},{"size":1896,"mtime":1618322520669,"results":"37","hashOfConfig":"31"},{"size":2542,"mtime":1618656754966,"results":"38","hashOfConfig":"31"},{"size":1372,"mtime":1616017738941,"results":"39","hashOfConfig":"31"},{"size":1839,"mtime":1618570035666,"results":"40","hashOfConfig":"31"},{"size":5816,"mtime":1618581091734,"results":"41","hashOfConfig":"31"},{"size":1493,"mtime":1618581076810,"results":"42","hashOfConfig":"31"},{"size":2146,"mtime":1618322520668,"results":"43","hashOfConfig":"31"},{"size":2267,"mtime":1618575087502,"results":"44","hashOfConfig":"31"},{"size":1162,"mtime":1616017500273,"results":"45","hashOfConfig":"31"},{"size":4492,"mtime":1618581068817,"results":"46","hashOfConfig":"31"},{"size":9455,"mtime":1618592849756,"results":"47","hashOfConfig":"31"},{"size":3225,"mtime":1618574475890,"results":"48","hashOfConfig":"31"},{"size":481,"mtime":1618574086824,"results":"49","hashOfConfig":"31"},{"size":532,"mtime":1618577622565,"results":"50","hashOfConfig":"31"},{"size":3701,"mtime":1618590105379,"results":"51","hashOfConfig":"31"},{"size":7519,"mtime":1618593687102,"results":"52","hashOfConfig":"31"},{"size":1479,"mtime":1618591868813,"results":"53","hashOfConfig":"31"},{"size":4037,"mtime":1618599324868,"results":"54","hashOfConfig":"31"},{"size":7118,"mtime":1618656740897,"results":"55","hashOfConfig":"31"},{"size":197,"mtime":1616017500304,"results":"56","hashOfConfig":"31"},{"size":1658,"mtime":1618308310287,"results":"57","hashOfConfig":"31"},{"size":583,"mtime":1616601370665,"results":"58","hashOfConfig":"31"},{"size":7055,"mtime":1618322520676,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"63"},"kn6s5o",{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"69"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"79"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"69"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"79"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"63"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"79"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"79"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"63"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"79"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"123","messages":"124","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/Client/src/Layout.js",["133","134","135"],"import React, { useState, useContext } from \"react\";\nimport { BrowserRouter, Route, Switch, Link } from \"react-router-dom\";\nimport { useIntl } from \"react-intl\";\nimport SideBar from \"./Components/NavBar/SideBar\";\nimport MobileBar from \"./Components/NavBar/MobileBar\";\nimport LoadingOverlay from \"react-loading-overlay\";\nimport Icon from \"./Assets/Images/ReBuyLogoTrans.png\";\nimport Home from \"./Components/Pages/Home/Home\";\nimport Map from \"./Components/Pages/Map/Map\";\nimport Favorites from \"./Components/Pages/Favorites/Favorites\";\nimport MainSettings from \"./Components/Pages/Settings/MainSettings\";\nimport UserSettings from \"./Components/Pages/Settings/ProfileSettings\";\nimport ProductInsert from \"./Components/Pages/Home/Create\";\nimport ProductUpload from \"./Components/Pages/Home/Update\";\nimport { AuthContext } from \"./Components/SSO/Auth\";\nimport Registration from \"./Components/SSO/Registration\";\n\nexport default function Layout({ setLocale, setActive, isActive }) {\n  const intl = useIntl();\n  const [rtl, setRtl] = useState(true);\n  const [collapsed, setCollapsed] = useState(false);\n  const [image, setImage] = useState(false);\n  const [toggled, setToggled] = useState(true);\n  const [title, setTitle] = useState(\"ReBuy\");\n  const [notificationData, setnotificationData] = useState();\n  const count = notificationData ? notificationData.length : 0;\n  const [notificationCount, setNotificationCount] = useState(count);\n  const { currentUser } = useContext(AuthContext);\n\n  const handleCollapsedChange = (checked) => {\n    setCollapsed(checked);\n  };\n\n  const handleRtlChange = (checked) => {\n    setRtl(checked);\n    setLocale(checked ? \"he\" : \"en\");\n  };\n  const handleImageChange = (checked) => {\n    setImage(checked);\n  };\n\n  const handleToggleSidebar = () => {\n    setToggled(!toggled);\n  };\n  return (\n    <LoadingOverlay\n      active={isActive}\n      fadeSpeed={10000}\n      spinner={\n        <div\n          style={{\n            animation: \"spin 1.5s linear infinite\",\n          }}\n        >\n          <img src={Icon} alt={\"Icon\"} style={{ width: \"30%\" }} />\n        </div>\n      }\n      styles={{\n        wrapper: {},\n        overlay: (base) => ({\n          ...base,\n          backgroundColor: \"#f1f7fb\",\n          opacity: \"0.9\",\n          height: \"100%\",\n          position: \"fixed\",\n        }),\n      }}\n    >\n      {isActive || currentUser ? (\n        <BrowserRouter>\n          <Switch>\n            <div\n              className={`app ${rtl ? \"rtl\" : \"\"} ${toggled ? \"toggled\" : \"\"}`}\n            >\n              <div className=\"main-container\">\n                <div className=\"sideBar\">\n                  <SideBar\n                    image={image}\n                    collapsed={collapsed}\n                    rtl={rtl}\n                    toggled={toggled}\n                    handleToggleSidebar={handleToggleSidebar}\n                    handleCollapsedChange={handleCollapsedChange}\n                    handleRtlChange={handleRtlChange}\n                    handleImageChange={handleImageChange}\n                    notificationCount={notificationCount}\n                    setNotificationCount={setNotificationCount}\n                    setLoading={setActive}\n                    loading={isActive}\n                  />\n                </div>\n                <MobileBar\n                  handleToggleSidebar={handleToggleSidebar}\n                  notificationCount={notificationCount}\n                  setNotificationCount={setNotificationCount}\n                />\n                <div className={`mainPage ${toggled ? \"toggled\" : \"\"}`}>\n                  <Route exact path=\"/\">\n                    <Home\n                      title={intl.formatMessage({ id: \"Home\" })}\n                      setTitle={setTitle}\n                      setActive={setActive}\n                    />\n                  </Route>\n                  <Route exact path=\"/Map\">\n                    <Map\n                      title={intl.formatMessage({ id: \"Map\" })}\n                      setTitle={setTitle}\n                      setActive={setActive}\n                    />\n                  </Route>\n                  <Route exact path=\"/Upload\">\n                    <ProductInsert\n                      title={intl.formatMessage({ id: \"Upload\" })}\n                      setTitle={setTitle}\n                      setActive={setActive}\n                    />\n                  </Route>\n                  <Route path=\"/Update/:id\">\n                    <ProductUpload\n                      title={intl.formatMessage({ id: \"Update\" })}\n                      setTitle={setTitle}\n                      setActive={setActive}\n                    />\n                  </Route>\n                  <Route exact path=\"/Favorites\">\n                    <Favorites\n                      title={intl.formatMessage({ id: \"Favorites\" })}\n                      setTitle={setTitle}\n                      setActive={setActive}\n                    />\n                  </Route>\n                  <Route exact path=\"/settings/userSettings\">\n                    <UserSettings\n                      title={intl.formatMessage({ id: \"profile\" })}\n                      setTitle={setTitle}\n                    />\n                  </Route>\n                  <Route exact path=\"/settings/mainSettings\">\n                    <MainSettings\n                      title={intl.formatMessage({ id: \"settings\" })}\n                      setTitle={setTitle}\n                    />\n                  </Route>\n                  {/* </>\n                )} */}\n                </div>\n              </div>\n            </div>\n          </Switch>\n        </BrowserRouter>\n      ) : (\n        <div className={`app ${rtl ? \"rtl\" : \"\"} ${toggled ? \"toggled\" : \"\"}`}>\n          <div className=\"main-container\">\n            <div className={`mainPage ${toggled ? \"toggled\" : \"\"}`}>\n              <Registration />\n            </div>\n          </div>\n        </div>\n      )}\n\n      {setActive(false)}\n    </LoadingOverlay>\n  );\n}\n",["136","137"],"/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/Client/src/Components/SSO/Config.js",[],"/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/Client/src/Components/NavBar/SideBar.js",["138","139","140"],"import React from \"react\";\nimport { useIntl } from \"react-intl\";\nimport { NavLink } from \"react-router-dom\";\nimport {\n  ProSidebar,\n  Menu,\n  MenuItem,\n  SidebarHeader,\n  SidebarFooter,\n  SidebarContent,\n  SubMenu,\n} from \"react-pro-sidebar\";\nimport logo from \"../../Assets/ReBuy.jpeg\";\nimport Home from \"@material-ui/icons/HomeRounded\";\nimport Map from \"@material-ui/icons/MapRounded\";\nimport Category from \"@material-ui/icons/CategoryRounded\";\nimport Star from \"@material-ui/icons/StarRounded\";\nimport Upload from \"@material-ui/icons/ArrowUpwardRounded\";\nimport Instagram from \"@material-ui/icons/Instagram\";\nimport Facebook from \"@material-ui/icons/Facebook\";\nimport TopBar from \"./TopBar\";\nimport User from \"./User\";\n\nexport default function SideBar({\n  image,\n  collapsed,\n  rtl,\n  toggled,\n  email,\n  handleToggleSidebar,\n  handleCollapsedChange,\n  handleRtlChange,\n  handleImageChange,\n  setSeen,\n  notificationCount,\n  setNotificationCount,\n  setLoading,\n}) {\n  const intl = useIntl();\n  return (\n    <div className=\"sideBar\">\n      <ProSidebar\n        // image={image ? sidebarBg : false}\n        rtl={rtl}\n        collapsed={collapsed}\n        toggled={toggled}\n        breakPoint=\"md\"\n        onToggle={handleToggleSidebar}\n      >\n        <SidebarHeader>\n          <TopBar\n            toggled={toggled}\n            handleToggleSidebar={handleToggleSidebar}\n            notificationCount={notificationCount}\n            setNotificationCount={setNotificationCount}\n            main={false}\n          />\n        </SidebarHeader>\n        <SidebarContent>\n          <Menu iconShape=\"circle\">\n            <MenuItem icon={<Home />}>\n              <NavLink to=\"/\" onClick={handleToggleSidebar}>\n                {intl.formatMessage({ id: \"Home\" })}\n              </NavLink>\n            </MenuItem>\n            <MenuItem icon={<Map />}>\n              <NavLink to=\"/Map\" onClick={handleToggleSidebar}>\n                {intl.formatMessage({ id: \"Map\" })}\n              </NavLink>\n            </MenuItem>\n            <MenuItem icon={<Upload />}>\n              <NavLink to=\"/Upload\" onClick={handleToggleSidebar}>\n                {intl.formatMessage({ id: \"Upload\" })}\n              </NavLink>\n            </MenuItem>\n            {/* <MenuItem icon={<Star />}>\n              <NavLink to=\"/Favorites\" onClick={handleToggleSidebar}>\n                {intl.formatMessage({ id: \"Favorites\" })}\n              </NavLink>\n            </MenuItem> */}\n            {/* <SubMenu\n              title={intl.formatMessage({ id: \"Catagories\" })}\n              icon={<Category />}\n            >\n              <MenuItem>Clothes</MenuItem>\n              <MenuItem>Tech</MenuItem>\n              <MenuItem>Music</MenuItem>\n              <MenuItem>Gadgets</MenuItem>\n            </SubMenu> */}\n          </Menu>\n\n          <User handleToggleSidebar={handleToggleSidebar} />\n        </SidebarContent>\n        <SidebarFooter className=\"sideBarFooter\">\n          <div className=\"sidebar-btn-wrapper\">\n            <a\n              iconShape=\"circle\"\n              href=\"https://www.facebook.com/ReBuyPlatform\"\n              className=\"sidebar-btn\"\n            >\n              <span>\n                {\"    ReBuy \"} {new Date().getFullYear()}\n                {\"  \"}\n                <img\n                  src={logo}\n                  alt=\"Logo\"\n                  style={{\n                    width: \"1.5rem\",\n                    height: \"1.5rem\",\n                    filter: \"grayscale(100%)\",\n                    opacity: \"0.9\",\n                  }}\n                />\n                <Facebook />\n                <Instagram />\n              </span>\n            </a>\n          </div>\n        </SidebarFooter>\n      </ProSidebar>\n    </div>\n  );\n}\n",["141","142"],"/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/Client/src/Components/Pages/Home/Home.js",[],"/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/Client/src/Components/Pages/Settings/MainSettings.js",["143","144","145"],"/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/Client/src/Components/SSO/LogIn.js",["146","147"],"/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/Client/src/Components/NavBar/TopBar.js",["148","149"],"import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport logo from \"../../Assets/ReBuy.jpeg\";\r\n\r\nconst TopBar = ({\r\n  handleToggleSidebar,\r\n  notificationCount,\r\n  setNotificationCount,\r\n}) => {\r\n  // const dispatch = useDispatch();\r\n  // const notificationData = useSelector(\r\n  //   (state) => state.airTableData.Notification\r\n  // );\r\n  // useEffect(() => {\r\n  //   if (!notificationData) {\r\n  //     dispatch(fetchNotificationData());\r\n  //   }\r\n  // });\r\n  // const count = notificationData ? notificationData.length : null;\r\n  // setNotificationCount(count);\r\n  function notificationHandler() {\r\n    // if (count > 0 || notificationCount>0)\r\n    console.log(notificationCount);\r\n    if (notificationCount > 0)\r\n      return <span class=\"notification-count\">{notificationCount}</span>;\r\n    else return 0;\r\n  }\r\n\r\n  return (\r\n    <div className=\"topBar\" onLoad={handleToggleSidebar}>\r\n      <div className=\"logodiv\">\r\n        <Link to=\"/\" onClick={handleToggleSidebar}>\r\n          <img className=\"yavologo\" src={logo} alt=\"logo\" />\r\n        </Link>\r\n      </div>\r\n\r\n      <div className=\"tabs\">\r\n        {/* <div className=\"icons\">\r\n          <Link to=\"/notification\" onClick={handleToggleSidebar}>\r\n            <div class=\"notification-box\">\r\n              {notificationHandler}\r\n              <div class=\"notification-bell\">\r\n                <span class=\"bell-top\"></span>\r\n                <span class=\"bell-middle\"></span>\r\n                <span class=\"bell-bottom\"></span>\r\n                <span class=\"bell-rad\"></span>\r\n              </div>\r\n            </div>\r\n          </Link>\r\n        </div> */}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TopBar;\r\n\r\n{\r\n  /* <div className=\"title\">\r\n        <h1 className=\"titleh1\">Yavo</h1>\r\n        <Button to=\"/\" className=\"titlefast\" onClick={isCollapsed}>\r\n          Yavo\r\n        </Button>\r\n      </div> */\r\n}\r\n",["150","151"],"/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/Client/src/Components/NavBar/User.js",["152"],"/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/Client/src/Components/Utils/Page.js",["153"],"import React from \"react\";\nimport { useIntl } from \"react-intl\";\nimport PageBody from \"./PageBody\";\nimport LoadingOverlay from \"react-loading-overlay\";\nimport icon from \"../../Assets/Images/ReBuyLogoTrans.png\";\n\nexport default function Page({\n  onlyTop,\n  data,\n  title,\n  setTitle,\n  color,\n  boldPar,\n  par,\n  pic,\n  to,\n  button,\n  children,\n  loading,\n  setEdit,\n  edit,\n  share,\n  setShare,\n  dots,\n  editdisabled,\n  add,\n  FAB,\n  print,\n  setPrint,\n  printArr,\n  setPrintArr,\n  dataArr,\n  main,\n  shareRecord,\n  type,\n}) {\n  document.title = \"ReBuy | \" + title;\n  setTitle(title);\n  function Body() {\n    return children ? (\n      children\n    ) : !loading ? (\n      <PageBody\n        data={data}\n        color={color}\n        boldPar={boldPar}\n        par={par}\n        pic={pic}\n        to={to}\n        button={button}\n      />\n    ) : null;\n  }\n\n  return (\n    <div>\n      <LoadingOverlay\n        active={loading}\n        spinner={<img src={icon} className=\"pageLoader\" alt=\"loader\" />}\n        styles={{\n          wrapper: {},\n          overlay: (base) => ({\n            ...base,\n            height: \"110%\",\n            backgroundColor: \"#f5f7fb\",\n            opacity: \"0.7\",\n          }),\n        }}\n      >\n        {!loading ? (\n          <div className=\"page\">\n            <Body />\n          </div>\n        ) : null}\n      </LoadingOverlay>\n    </div>\n  );\n}\n","/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/Client/src/API/API.js",[],"/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/Client/src/Components/Utils/PopUp.js",["154","155","156","157"],"import React, { useState } from \"react\";\nimport {\n  Card,\n  CardContent,\n  CardActionArea,\n  CardMedia,\n  Typography,\n  Button,\n} from \"@material-ui/core\";\nimport reBuy from \"../../Assets/Images/ReBuyLogoBig.png\";\nimport Modal from \"react-modal\";\nimport { IoPinOutline } from \"react-icons/io5\";\nimport Carousel from \"react-bootstrap/Carousel\";\n\nexport default function Marker({\n  product,\n  images,\n  users,\n  setIsModelOpen,\n  isModelOpen,\n}) {\n  let img = product[\"image\"]\n    ? `http://localhost:3000/${product[\"images\"][0]}`\n    : reBuy;\n\n  return (\n    <div>\n      <Modal\n        style={{\n          overlay: {\n            zIndex: \"999\",\n            margin: \"auto\",\n          },\n          content: {\n            inset: \"0px\",\n            height: \"fit-content\",\n            width: \"fit-content\",\n            direction: \"rtl\",\n            // padding: \"10px\",\n            margin: \"auto\",\n            borderRadius: \"15px\",\n            boxShadow: \"1px 1px 5px 1px #e5eefa\",\n          },\n        }}\n        isOpen={isModelOpen}\n        onRequestClose={() => setIsModelOpen(false)}\n      >\n        {product && (\n          <Card\n            style={{\n              margin: \"1rem\",\n              maxWidth: 300,\n              minWidth: 100,\n              height: \"fit-content\",\n              border: \"1px solid #ececec\",\n              borderRadius: \"15px\",\n            }}\n          >\n            {product[\"images\"] && images && (\n              <Carousel>\n                {images.map(\n                  (Image) =>\n                    product[\"images\"].some((id) => id === Image._id) && (\n                      <Carousel.Item style={{ width: \"100%\", height: \"10rem\" }}>\n                        <img\n                          className=\"d-block w-100\"\n                          style={{ width: \"100%\", height: \"100%\" }}\n                          src={`data:${Image[\"contentType\"]};base64,${Image[\"imageBase64\"]}`}\n                          alt={Image[\"fileName\"]}\n                        />\n                      </Carousel.Item>\n                    )\n                )}\n              </Carousel>\n            )}{\" \"}\n            <CardActionArea\n              // onClick={(e) => cardOnClickHandler(e, product[\"_id\"])}\n              onClick={() => setIsModelOpen(true)}\n            >\n              <CardContent>\n                <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                  {/* <p>{product[\"name\"]}</p>    */}\n                  <p\n                    style={{\n                      height: \"6rem\",\n                      overflow: \"scroll\",\n                      justifyContent: \"center\",\n                    }}\n                  >\n                    {product[\"name\"]}\n                  </p>\n                  <p>{product[\"price\"]}₪</p>\n                </Typography>\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                  {users.some((user) => user._id === product[\"owner\"]) && (\n                    <div\n                      style={{\n                        backgroundColor: \"#ececec\",\n                        borderRadius: \"15px\",\n                      }}\n                    >\n                      <p>\n                        {\n                          users.find((user) => user._id === product[\"owner\"])[\n                            \"name\"\n                          ]\n                        }\n                      </p>\n                      <p>\n                        Phone:{\" \"}\n                        {\n                          users.find((user) => user._id === product[\"owner\"])[\n                            \"phone\"\n                          ]\n                        }\n                      </p>\n                    </div>\n                  )}\n                  <p>Description: {product[\"description\"]}</p>\n                  <p>Condition: {product[\"condition\"]}</p>\n                  <p>Category: {product[\"category\"]}</p>\n                  <p>Address: {product[\"address\"]}</p>\n                </Typography>\n              </CardContent>\n            </CardActionArea>\n          </Card>\n\n          // <Card\n          //   style={{\n          //     width: \"20rem\",\n          //     height: \"fit-content\",\n          //     border: \"1px solid #ececec\",\n          //     borderRadius: \"15px\",\n          //     justifyContent: \"center\",\n          //     alignItems: \"center\",\n          //     textAlign: \"center\",\n          //   }}\n          // >\n          //   <CardActionArea>\n          //     {product[\"images\"] && images && (\n          //       <Carousel>\n          //         {images.map(\n          //           (Image) =>\n          //             product[\"images\"].some((id) => id === Image._id) && (\n          //               <Carousel.Item>\n          //                 <img\n          //                   style={{ width: \"100%\", height: \"10%\" }}\n          //                   src={`data:${Image[\"contentType\"]};base64,${Image[\"imageBase64\"]}`}\n          //                   alt={Image[\"fileName\"]}\n          //                 />\n          //               </Carousel.Item>\n          //             )\n          //         )}\n          //       </Carousel>\n          //     )}\n          //     <CardContent>\n          //       <Typography gutterBottom variant=\"h5\" component=\"h2\">\n          //         <p>{product[\"name\"]}</p>\n          //         <p>{product[\"price\"]}</p>\n          //       </Typography>\n          //       <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n          //         <p>Seller:{product[\"ownerId\"]}</p>\n          //         <p>Description:{product[\"description\"]}</p>\n          //         <p>Condition:{product[\"condition\"]}</p>\n          //       </Typography>\n          //     </CardContent>\n          //   </CardActionArea>\n          // </Card>\n        )}\n      </Modal>\n    </div>\n  );\n}\n","/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/Client/src/Components/Pages/Map/Marker.js",["158","159","160","161","162","163","164"],"import React, { useState } from \"react\";\nimport {\n  Card,\n  CardContent,\n  CardActionArea,\n  CardMedia,\n  Typography,\n  Button,\n} from \"@material-ui/core\";\nimport reBuy from \"../../../Assets/Images/ReBuyLogoBig.png\";\nimport Modal from \"react-modal\";\nimport { IoPinOutline } from \"react-icons/io5\";\nimport Carousel from \"react-bootstrap/Carousel\";\nimport PopUp from \"../../Utils/PopUp\";\n\nexport default function Marker({ product, images, users, $hover }) {\n  const [isModelOpen, setIsModelOpen] = useState(false);\n  return (\n    <div>\n      <PopUp\n        product={product}\n        images={images}\n        users={users}\n        isModelOpen={isModelOpen}\n        setIsModelOpen={setIsModelOpen}\n      />\n      <Button size=\"small\" onClick={() => setIsModelOpen(true)}>\n        {product[\"images\"] && images ? (\n          <Carousel>\n            {images.map(\n              (Image) =>\n                product[\"images\"].some((id) => id === Image._id) && (\n                  <Carousel.Item>\n                    <img\n                      className={\"circleImg\"}\n                      style={{ width: \"3rem\", height: \"3rem\" }}\n                      src={`data:${Image[\"contentType\"]};base64,${Image[\"imageBase64\"]}`}\n                      alt={Image[\"fileName\"]}\n                    />\n                  </Carousel.Item>\n                )\n            )}\n          </Carousel>\n        ) : (\n          <img src={reBuy} alt=\"marker\" className={\"circleImg\"} />\n        )}\n      </Button>\n    </div>\n  );\n}\n","/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/Client/src/Components/NavBar/MobileBar.js",["165"],"import { Link } from \"react-router-dom\";\nimport Icon from \"../../Assets/Images/ReBuyLogoTrans.png\";\n\nexport default function MobileBar({\n  handleToggleSidebar,\n  notificationCount,\n  setNotificationCount,\n}) {\n  function notificationHandle() {\n    if (notificationCount > 0)\n      return (\n        <span\n          class=\"notification-count\"\n          style={{\n            backgroundColor: \"red\",\n            borderRadius: \"500px\",\n            padding: \"2px 4px\",\n            fontSize: \"10px\",\n            fontWeight: \"700\",\n            lineHeight: \"100%\",\n            right: \"-15px\",\n            top: \"5px\",\n          }}\n        >\n          {notificationCount}\n        </span>\n      );\n  }\n\n  return (\n    <div className=\"toggledBar\">\n      <table width=\"100%\">\n        <tr width=\"100%\">\n          <td width=\"10%\">\n            <div className=\"btn-toggle\" onClick={handleToggleSidebar}>\n              <div class=\"wrapper-menu\">\n                <div class=\"line-menu half start\" />\n                <div class=\"line-menu\" />\n                <div class=\"line-menu half end\" />\n              </div>\n            </div>\n          </td>\n          <td width=\"80%\">\n            <Link to=\"/\">\n              <div className=\"logodiv\">\n                <img className=\"yavologo\" src={Icon} alt=\"logo\" />\n              </div>\n            </Link>\n          </td>\n          <td width=\"10%\">\n            {/* <Link to=\"/notification\">\n              <div class=\"notification notify\">\n                {notificationHandle}\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  width=\"25\"\n                  height=\"25\"\n                  viewBox=\"0 0 24 24\"\n                  fill=\"none\"\n                  stroke=\"#ADAFDE\"\n                  stroke-width=\"2\"\n                  stroke-linecap=\"round\"\n                  stroke-linejoin=\"round\"\n                >\n                  <path d=\"M18 8A6 6 0 0 0 6 8c0 7-3 9-3 9h18s-3-2-3-9\"></path>\n                  <path d=\"M13.73 21a2 2 0 0 1-3.46 0\"></path>\n                </svg>\n              </div>\n            </Link> */}\n          </td>\n        </tr>\n      </table>\n    </div>\n  );\n}\n","/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/Client/src/Components/Pages/Home/Groupby.js",["166","167","168","169","170","171","172","173","174"],"/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/Client/src/Components/Utils/PageBody.js",["175","176","177"],"import React from \"react\";\nimport { IoLogoBuffer, IoAdd } from \"react-icons/io5\";\nimport { Button } from \"@material-ui/core\";\nimport { Link } from \"react-router-dom\";\n\nexport default function PageBody({ color, boldPar, par, pic, to, button }) {\n  return (\n    <div\n      style={{\n        textAlign: \"center\",\n        margin: \"2rem\",\n        height: \"90%\",\n        borderRadius: \"50px\",\n        backgroundColor: color,\n        color: \"gray\",\n      }}\n    >\n      <img src={pic} style={{ marginTop: \"40px\", height: \"50px\" }} />\n      <p style={{ margin: \"2rem\" }}>\n        <b style={{ display: \"block\" }}>{boldPar}</b> {par}\n      </p>\n      <Link to={to}>\n        <Button\n          style={{\n            textAlign: \"center\",\n            margin: \"1rem\",\n            padding: \"1rem\",\n            height: \"90%\",\n            textOverflow: \"ellipsis\",\n            whiteSpace: \"nowrap\",\n            width: \"auto\",\n            background: \"#343798\",\n            color: \"white\",\n            borderRadius: \"66px 66px 66px 66px\",\n            boxShadow: \"0px 0px 10px 0px\",\n          }}\n        >\n          <h5>{button}</h5>\n        </Button>\n      </Link>\n    </div>\n  );\n}\n","/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/Client/src/Components/Pages/Map/GoogleMap.js",["178"],"import React, { Component } from \"react\";\nimport api from \"../../../API/API\";\nimport GoogleMapReact from \"google-map-react\";\nimport Marker from \"./Marker\";\nimport Geocode from \"react-geocode\";\nimport Search from \"../Home/Search\";\nGeocode.setApiKey(\"AIzaSyDzTw-IhXNRYDH1QpvVVNp_ix9AzFC0McM\");\nGeocode.setLanguage(\"He\");\nGeocode.setRegion(\"Il\");\nGeocode.setLocationType(\"ROOFTOP\");\nGeocode.enableDebug();\n\nexport default class GoogleMap extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      products: [],\n      images: [],\n      users: [],\n      locations: [{}],\n      center: {\n        lat: 31.96996095111596,\n        lng: 34.77278720495645,\n      },\n      zoom: 10,\n      setLoading: this.props.setLoading,\n    };\n    this.state.setLoading(true);\n  }\n\n  componentDidMount = async () => {\n    this.state.setLoading(false);\n    try {\n      await api.getAllProducts().then((product) => {\n        this.setState({\n          products: product.data.data,\n        });\n      });\n      await api.getAllImages().then((image) => {\n        this.setState({\n          images: image.data.data,\n        });\n      });\n      await api.getAllUsers().then((user) => {\n        this.setState({\n          users: user.data.data,\n        });\n      });\n      this.state.setLoading(false);\n    } catch (error) {\n      console.log(error);\n    }\n    this.state.products.map(\n      (p, i) =>\n        p[\"address\"] &&\n        Geocode.fromAddress(p[\"address\"]).then(\n          // Geocode.fromAddress(\"RISHON-LE-ZION\").then(\n          (response) => {\n            var { lat, lng } = response.results[0].geometry.location;\n            lat = lat + i * 0.005;\n            lng = lng + i * 0.005;\n            this.setState({\n              locations: this.state.locations.concat([{ lat, lng }]),\n            });\n            // console.log(this.state.locations);\n          },\n          (error) => {\n            console.error(error);\n          }\n        )\n    );\n    this.setState((state) => {\n      const [first, ...rest] = state.locations;\n      return {\n        locations: rest,\n      };\n    });\n  };\n  searchHandler = (products) => {\n    this.setState({\n      products,\n    });\n  };\n  render() {\n    const { products, images,users, center, zoom, locations } = this.state;\n    function getMapOptions(maps) {\n      return {\n        streetViewControl: true,\n        scaleControl: true,\n        fullscreenControl: true,\n        styles: [\n          {\n            featureType: \"poi.business\",\n            elementType: \"labels\",\n            stylers: [\n              {\n                visibility: \"off\",\n              },\n            ],\n          },\n        ],\n        gestureHandling: \"greedy\",\n        disableDoubleClickZoom: true,\n        minZoom: 0,\n        maxZoom: 30,\n        layerTypes: [\"TrafficLayer\"],\n        mapTypeControl: true,\n        mapTypeId: maps.MapTypeId.ROADMAP,\n        mapTypeControlOptions: {\n          style: maps.MapTypeControlStyle.DROPDOWN_MENU,\n          position: maps.ControlPosition.RIGHT_CENTER,\n          mapTypeIds: [\n            maps.MapTypeId.ROADMAP,\n            maps.MapTypeId.SATELLITE,\n            maps.MapTypeId.HYBRID,\n          ],\n        },\n        zoomControl: true,\n        clickableIcons: false,\n      };\n    }\n\n    return (\n      <>\n        <div\n          style={{\n            position: \"absolute\",\n            top: \"3rem\",\n            alignItems: \"center\",\n            width: \"min-content\",\n            padding: \"2rem\",\n            zIndex: \"99\",\n          }}\n        >\n          <Search\n            searchHandler={this.searchHandler}\n            style={{ position: \"absolute\" }}\n          />\n        </div>\n        <div style={{ height: \"96vh\", width: \"100%\" }}>\n          <GoogleMapReact\n            bootstrapURLKeys={{\n              key: \"AIzaSyAiTqUoIPktHrM66nIC7fRevgXvj7BzN-A\",\n              language: \"he\",\n              region: \"il\",\n            }}\n            defaultCenter={center}\n            defaultZoom={zoom}\n            options={getMapOptions}\n          >\n            {products.map((product, i) => {\n              return (\n                <Marker\n                  lat={locations[i] ? locations[i].lat : null}\n                  lng={locations[i] ? locations[i].lng : null}\n                  product={product}\n                  images={images}\n                  users={users}\n                  key={product[\"name\"]}\n                />\n              );\n            })}\n          </GoogleMapReact>\n        </div>\n        )\n      </>\n    );\n  }\n}\n","/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/Client/src/Components/Pages/Home/Products.js",["179","180","181","182","183"],"import React, { Component, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport api from \"../../../API/API\";\nimport styled from \"styled-components\";\nimport \"react-table/index\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Search from \"./Search\";\nimport Groupby from \"./Groupby\";\nimport Sort from \"./Sort\";\nimport { Link } from \"react-router-dom\";\nimport StarBorderIcon from \"@material-ui/icons/StarBorder\";\nimport {\n  Card,\n  CardContent,\n  CardActionArea,\n  CardActions,\n  CardMedia,\n  Typography,\n  Button,\n  GridList,\n  GridListTile,\n  GridListTileBar,\n} from \"@material-ui/core\";\nimport Carousel from \"react-bootstrap/Carousel\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport PopUp from \"../../Utils/PopUp\";\n\nconst Wrapper = styled.div`\n  padding: 0 40px 40px 40px;\n`;\n\nconst Update = styled.div`\n  color: #ef9b0f;\n  cursor: pointer;\n`;\n\nconst Delete = styled.div`\n  color: #ff0000;\n  cursor: pointer;\n`;\n\nfunction UpdateProduct({ id }) {\n  const history = useHistory();\n\n  const updateUser = (event) => {\n    event.preventDefault();\n    history.push(`/Update/${id}`);\n  };\n  return <Update onClick={updateUser}>Update</Update>;\n}\n\nclass DeleteProduct extends Component {\n  constructor() {\n    super();\n  }\n  deleteUser = (event) => {\n    event.preventDefault();\n\n    if (\n      window.confirm(\n        `Do tou want to delete the product ${this.props.id} permanently?`\n      )\n    ) {\n      api\n        .deleteProductById(this.props.id)\n        .then((res) => {\n          this.props.deleteHandler(res.data);\n        })\n        .catch((err) => console.log(err));\n      console.log(\"after res\");\n      // window.location.reload();\n    }\n  };\n\n  render() {\n    return <Delete onClick={this.deleteUser}>DELETE</Delete>;\n  }\n}\n\nexport default class ProductsList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      products: [],\n      images: [],\n      users: [],\n      columns: [],\n      isLoading: this.props.loading,\n      imagePath: \"\",\n      setLoading: this.props.setLoading,\n    };\n  }\n\n  componentDidMount = async () => {\n    this.state.setLoading(false);\n    try {\n      await api.getAllProducts().then((product) => {\n        this.setState({\n          products: product.data.data,\n        });\n      });\n      await api.getAllImages().then((image) => {\n        this.setState({\n          images: image.data.data,\n        });\n      });\n      await api.getAllUsers().then((user) => {\n        this.setState({\n          users: user.data.data,\n        });\n      });\n\n      this.state.setLoading(false);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  searchHandler = (products) => {\n    this.setState({\n      products,\n    });\n  };\n  deleteHandler = (productId) => {\n    this.setState({\n      products: this.state.products.filter((product) => {\n        return product._id !== productId.data._id;\n      }),\n    });\n  };\n  render() {\n    const { products, images, users } = this.state;\n    // console.log(users);\n\n    return (\n      <Wrapper>\n        <h1>Market</h1>\n        <Search searchHandler={this.searchHandler} />\n        {/* <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n          <Sort searchHandler={this.searchHandler} />\n          <Groupby searchHandler={this.searchHandler} />\n        </div> */}\n        <div\n          style={{\n            display: \"flex\",\n            flexDirection: \"row\",\n            width: \"100%\",\n            textAlign: \"center\",\n            justifyContent: \"center\",\n          }}\n        >\n          <Sort searchHandler={this.searchHandler} />\n          <Groupby searchHandler={this.searchHandler} />\n        </div>\n\n        <CardLine\n          products={products}\n          images={images}\n          users={users}\n          deleteHandler={this.deleteHandler}\n          from={0}\n          to={50}\n        />\n        <CardLine\n          products={products}\n          images={images}\n          users={users}\n          deleteHandler={this.deleteHandler}\n          from={50}\n          to={100}\n        />\n        {this.props.setLoading(false)}\n      </Wrapper>\n    );\n  }\n}\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    justifyContent: \"space-around\",\n    overflow: \"hidden\",\n    direction: \"ltr\",\n  },\n  gridList: {\n    flexWrap: \"nowrap\",\n    transform: \"translateZ(0)\",\n  },\n  tile: {\n    height: \"100%\",\n  },\n  title: {\n    color: theme.palette.primary.light,\n  },\n  titleBar: {\n    background:\n      \"linear-gradient(to top, rgba(0,0,0,0.7) 0%, rgba(0,0,0,0.3) 70%, rgba(0,0,0,0) 100%)\",\n  },\n}));\n\nexport function CardLine({ products, images, users, deleteHandler, from, to }) {\n  const classes = useStyles();\n  const [isModelOpen, setIsModelOpen] = useState(false);\n\n  return (\n    <div className={classes.root}>\n      <GridList className={classes.gridList} cols={3}>\n        {products &&\n          products.slice(from, to).map((product, i) => (\n            <GridListTile\n              style={{ height: \"100%\", width: \"fit-content\" }}\n              key={product[\"name\"]}\n            >\n              <PopUp\n                product={product}\n                users={users}\n                images={images}\n                isModelOpen={isModelOpen}\n                setIsModelOpen={setIsModelOpen}\n              />\n              <Card\n                style={{\n                  margin: \"1rem\",\n                  maxWidth: 300,\n                  minWidth: 100,\n                  height: \"fit-content\",\n                  border: \"1px solid #ececec\",\n                  borderRadius: \"15px\",\n                }}\n              >\n                {product[\"images\"] && images && (\n                  <Carousel>\n                    {images.map(\n                      (Image) =>\n                        product[\"images\"].some((id) => id === Image._id) && (\n                          <Carousel.Item\n                            style={{ width: \"100%\", height: \"10rem\" }}\n                          >\n                            <img\n                              className=\"d-block w-100\"\n                              style={{ width: \"100%\", height: \"100%\" }}\n                              src={`data:${Image[\"contentType\"]};base64,${Image[\"imageBase64\"]}`}\n                              alt={Image[\"fileName\"]}\n                            />\n                          </Carousel.Item>\n                        )\n                    )}\n                  </Carousel>\n                )}{\" \"}\n                <CardActionArea\n                  // onClick={(e) => cardOnClickHandler(e, product[\"_id\"])}\n                  onClick={() => setIsModelOpen(true)}\n                >\n                  <CardContent>\n                    <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                      {/* <p>{product[\"name\"]}</p>    */}\n                      <p\n                        style={{\n                          height: \"6rem\",\n                          overflow: \"scroll\",\n                          justifyContent: \"center\",\n                        }}\n                      >\n                        {product[\"name\"]}\n                      </p>\n                      <p>{product[\"price\"]}₪</p>\n                    </Typography>\n                    <Typography\n                      variant=\"body2\"\n                      color=\"textSecondary\"\n                      component=\"p\"\n                    >\n                      {users.some((user) => user._id === product[\"owner\"]) && (\n                        <div\n                          style={{\n                            backgroundColor: \"#ececec\",\n                            borderRadius: \"15px\",\n                          }}\n                        >\n                          <p>\n                            {\n                              users.find(\n                                (user) => user._id === product[\"owner\"]\n                              )[\"name\"]\n                            }\n                          </p>\n                          <p>\n                            Phone:{\" \"}\n                            {\n                              users.find(\n                                (user) => user._id === product[\"owner\"]\n                              )[\"phone\"]\n                            }\n                          </p>\n                        </div>\n                      )}\n                      <p>Description: {product[\"description\"]}</p>\n                      <p>Condition: {product[\"condition\"]}</p>\n                      <p>Category: {product[\"category\"]}</p>\n                      <p>Address: {product[\"address\"]}</p>\n                    </Typography>\n                  </CardContent>\n                </CardActionArea>\n                <CardActions style={{ justifyContent: \"center\" }}>\n                  <Button size=\"small\" color=\"primary\">\n                    <DeleteProduct\n                      id={product[\"_id\"]}\n                      deleteHandler={deleteHandler}\n                    />\n                  </Button>\n                  <Button size=\"small\" color=\"primary\">\n                    <StarBorderIcon />\n                  </Button>\n                  <Button size=\"small\" color=\"primary\">\n                    <UpdateProduct id={product[\"_id\"]} />\n                  </Button>\n                </CardActions>\n              </Card>\n            </GridListTile>\n          ))}\n      </GridList>\n    </div>\n  );\n}\n","/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/Client/src/Components/Pages/Home/Search.js",["184","185","186"],"import React, { useState } from \"react\";\nimport { Form, Button, Col } from \"react-bootstrap\";\nimport api from \"../../../API/API\";\nimport Sort from \"./Sort\";\nimport Groupby from \"./Groupby\";\n\nfunction Search(props) {\n  const [query, setQuery] = useState(\"\");\n  const [condition, setCondition] = useState(\"\");\n  const [category, setCategory] = useState(\"\");\n  const [price, setPrice] = useState(\"\");\n\n  const changeHandler = async (e) => {\n    setQuery(e.target.value);\n    await api\n      .search(query)\n      .then((res) => {\n        props.searchHandler(res.data);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n  // const clickHandler = async () => {\n  //   await api\n  //     .search(query)\n  //     .then((res) => {\n  //       props.searchHandler(res.data);\n  //     })\n  //     .catch((err) => {\n  //       console.log(err);\n  //     });\n  // };\n  const clickHandler = async () => {\n    await api\n      .search(category, condition, price)\n      .then((res) => {\n        props.searchHandler(res.data);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n  const conditionChangeHandler = (e) => {\n    setCondition(e.target.value);\n  };\n  const categoryChangeHandler = (e) => {\n    setCategory(e.target.value);\n  };\n  const priceChangeHandler = (e) => {\n    setPrice(e.target.value);\n  };\n  const categoryArray = [\n    \"Sport\",\n    \"Clothing\",\n    \"Electricity\",\n    \"Underwear\",\n    \"Swimwear\",\n    \"Homecare\",\n    \"Plants\",\n    \"Activewear\",\n    \"Jewlery\",\n    \"Other\",\n  ];\n  return (\n    // <Form>\n    //   <Form.Group controlId=\"formGroupEmail\">\n    //     <Form.Label>Search Product</Form.Label>\n    //     <Form.Control\n    //       type=\"text\"\n    //       style={{ direction: \"ltr\" }}\n    //       placeholder=\"Enter search\"\n    //       onChange={(e) => changeHandler(e)}\n    //     />\n    //     <Button onClick={clickHandler}>Search</Button>\n    //   </Form.Group>\n    // </Form>\n    <Form>\n      <Form.Row style={{ direction: \"ltr\" }}>\n        <Form.Group as={Col} controlId=\"formGridPassword\">\n          <Form.Label>Price</Form.Label>\n          <Form.Control as=\"select\" onChange={(e) => priceChangeHandler(e)}>\n            <option></option>\n            <option>less than 500</option>\n            <option>500-1000</option>\n            <option>1000-5000</option>\n            <option>5000+</option>\n          </Form.Control>\n        </Form.Group>\n        <Form.Group as={Col} controlId=\"formGridPassword\">\n          <Form.Label>Category</Form.Label>\n          <Form.Control as=\"select\" onChange={(e) => categoryChangeHandler(e)}>\n            <option></option>\n            {categoryArray.map((category) => {\n              return <option>{category}</option>;\n            })}\n          </Form.Control>\n        </Form.Group>\n        <Form.Group as={Col} controlId=\"formGridEmail\">\n          <Form.Label>Condition</Form.Label>\n\n          <Form.Control as=\"select\" onChange={(e) => conditionChangeHandler(e)}>\n            <option></option>\n            <option>NEW</option>\n            <option>USED</option>\n          </Form.Control>\n        </Form.Group>\n      </Form.Row>\n      <Button onClick={clickHandler}>Search</Button>\n    </Form>\n  );\n}\n\nexport default Search;\n","/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/Client/src/Components/Pages/Home/Sort.js",["187","188"],"/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/Client/src/Components/Pages/Map/Map.js",[],"/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/Client/src/Components/SSO/SignUp.js",["189","190"],"import React, { useContext, useState } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport firebaseConfig from \"./Config\";\nimport { AuthContext } from \"./Auth\";\nimport api from \"../../API/API\";\nimport { Form, Col, Row, Button } from \"react-bootstrap\";\n\nexport default function SignUp({ setRegistered }) {\n  const [signdUp, setsigndUp] = useState(false);\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const { name, phone, email, password } = e.target.elements;\n    console.log(e.target[4].files[0]);\n    const file = e.target[4].files[0];\n    try {\n      console.log(name.value + phone.value + email.value + file);\n      let data = new FormData();\n      data.append(\"name\", name.value);\n      data.append(\"phone\", phone.value);\n      data.append(\"email\", email.value);\n      data.append(\"image\", file);\n\n      await api\n        .insertUser(data)\n        .then((res) => {\n          window.alert(`User inserted successfully`);\n          firebaseConfig\n            .auth()\n            .createUserWithEmailAndPassword(email.value, password.value)\n            .then(function (result) {\n              return result.user.updateProfile({\n                displayName: name.value,\n              });\n            })\n            .catch((error) => {\n              console.log(error);\n              alert(error);\n            });\n        })\n        .catch((error) => {\n          console.log(error);\n          alert(error);\n        });\n    } catch (error) {\n      alert(error);\n    }\n  };\n\n  const { currentUser } = useContext(AuthContext);\n  if (currentUser) {\n    console.log(currentUser);\n    return <Redirect to=\"/\" />;\n  }\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Form.Label as=\"h1\">Sign Up</Form.Label>\n      <Form.Group as={Row} controlId=\"formPlaintextEmail\">\n        <Form.Label column sm=\"4\">\n          Full Name\n        </Form.Label>\n        <Col sm=\"8\">\n          <Form.Control type=\"text\" name=\"name\" placeholder=\"Name\" />\n        </Col>\n      </Form.Group>\n      <Form.Group as={Row} controlId=\"formPlaintextEmail\">\n        <Form.Label column sm=\"4\">\n          Phone\n        </Form.Label>\n        <Col sm=\"8\">\n          <Form.Control type=\"number\" name=\"phone\" placeholder=\"Phone Number\" />\n        </Col>\n      </Form.Group>\n      <Form.Group as={Row} controlId=\"formPlaintextEmail\">\n        <Form.Label column sm=\"4\">\n          Email\n        </Form.Label>\n        <Col sm=\"8\">\n          <Form.Control type=\"email\" name=\"email\" placeholder=\"Email\" />\n        </Col>\n      </Form.Group>\n      <Form.Group as={Row} controlId=\"formPlaintextPassword\">\n        <Form.Label column sm=\"4\">\n          Password\n        </Form.Label>\n        <Col sm=\"8\">\n          <Form.Control\n            type=\"password\"\n            name=\"password\"\n            placeholder=\"Password\"\n          />\n        </Col>\n      </Form.Group>\n      <Form.Group as={Row} controlId=\"formPlaintextPassword\">\n        <Form.Label column sm=\"4\">\n          Profile Photo\n        </Form.Label>\n        <Col sm=\"8\">\n          <Form.Control type=\"file\" name=\"image\" id=\"image\" />\n        </Col>\n      </Form.Group>\n      {/* <Form.Group as={Row} controlId=\"formPlaintextPassword\">\n              <Form.Label column sm=\"4\">\n                Confirm Password\n              </Form.Label>\n              <Col sm=\"8\">\n                <Form.Control type=\"password\" placeholder=\"Confirm Password\" />\n              </Col>\n            </Form.Group> */}\n\n      <Button variant=\"primary\" type=\"submit\" size=\"lg\">\n        Sign Up\n      </Button>\n      <div style={{ margin: \"1rem\" }}>\n        Already Registered?{\" \"}\n        <Button onClick={() => setRegistered(true)}>Login?</Button>\n      </div>\n    </Form>\n  );\n}\n","/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/Client/src/Components/Pages/Home/Create.js",["191"],"/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/Client/src/Components/SSO/Auth.js",[],"/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/Client/src/Components/Pages/Settings/ProfileSettings.js",["192","193","194","195","196"],"/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/Client/src/Components/Pages/Home/CardList.js",["197","198","199","200","201","202","203","204","205"],"/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/Client/src/index.js",[],"/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/Client/src/Styles/MessagesMain.js",[],"/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/Client/src/Components/SSO/Registration.js",[],"/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/Client/src/Components/Pages/Home/Update.js",["206","207"],{"ruleId":"208","severity":1,"message":"209","line":2,"column":40,"nodeType":"210","messageId":"211","endLine":2,"endColumn":44},{"ruleId":"208","severity":1,"message":"212","line":24,"column":10,"nodeType":"210","messageId":"211","endLine":24,"endColumn":15},{"ruleId":"208","severity":1,"message":"213","line":25,"column":28,"nodeType":"210","messageId":"211","endLine":25,"endColumn":47},{"ruleId":"214","replacedBy":"215"},{"ruleId":"216","replacedBy":"217"},{"ruleId":"208","severity":1,"message":"218","line":11,"column":3,"nodeType":"210","messageId":"211","endLine":11,"endColumn":10},{"ruleId":"208","severity":1,"message":"219","line":16,"column":8,"nodeType":"210","messageId":"211","endLine":16,"endColumn":16},{"ruleId":"208","severity":1,"message":"220","line":17,"column":8,"nodeType":"210","messageId":"211","endLine":17,"endColumn":12},{"ruleId":"214","replacedBy":"221"},{"ruleId":"216","replacedBy":"222"},{"ruleId":"208","severity":1,"message":"223","line":1,"column":17,"nodeType":"210","messageId":"211","endLine":1,"endColumn":26},{"ruleId":"208","severity":1,"message":"224","line":5,"column":10,"nodeType":"210","messageId":"211","endLine":5,"endColumn":15},{"ruleId":"208","severity":1,"message":"225","line":5,"column":17,"nodeType":"210","messageId":"211","endLine":5,"endColumn":25},{"ruleId":"208","severity":1,"message":"226","line":5,"column":3,"nodeType":"210","messageId":"211","endLine":5,"endColumn":22},{"ruleId":"208","severity":1,"message":"227","line":33,"column":13,"nodeType":"210","messageId":"211","endLine":33,"endColumn":18},{"ruleId":"208","severity":1,"message":"228","line":21,"column":12,"nodeType":"210","messageId":"211","endLine":21,"endColumn":31},{"ruleId":"229","severity":1,"message":"230","line":58,"column":1,"nodeType":"231","messageId":"232","endLine":65,"endColumn":2},{"ruleId":"214","replacedBy":"233"},{"ruleId":"216","replacedBy":"234"},{"ruleId":"208","severity":1,"message":"235","line":5,"column":19,"nodeType":"210","messageId":"211","endLine":5,"endColumn":27},{"ruleId":"208","severity":1,"message":"236","line":2,"column":10,"nodeType":"210","messageId":"211","endLine":2,"endColumn":17},{"ruleId":"208","severity":1,"message":"237","line":1,"column":17,"nodeType":"210","messageId":"211","endLine":1,"endColumn":25},{"ruleId":"208","severity":1,"message":"238","line":6,"column":3,"nodeType":"210","messageId":"211","endLine":6,"endColumn":12},{"ruleId":"208","severity":1,"message":"239","line":8,"column":3,"nodeType":"210","messageId":"211","endLine":8,"endColumn":9},{"ruleId":"208","severity":1,"message":"240","line":12,"column":10,"nodeType":"210","messageId":"211","endLine":12,"endColumn":22},{"ruleId":"208","severity":1,"message":"241","line":3,"column":3,"nodeType":"210","messageId":"211","endLine":3,"endColumn":7},{"ruleId":"208","severity":1,"message":"242","line":4,"column":3,"nodeType":"210","messageId":"211","endLine":4,"endColumn":14},{"ruleId":"208","severity":1,"message":"243","line":5,"column":3,"nodeType":"210","messageId":"211","endLine":5,"endColumn":17},{"ruleId":"208","severity":1,"message":"238","line":6,"column":3,"nodeType":"210","messageId":"211","endLine":6,"endColumn":12},{"ruleId":"208","severity":1,"message":"244","line":7,"column":3,"nodeType":"210","messageId":"211","endLine":7,"endColumn":13},{"ruleId":"208","severity":1,"message":"245","line":11,"column":8,"nodeType":"210","messageId":"211","endLine":11,"endColumn":13},{"ruleId":"208","severity":1,"message":"240","line":12,"column":10,"nodeType":"210","messageId":"211","endLine":12,"endColumn":22},{"ruleId":"208","severity":1,"message":"246","line":9,"column":12,"nodeType":"210","messageId":"211","endLine":9,"endColumn":30},{"ruleId":"208","severity":1,"message":"247","line":2,"column":24,"nodeType":"210","messageId":"211","endLine":2,"endColumn":27},{"ruleId":"208","severity":1,"message":"248","line":6,"column":10,"nodeType":"210","messageId":"211","endLine":6,"endColumn":18},{"ruleId":"208","severity":1,"message":"249","line":8,"column":10,"nodeType":"210","messageId":"211","endLine":8,"endColumn":15},{"ruleId":"250","severity":1,"message":"251","line":10,"column":13,"nodeType":"252","endLine":20,"endColumn":4},{"ruleId":"229","severity":1,"message":"230","line":79,"column":1,"nodeType":"231","messageId":"232","endLine":81,"endColumn":2},{"ruleId":"229","severity":1,"message":"230","line":82,"column":1,"nodeType":"231","messageId":"232","endLine":84,"endColumn":2},{"ruleId":"229","severity":1,"message":"230","line":85,"column":1,"nodeType":"231","messageId":"232","endLine":92,"endColumn":2},{"ruleId":"229","severity":1,"message":"230","line":93,"column":1,"nodeType":"231","messageId":"232","endLine":95,"endColumn":2},{"ruleId":"229","severity":1,"message":"230","line":96,"column":1,"nodeType":"231","messageId":"232","endLine":98,"endColumn":2},{"ruleId":"208","severity":1,"message":"253","line":2,"column":10,"nodeType":"210","messageId":"211","endLine":2,"endColumn":22},{"ruleId":"208","severity":1,"message":"254","line":2,"column":24,"nodeType":"210","messageId":"211","endLine":2,"endColumn":29},{"ruleId":"255","severity":1,"message":"256","line":18,"column":7,"nodeType":"257","endLine":18,"endColumn":70},{"ruleId":"208","severity":1,"message":"258","line":73,"column":14,"nodeType":"210","messageId":"211","endLine":73,"endColumn":19},{"ruleId":"208","severity":1,"message":"259","line":7,"column":8,"nodeType":"210","messageId":"211","endLine":7,"endColumn":18},{"ruleId":"208","severity":1,"message":"209","line":11,"column":10,"nodeType":"210","messageId":"211","endLine":11,"endColumn":14},{"ruleId":"208","severity":1,"message":"238","line":18,"column":3,"nodeType":"210","messageId":"211","endLine":18,"endColumn":12},{"ruleId":"208","severity":1,"message":"260","line":23,"column":3,"nodeType":"210","messageId":"211","endLine":23,"endColumn":18},{"ruleId":"261","severity":1,"message":"262","line":54,"column":3,"nodeType":"263","messageId":"264","endLine":56,"endColumn":4},{"ruleId":"208","severity":1,"message":"265","line":4,"column":8,"nodeType":"210","messageId":"211","endLine":4,"endColumn":12},{"ruleId":"208","severity":1,"message":"266","line":5,"column":8,"nodeType":"210","messageId":"211","endLine":5,"endColumn":15},{"ruleId":"208","severity":1,"message":"267","line":13,"column":9,"nodeType":"210","messageId":"211","endLine":13,"endColumn":22},{"ruleId":"208","severity":1,"message":"237","line":1,"column":17,"nodeType":"210","messageId":"211","endLine":1,"endColumn":25},{"ruleId":"208","severity":1,"message":"268","line":2,"column":10,"nodeType":"210","messageId":"211","endLine":2,"endColumn":14},{"ruleId":"208","severity":1,"message":"269","line":9,"column":10,"nodeType":"210","messageId":"211","endLine":9,"endColumn":17},{"ruleId":"208","severity":1,"message":"270","line":9,"column":19,"nodeType":"210","messageId":"211","endLine":9,"endColumn":29},{"ruleId":"208","severity":1,"message":"271","line":172,"column":7,"nodeType":"210","messageId":"211","endLine":172,"endColumn":13},{"ruleId":"208","severity":1,"message":"272","line":4,"column":8,"nodeType":"210","messageId":"211","endLine":4,"endColumn":18},{"ruleId":"208","severity":1,"message":"268","line":5,"column":10,"nodeType":"210","messageId":"211","endLine":5,"endColumn":14},{"ruleId":"208","severity":1,"message":"273","line":5,"column":22,"nodeType":"210","messageId":"211","endLine":5,"endColumn":30},{"ruleId":"208","severity":1,"message":"274","line":6,"column":10,"nodeType":"210","messageId":"211","endLine":6,"endColumn":21},{"ruleId":"208","severity":1,"message":"275","line":7,"column":8,"nodeType":"210","messageId":"211","endLine":7,"endColumn":14},{"ruleId":"208","severity":1,"message":"259","line":7,"column":8,"nodeType":"210","messageId":"211","endLine":7,"endColumn":18},{"ruleId":"208","severity":1,"message":"276","line":8,"column":8,"nodeType":"210","messageId":"211","endLine":8,"endColumn":14},{"ruleId":"208","severity":1,"message":"266","line":9,"column":8,"nodeType":"210","messageId":"211","endLine":9,"endColumn":15},{"ruleId":"208","severity":1,"message":"265","line":10,"column":8,"nodeType":"210","messageId":"211","endLine":10,"endColumn":12},{"ruleId":"208","severity":1,"message":"209","line":11,"column":10,"nodeType":"210","messageId":"211","endLine":11,"endColumn":14},{"ruleId":"208","severity":1,"message":"238","line":18,"column":3,"nodeType":"210","messageId":"211","endLine":18,"endColumn":12},{"ruleId":"208","severity":1,"message":"260","line":23,"column":3,"nodeType":"210","messageId":"211","endLine":23,"endColumn":18},{"ruleId":"208","severity":1,"message":"277","line":29,"column":7,"nodeType":"210","messageId":"211","endLine":29,"endColumn":14},{"ruleId":"261","severity":1,"message":"262","line":54,"column":3,"nodeType":"263","messageId":"264","endLine":56,"endColumn":4},{"ruleId":"208","severity":1,"message":"271","line":167,"column":7,"nodeType":"210","messageId":"211","endLine":167,"endColumn":13},{"ruleId":"208","severity":1,"message":"278","line":171,"column":7,"nodeType":"210","messageId":"211","endLine":171,"endColumn":14},"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'title' is assigned a value but never used.","'setnotificationData' is assigned a value but never used.","no-native-reassign",["279"],"no-negated-in-lhs",["280"],"'SubMenu' is defined but never used.","'Category' is defined but never used.","'Star' is defined but never used.",["279"],["280"],"'useEffect' is defined but never used.","'place' is assigned a value but never used.","'setPlace' is assigned a value but never used.","'FacebookLoginButton' is defined but never used.","'token' is assigned a value but never used.","'notificationHandler' is defined but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock",["279"],["280"],"'Redirect' is defined but never used.","'useIntl' is defined but never used.","'useState' is defined but never used.","'CardMedia' is defined but never used.","'Button' is defined but never used.","'IoPinOutline' is defined but never used.","'Card' is defined but never used.","'CardContent' is defined but never used.","'CardActionArea' is defined but never used.","'Typography' is defined but never used.","'Modal' is defined but never used.","'notificationHandle' is defined but never used.","'Col' is defined but never used.","'products' is assigned a value but never used.","'total' is assigned a value but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","'IoLogoBuffer' is defined but never used.","'IoAdd' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'first' is assigned a value but never used.","'IconButton' is defined but never used.","'GridListTileBar' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'Sort' is defined but never used.","'Groupby' is defined but never used.","'changeHandler' is assigned a value but never used.","'Form' is defined but never used.","'signdUp' is assigned a value but never used.","'setsigndUp' is assigned a value but never used.","'images' is assigned a value but never used.","'MediaQuery' is defined but never used.","'Dropdown' is defined but never used.","'FaPencilAlt' is defined but never used.","'Person' is defined but never used.","'Search' is defined but never used.","'Wrapper' is assigned a value but never used.","'ownerId' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]