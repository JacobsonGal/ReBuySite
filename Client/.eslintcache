[{"C:\\Users\\Amit\\Documents\\GitHub\\ReBuySite\\Client\\src\\Components\\Pages\\Home\\Home.js":"1","C:\\Users\\Amit\\Documents\\GitHub\\ReBuySite\\Client\\src\\Components\\Pages\\Map\\GoogleMap.js":"2","C:\\Users\\Amit\\Documents\\GitHub\\ReBuySite\\Client\\src\\Components\\Pages\\Home\\Groupby.js":"3"},{"size":535,"mtime":1618397390350,"results":"4","hashOfConfig":"5"},{"size":4025,"mtime":1618399073884,"results":"6","hashOfConfig":"5"},{"size":1798,"mtime":1618399767421,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"19oexd0",{"filePath":"10","messages":"11","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"12","messages":"13","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Amit\\Documents\\GitHub\\ReBuySite\\Client\\src\\Components\\Pages\\Home\\Home.js",[],"C:\\Users\\Amit\\Documents\\GitHub\\ReBuySite\\Client\\src\\Components\\Pages\\Map\\GoogleMap.js",["14"],"C:\\Users\\Amit\\Documents\\GitHub\\ReBuySite\\Client\\src\\Components\\Pages\\Home\\Groupby.js",["15","16","17","18"],{"ruleId":"19","severity":1,"message":"20","line":63,"column":14,"nodeType":"21","messageId":"22","endLine":63,"endColumn":19},{"ruleId":"19","severity":1,"message":"23","line":2,"column":16,"nodeType":"21","messageId":"22","endLine":2,"endColumn":22},{"ruleId":"19","severity":1,"message":"24","line":2,"column":24,"nodeType":"21","messageId":"22","endLine":2,"endColumn":27},{"ruleId":"19","severity":1,"message":"25","line":6,"column":10,"nodeType":"21","messageId":"22","endLine":6,"endColumn":18},{"ruleId":"26","severity":1,"message":"27","line":9,"column":13,"nodeType":"28","endLine":20,"endColumn":4},"no-unused-vars","'first' is assigned a value but never used.","Identifier","unusedVar","'Button' is defined but never used.","'Col' is defined but never used.","'products' is assigned a value but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression"]