[{"/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/Client/src/Components/Pages/Home/Products.js":"1","/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/Client/src/Layout.js":"2","/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/Client/src/Components/SSO/Config.js":"3","/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/Client/src/Components/NavBar/MobileBar.js":"4","/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/Client/src/Components/Pages/Home/Create.js":"5","/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/Client/src/Components/Pages/Settings/ProfileSettings.js":"6","/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/Client/src/Components/SSO/LogIn.js":"7","/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/Client/src/Components/Pages/Map/GoogleMap.js":"8","/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/Client/src/Components/Utils/PopUp.js":"9","/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/Client/src/Components/Utils/PageBody.js":"10","/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/Client/src/Components/NavBar/SideBar.js":"11","/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/Client/src/Components/Utils/Page.js":"12","/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/Client/src/Components/Pages/Home/Home.js":"13","/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/Client/src/Components/Pages/Home/Sort.js":"14"},{"size":9789,"mtime":1618311181762,"results":"15","hashOfConfig":"16"},{"size":6505,"mtime":1618148462710,"results":"17","hashOfConfig":"16"},{"size":506,"mtime":1616345228879,"results":"18","hashOfConfig":"16"},{"size":2138,"mtime":1616017594447,"results":"19","hashOfConfig":"16"},{"size":6898,"mtime":1618310463783,"results":"20","hashOfConfig":"16"},{"size":3906,"mtime":1618148462709,"results":"21","hashOfConfig":"16"},{"size":2588,"mtime":1616604342865,"results":"22","hashOfConfig":"16"},{"size":3673,"mtime":1618253184867,"results":"23","hashOfConfig":"16"},{"size":2084,"mtime":1618253184871,"results":"24","hashOfConfig":"16"},{"size":1162,"mtime":1616017500273,"results":"25","hashOfConfig":"16"},{"size":3718,"mtime":1618312302311,"results":"26","hashOfConfig":"16"},{"size":1372,"mtime":1616017738941,"results":"27","hashOfConfig":"16"},{"size":514,"mtime":1618148462697,"results":"28","hashOfConfig":"16"},{"size":441,"mtime":1618221697569,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"kn6s5o",{"filePath":"32","messages":"33","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"35"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"52"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"35"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/Client/src/Components/Pages/Home/Products.js",["66","67","68","69","70","71","72","73","74"],"/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/Client/src/Layout.js",["75","76","77"],"import React, { useState, useContext } from \"react\";\nimport { BrowserRouter, Route, Switch, Link } from \"react-router-dom\";\nimport { useIntl } from \"react-intl\";\nimport SideBar from \"./Components/NavBar/SideBar\";\nimport MobileBar from \"./Components/NavBar/MobileBar\";\nimport LoadingOverlay from \"react-loading-overlay\";\nimport Icon from \"./Assets/Images/ReBuyLogoTrans.png\";\nimport Home from \"./Components/Pages/Home/Home\";\nimport Map from \"./Components/Pages/Map/Map\";\nimport Favorites from \"./Components/Pages/Favorites/Favorites\";\nimport MainSettings from \"./Components/Pages/Settings/MainSettings\";\nimport UserSettings from \"./Components/Pages/Settings/ProfileSettings\";\nimport Product from \"./Components/Pages/Home/Product\";\nimport ProductInsert from \"./Components/Pages/Home/Create\";\nimport ProductUpload from \"./Components/Pages/Home/Update\";\nimport { AuthContext } from \"./Components/SSO/Auth\";\nimport Registration from \"./Components/SSO/Registration\";\n\nexport default function Layout({ setLocale, setActive, isActive }) {\n  const intl = useIntl();\n  const [rtl, setRtl] = useState(true);\n  const [collapsed, setCollapsed] = useState(false);\n  const [image, setImage] = useState(false);\n  const [toggled, setToggled] = useState(true);\n  const [title, setTitle] = useState(\"ReBuy\");\n  const [notificationData, setnotificationData] = useState();\n  const count = notificationData ? notificationData.length : 0;\n  const [notificationCount, setNotificationCount] = useState(count);\n  const { currentUser } = useContext(AuthContext);\n\n  const handleCollapsedChange = (checked) => {\n    setCollapsed(checked);\n  };\n\n  const handleRtlChange = (checked) => {\n    setRtl(checked);\n    setLocale(checked ? \"he\" : \"en\");\n  };\n  const handleImageChange = (checked) => {\n    setImage(checked);\n  };\n\n  const handleToggleSidebar = () => {\n    setToggled(!toggled);\n  };\n  return (\n    <LoadingOverlay\n      active={isActive}\n      fadeSpeed={10000}\n      spinner={\n        <div\n          style={{\n            animation: \"spin 1.5s linear infinite\",\n          }}\n        >\n          <img src={Icon} alt={\"Icon\"} style={{ width: \"30%\" }} />\n        </div>\n      }\n      styles={{\n        wrapper: {},\n        overlay: (base) => ({\n          ...base,\n          backgroundColor: \"#f1f7fb\",\n          opacity: \"0.9\",\n          height: \"100%\",\n          position: \"fixed\",\n        }),\n      }}\n    >\n      {isActive || currentUser ? (\n        <BrowserRouter>\n          <Switch>\n            <div\n              className={`app ${rtl ? \"rtl\" : \"\"} ${toggled ? \"toggled\" : \"\"}`}\n            >\n              <div className=\"main-container\">\n                <div className=\"sideBar\">\n                  <SideBar\n                    image={image}\n                    collapsed={collapsed}\n                    rtl={rtl}\n                    toggled={toggled}\n                    handleToggleSidebar={handleToggleSidebar}\n                    handleCollapsedChange={handleCollapsedChange}\n                    handleRtlChange={handleRtlChange}\n                    handleImageChange={handleImageChange}\n                    notificationCount={notificationCount}\n                    setNotificationCount={setNotificationCount}\n                    setLoading={setActive}\n                    loading={isActive}\n                  />\n                </div>\n                <MobileBar\n                  handleToggleSidebar={handleToggleSidebar}\n                  notificationCount={notificationCount}\n                  setNotificationCount={setNotificationCount}\n                />\n                <div className={`mainPage ${toggled ? \"toggled\" : \"\"}`}>\n                  {/* {!isSignIn() ? (\n                  <Route exact path=\"/\">\n                    <Authentication />\n                  </Route>\n                ) : (\n                  <> */}\n                  <Route exact path=\"/\">\n                    <Home\n                      title={intl.formatMessage({ id: \"Home\" })}\n                      setTitle={setTitle}\n                      setActive={setActive}\n                    />\n                  </Route>\n                  <Route exact path=\"/Map\">\n                    <Map\n                      title={intl.formatMessage({ id: \"Map\" })}\n                      setTitle={setTitle}\n                      setActive={setActive}\n                    />\n                  </Route>\n                  <Route exact path=\"/Upload\">\n                    <ProductInsert\n                      title={intl.formatMessage({ id: \"Upload\" })}\n                      setTitle={setTitle}\n                      setActive={setActive}\n                    />\n                  </Route>\n                  <Route path=\"/Update/:id\">\n                    <ProductUpload\n                      title={intl.formatMessage({ id: \"Update\" })}\n                      setTitle={setTitle}\n                      setActive={setActive}\n                    />\n                  </Route>\n                  <Route path=\"/Product/:id\">\n                    <Product\n                      title={intl.formatMessage({ id: \"Product\" })}\n                      setTitle={setTitle}\n                      setActive={setActive}\n                    />\n                  </Route>\n                  <Route exact path=\"/Favorites\">\n                    <Favorites\n                      title={intl.formatMessage({ id: \"Favorites\" })}\n                      setTitle={setTitle}\n                      setActive={setActive}\n                    />\n                  </Route>\n                  <Route exact path=\"/settings/userSettings\">\n                    <UserSettings\n                      title={intl.formatMessage({ id: \"profile\" })}\n                      setTitle={setTitle}\n                    />\n                  </Route>\n                  <Route exact path=\"/settings/mainSettings\">\n                    <MainSettings\n                      title={intl.formatMessage({ id: \"settings\" })}\n                      setTitle={setTitle}\n                    />\n                  </Route>\n                  {/* </>\n                )} */}\n                </div>\n              </div>\n            </div>\n          </Switch>\n        </BrowserRouter>\n      ) : (\n        <div className={`app ${rtl ? \"rtl\" : \"\"} ${toggled ? \"toggled\" : \"\"}`}>\n          <div className=\"main-container\">\n            <div className={`mainPage ${toggled ? \"toggled\" : \"\"}`}>\n              <Registration />\n            </div>\n          </div>\n        </div>\n      )}\n\n      {setActive(false)}\n    </LoadingOverlay>\n  );\n}\n",["78","79"],"/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/Client/src/Components/SSO/Config.js",[],"/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/Client/src/Components/NavBar/MobileBar.js",[],"/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/Client/src/Components/Pages/Home/Create.js",["80"],"/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/Client/src/Components/Pages/Settings/ProfileSettings.js",["81","82","83","84","85","86"],"/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/Client/src/Components/SSO/LogIn.js",["87"],"/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/Client/src/Components/Pages/Map/GoogleMap.js",["88"],"import React, { Component } from \"react\";\nimport api from \"../../../API/API\";\nimport GoogleMapReact from \"google-map-react\";\nimport Marker from \"./Marker\";\nimport Geocode from \"react-geocode\";\nGeocode.setApiKey(\"AIzaSyDzTw-IhXNRYDH1QpvVVNp_ix9AzFC0McM\");\nGeocode.setLanguage(\"He\");\nGeocode.setRegion(\"Il\");\nGeocode.setLocationType(\"ROOFTOP\");\nGeocode.enableDebug();\n\nexport default class GoogleMap extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      products: [],\n      images: [],\n      locations: [{}],\n      center: {\n        lat: 31.96996095111596,\n        lng: 34.77278720495645,\n      },\n      zoom: 10,\n    };\n  }\n\n  componentDidMount = async () => {\n    this.setState({ isLoading: true });\n    try {\n      await api.getAllProducts().then((product) => {\n        this.setState({\n          products: product.data.data,\n        });\n      });\n      await api.getAllImages().then((image) => {\n        this.setState({\n          images: image.data.data,\n        });\n        this.props.setLoading(false);\n      });\n    } catch (error) {\n      console.log(error);\n    }\n    this.state.products.map(\n      (p, i) =>\n        p[\"address\"] &&\n        Geocode.fromAddress(p[\"address\"]).then(\n          // Geocode.fromAddress(\"RISHON-LE-ZION\").then(\n          (response) => {\n            var { lat, lng } = response.results[0].geometry.location;\n            lat = lat + i * 0.005;\n            lng = lng + i * 0.005;\n            this.setState({\n              locations: this.state.locations.concat([{ lat, lng }]),\n            });\n            // console.log(this.state.locations);\n          },\n          (error) => {\n            console.error(error);\n          }\n        )\n    );\n    this.setState((state) => {\n      const [first, ...rest] = state.locations;\n      return {\n        locations: rest,\n      };\n    });\n  };\n\n  render() {\n    const { products, images, center, zoom, locations } = this.state;\n    function getMapOptions(maps) {\n      return {\n        streetViewControl: true,\n        scaleControl: true,\n        fullscreenControl: true,\n        styles: [\n          {\n            featureType: \"poi.business\",\n            elementType: \"labels\",\n            stylers: [\n              {\n                visibility: \"off\",\n              },\n            ],\n          },\n        ],\n        gestureHandling: \"greedy\",\n        disableDoubleClickZoom: true,\n        minZoom: 0,\n        maxZoom: 30,\n        layerTypes: [\"TrafficLayer\"],\n        mapTypeControl: true,\n        mapTypeId: maps.MapTypeId.ROADMAP,\n        mapTypeControlOptions: {\n          style: maps.MapTypeControlStyle.DROPDOWN_MENU,\n          position: maps.ControlPosition.RIGHT_CENTER,\n          mapTypeIds: [\n            maps.MapTypeId.ROADMAP,\n            maps.MapTypeId.SATELLITE,\n            maps.MapTypeId.HYBRID,\n          ],\n        },\n        zoomControl: true,\n        clickableIcons: false,\n      };\n    }\n    return (\n      <div style={{ height: \"96vh\", width: \"100%\" }}>\n        <GoogleMapReact\n          bootstrapURLKeys={{\n            key: \"AIzaSyAiTqUoIPktHrM66nIC7fRevgXvj7BzN-A\",\n            language: \"he\",\n            region: \"il\",\n          }}\n          defaultCenter={center}\n          defaultZoom={zoom}\n          options={getMapOptions}\n        >\n          {products.map((product, i) => {\n            return (\n              <Marker\n                lat={locations[i] ? locations[i].lat : null}\n                lng={locations[i] ? locations[i].lng : null}\n                product={product}\n                images={images}\n                key={product[\"name\"]}\n              />\n            );\n          })}\n        </GoogleMapReact>\n      </div>\n    );\n  }\n}\n","/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/Client/src/Components/Utils/PopUp.js",["89","90","91","92"],"import React, { useState } from \"react\";\nimport {\n  Card,\n  CardContent,\n  CardActionArea,\n  CardMedia,\n  Typography,\n  Button,\n} from \"@material-ui/core\";\nimport reBuy from \"../../Assets/Images/ReBuyLogoBig.png\";\nimport Modal from \"react-modal\";\nimport { IoPinOutline } from \"react-icons/io5\";\n\nexport default function Marker({ product, setIsModelOpen, isModelOpen }) {\n  let img = product[\"image\"]\n    ? `http://localhost:3000/${product[\"images\"][0]}`\n    : reBuy;\n\n  return (\n    <div>\n      <Modal\n        style={{\n          overlay: {\n            zIndex: \"999\",\n            margin: \"auto\",\n          },\n          content: {\n            inset: \"0px\",\n            height: \"fit-content\",\n            width: \"fit-content\",\n            direction: \"rtl\",\n            padding: \"10px\",\n            margin: \"auto\",\n            borderRadius: \"15px\",\n            boxShadow: \"1px 1px 5px 1px #e5eefa\",\n          },\n        }}\n        isOpen={isModelOpen}\n        onRequestClose={() => setIsModelOpen(false)}\n      >\n        {product && (\n          <Card\n            style={{\n              width: \"20rem\",\n              height: \"20rem\",\n              border: \"1px solid #ececec\",\n              borderRadius: \"15px\",\n            }}\n          >\n            <CardActionArea>\n              <CardMedia\n                image={`http://localhost:3000/${product[\"images\"][0]}`}\n                title=\"Contemplative Reptile\"\n                style={{ height: 140 }}\n              />\n              <CardContent>\n                <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                  <p>{product[\"name\"]}</p>\n                  <p>{product[\"price\"]}</p>\n                </Typography>\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                  <p>Seller:{product[\"ownerId\"]}</p>\n                  <p>Description:{product[\"description\"]}</p>\n                  <p>Condition:{product[\"condition\"]}</p>\n                </Typography>\n              </CardContent>\n            </CardActionArea>\n          </Card>\n        )}\n      </Modal>\n    </div>\n  );\n}\n",["93","94"],"/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/Client/src/Components/Utils/PageBody.js",["95","96","97"],"import React from \"react\";\nimport { IoLogoBuffer, IoAdd } from \"react-icons/io5\";\nimport { Button } from \"@material-ui/core\";\nimport { Link } from \"react-router-dom\";\n\nexport default function PageBody({ color, boldPar, par, pic, to, button }) {\n  return (\n    <div\n      style={{\n        textAlign: \"center\",\n        margin: \"2rem\",\n        height: \"90%\",\n        borderRadius: \"50px\",\n        backgroundColor: color,\n        color: \"gray\",\n      }}\n    >\n      <img src={pic} style={{ marginTop: \"40px\", height: \"50px\" }} />\n      <p style={{ margin: \"2rem\" }}>\n        <b style={{ display: \"block\" }}>{boldPar}</b> {par}\n      </p>\n      <Link to={to}>\n        <Button\n          style={{\n            textAlign: \"center\",\n            margin: \"1rem\",\n            padding: \"1rem\",\n            height: \"90%\",\n            textOverflow: \"ellipsis\",\n            whiteSpace: \"nowrap\",\n            width: \"auto\",\n            background: \"#343798\",\n            color: \"white\",\n            borderRadius: \"66px 66px 66px 66px\",\n            boxShadow: \"0px 0px 10px 0px\",\n          }}\n        >\n          <h5>{button}</h5>\n        </Button>\n      </Link>\n    </div>\n  );\n}\n","/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/Client/src/Components/NavBar/SideBar.js",["98","99","100"],"import React from \"react\";\nimport { useIntl } from \"react-intl\";\nimport { NavLink } from \"react-router-dom\";\nimport {\n  ProSidebar,\n  Menu,\n  MenuItem,\n  SidebarHeader,\n  SidebarFooter,\n  SidebarContent,\n  SubMenu,\n} from \"react-pro-sidebar\";\nimport logo from \"../../Assets/ReBuy.jpeg\";\nimport Home from \"@material-ui/icons/HomeRounded\";\nimport Map from \"@material-ui/icons/MapRounded\";\nimport Category from \"@material-ui/icons/CategoryRounded\";\nimport Star from \"@material-ui/icons/StarRounded\";\nimport Upload from \"@material-ui/icons/ArrowUpwardRounded\";\nimport Instagram from \"@material-ui/icons/Instagram\";\nimport Facebook from \"@material-ui/icons/Facebook\";\nimport TopBar from \"./TopBar\";\nimport User from \"./User\";\n\nexport default function SideBar({\n  image,\n  collapsed,\n  rtl,\n  toggled,\n  email,\n  handleToggleSidebar,\n  handleCollapsedChange,\n  handleRtlChange,\n  handleImageChange,\n  setSeen,\n  notificationCount,\n  setNotificationCount,\n  setLoading,\n}) {\n  const intl = useIntl();\n  return (\n    <div className=\"sideBar\">\n      <ProSidebar\n        // image={image ? sidebarBg : false}\n        rtl={rtl}\n        collapsed={collapsed}\n        toggled={toggled}\n        breakPoint=\"md\"\n        onToggle={handleToggleSidebar}\n      >\n        <SidebarHeader>\n          <TopBar\n            toggled={toggled}\n            handleToggleSidebar={handleToggleSidebar}\n            notificationCount={notificationCount}\n            setNotificationCount={setNotificationCount}\n            main={false}\n          />\n        </SidebarHeader>\n        <SidebarContent>\n          <Menu iconShape=\"circle\">\n            <MenuItem icon={<Home />}>\n              <NavLink to=\"/\" onClick={handleToggleSidebar}>\n                {intl.formatMessage({ id: \"Home\" })}\n              </NavLink>\n            </MenuItem>\n            <MenuItem icon={<Map />}>\n              <NavLink to=\"/Map\" onClick={handleToggleSidebar}>\n                {intl.formatMessage({ id: \"Map\" })}\n              </NavLink>\n            </MenuItem>\n            <MenuItem icon={<Upload />}>\n              <NavLink to=\"/Upload\" onClick={handleToggleSidebar}>\n                {intl.formatMessage({ id: \"Upload\" })}\n              </NavLink>\n            </MenuItem>\n            {/* <MenuItem icon={<Star />}>\n              <NavLink to=\"/Favorites\" onClick={handleToggleSidebar}>\n                {intl.formatMessage({ id: \"Favorites\" })}\n              </NavLink>\n            </MenuItem> */}\n            {/* <SubMenu\n              title={intl.formatMessage({ id: \"Catagories\" })}\n              icon={<Category />}\n            >\n              <MenuItem>Clothes</MenuItem>\n              <MenuItem>Tech</MenuItem>\n              <MenuItem>Music</MenuItem>\n              <MenuItem>Gadgets</MenuItem>\n            </SubMenu> */}\n          </Menu>\n\n          <User handleToggleSidebar={handleToggleSidebar} />\n        </SidebarContent>\n        <SidebarFooter className=\"sideBarFooter\">\n          <div className=\"sidebar-btn-wrapper\">\n            <a\n              iconShape=\"circle\"\n              href=\"https://www.facebook.com/ReBuyPlatform\"\n              className=\"sidebar-btn\"\n            >\n              <span>\n                {\"    ReBuy \"} {new Date().getFullYear()}\n                {\"  \"}\n                <img\n                  src={logo}\n                  alt=\"Logo\"\n                  style={{\n                    width: \"1.5rem\",\n                    height: \"1.5rem\",\n                    filter: \"grayscale(100%)\",\n                    opacity: \"0.9\",\n                  }}\n                />\n                <Facebook />\n                <Instagram />\n              </span>\n            </a>\n          </div>\n        </SidebarFooter>\n      </ProSidebar>\n    </div>\n  );\n}\n","/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/Client/src/Components/Utils/Page.js",["101"],"import React from \"react\";\nimport { useIntl } from \"react-intl\";\nimport PageBody from \"./PageBody\";\nimport LoadingOverlay from \"react-loading-overlay\";\nimport icon from \"../../Assets/Images/ReBuyLogoTrans.png\";\n\nexport default function Page({\n  onlyTop,\n  data,\n  title,\n  setTitle,\n  color,\n  boldPar,\n  par,\n  pic,\n  to,\n  button,\n  children,\n  loading,\n  setEdit,\n  edit,\n  share,\n  setShare,\n  dots,\n  editdisabled,\n  add,\n  FAB,\n  print,\n  setPrint,\n  printArr,\n  setPrintArr,\n  dataArr,\n  main,\n  shareRecord,\n  type,\n}) {\n  document.title = \"ReBuy | \" + title;\n  setTitle(title);\n  function Body() {\n    return children ? (\n      children\n    ) : !loading ? (\n      <PageBody\n        data={data}\n        color={color}\n        boldPar={boldPar}\n        par={par}\n        pic={pic}\n        to={to}\n        button={button}\n      />\n    ) : null;\n  }\n\n  return (\n    <div>\n      <LoadingOverlay\n        active={loading}\n        spinner={<img src={icon} className=\"pageLoader\" alt=\"loader\" />}\n        styles={{\n          wrapper: {},\n          overlay: (base) => ({\n            ...base,\n            height: \"110%\",\n            backgroundColor: \"#f5f7fb\",\n            opacity: \"0.7\",\n          }),\n        }}\n      >\n        {!loading ? (\n          <div className=\"page\">\n            <Body />\n          </div>\n        ) : null}\n      </LoadingOverlay>\n    </div>\n  );\n}\n","/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/Client/src/Components/Pages/Home/Home.js",[],"/Users/jacobsonpro/GitHub/ReBuy/ReBuySite/Client/src/Components/Pages/Home/Sort.js",["102","103"],{"ruleId":"104","severity":1,"message":"105","line":7,"column":8,"nodeType":"106","messageId":"107","endLine":7,"endColumn":18},{"ruleId":"104","severity":1,"message":"108","line":10,"column":10,"nodeType":"106","messageId":"107","endLine":10,"endColumn":14},{"ruleId":"104","severity":1,"message":"109","line":17,"column":3,"nodeType":"106","messageId":"107","endLine":17,"endColumn":12},{"ruleId":"104","severity":1,"message":"110","line":22,"column":3,"nodeType":"106","messageId":"107","endLine":22,"endColumn":18},{"ruleId":"111","severity":1,"message":"112","line":53,"column":3,"nodeType":"113","messageId":"114","endLine":55,"endColumn":4},{"ruleId":"104","severity":1,"message":"115","line":124,"column":31,"nodeType":"106","messageId":"107","endLine":124,"endColumn":40},{"ruleId":"104","severity":1,"message":"116","line":174,"column":9,"nodeType":"106","messageId":"107","endLine":174,"endColumn":16},{"ruleId":"104","severity":1,"message":"117","line":175,"column":9,"nodeType":"106","messageId":"107","endLine":175,"endColumn":27},{"ruleId":"104","severity":1,"message":"118","line":181,"column":12,"nodeType":"106","messageId":"107","endLine":181,"endColumn":25},{"ruleId":"104","severity":1,"message":"108","line":2,"column":40,"nodeType":"106","messageId":"107","endLine":2,"endColumn":44},{"ruleId":"104","severity":1,"message":"119","line":25,"column":10,"nodeType":"106","messageId":"107","endLine":25,"endColumn":15},{"ruleId":"104","severity":1,"message":"120","line":26,"column":28,"nodeType":"106","messageId":"107","endLine":26,"endColumn":47},{"ruleId":"121","replacedBy":"122"},{"ruleId":"123","replacedBy":"124"},{"ruleId":"104","severity":1,"message":"125","line":159,"column":7,"nodeType":"106","messageId":"107","endLine":159,"endColumn":13},{"ruleId":"104","severity":1,"message":"126","line":1,"column":17,"nodeType":"106","messageId":"107","endLine":1,"endColumn":25},{"ruleId":"104","severity":1,"message":"127","line":2,"column":10,"nodeType":"106","messageId":"107","endLine":2,"endColumn":17},{"ruleId":"104","severity":1,"message":"128","line":3,"column":8,"nodeType":"106","messageId":"107","endLine":3,"endColumn":18},{"ruleId":"104","severity":1,"message":"129","line":4,"column":10,"nodeType":"106","messageId":"107","endLine":4,"endColumn":14},{"ruleId":"104","severity":1,"message":"130","line":4,"column":22,"nodeType":"106","messageId":"107","endLine":4,"endColumn":30},{"ruleId":"104","severity":1,"message":"131","line":5,"column":10,"nodeType":"106","messageId":"107","endLine":5,"endColumn":21},{"ruleId":"104","severity":1,"message":"132","line":33,"column":13,"nodeType":"106","messageId":"107","endLine":33,"endColumn":18},{"ruleId":"104","severity":1,"message":"133","line":64,"column":14,"nodeType":"106","messageId":"107","endLine":64,"endColumn":19},{"ruleId":"104","severity":1,"message":"126","line":1,"column":17,"nodeType":"106","messageId":"107","endLine":1,"endColumn":25},{"ruleId":"104","severity":1,"message":"134","line":8,"column":3,"nodeType":"106","messageId":"107","endLine":8,"endColumn":9},{"ruleId":"104","severity":1,"message":"135","line":12,"column":10,"nodeType":"106","messageId":"107","endLine":12,"endColumn":22},{"ruleId":"104","severity":1,"message":"136","line":15,"column":7,"nodeType":"106","messageId":"107","endLine":15,"endColumn":10},{"ruleId":"121","replacedBy":"137"},{"ruleId":"123","replacedBy":"138"},{"ruleId":"104","severity":1,"message":"139","line":2,"column":10,"nodeType":"106","messageId":"107","endLine":2,"endColumn":22},{"ruleId":"104","severity":1,"message":"140","line":2,"column":24,"nodeType":"106","messageId":"107","endLine":2,"endColumn":29},{"ruleId":"141","severity":1,"message":"142","line":18,"column":7,"nodeType":"143","endLine":18,"endColumn":70},{"ruleId":"104","severity":1,"message":"144","line":11,"column":3,"nodeType":"106","messageId":"107","endLine":11,"endColumn":10},{"ruleId":"104","severity":1,"message":"145","line":16,"column":8,"nodeType":"106","messageId":"107","endLine":16,"endColumn":16},{"ruleId":"104","severity":1,"message":"146","line":17,"column":8,"nodeType":"106","messageId":"107","endLine":17,"endColumn":12},{"ruleId":"104","severity":1,"message":"127","line":2,"column":10,"nodeType":"106","messageId":"107","endLine":2,"endColumn":17},{"ruleId":"104","severity":1,"message":"126","line":1,"column":17,"nodeType":"106","messageId":"107","endLine":1,"endColumn":25},{"ruleId":"104","severity":1,"message":"129","line":2,"column":10,"nodeType":"106","messageId":"107","endLine":2,"endColumn":14},"no-unused-vars","'IconButton' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'CardMedia' is defined but never used.","'GridListTileBar' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'isLoading' is assigned a value but never used.","'history' is assigned a value but never used.","'cardOnClickHandler' is assigned a value but never used.","'productImages' is defined but never used.","'title' is assigned a value but never used.","'setnotificationData' is assigned a value but never used.","no-native-reassign",["147"],"no-negated-in-lhs",["148"],"'images' is assigned a value but never used.","'useState' is defined but never used.","'useIntl' is defined but never used.","'MediaQuery' is defined but never used.","'Form' is defined but never used.","'Dropdown' is defined but never used.","'FaPencilAlt' is defined but never used.","'token' is assigned a value but never used.","'first' is assigned a value but never used.","'Button' is defined but never used.","'IoPinOutline' is defined but never used.","'img' is assigned a value but never used.",["147"],["148"],"'IoLogoBuffer' is defined but never used.","'IoAdd' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'SubMenu' is defined but never used.","'Category' is defined but never used.","'Star' is defined but never used.","no-global-assign","no-unsafe-negation"]